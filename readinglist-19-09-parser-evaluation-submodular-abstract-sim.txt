Before Submodular: 
18
acl-P88-1031 - {'abstract': ['A general device for handling nondeterminism in stack operations is described.', 'The device, called a Graph-structured Stack can eliminate duplication of operations throughout the nondeterministic processes.', 'This paper then applies the graph-structured stack to various natural language parsing methods, including ATN, LA parsing, categorial grammar and principle-based parsing.', 'The relationship between the graph-structured stack and a chart in chart parsing is also discussed.'], 'title': 'Graph-Structured Stack and Natural Language Parsing', 'type': 'unknown', 'id': 'acl-P88-1031', 'book': 'Annual Meeting of the Association for Computational Linguistics', 'url': 'https://aclweb.org/anthology/P88-1031', 'authors': ['Masaru Tomita'], 'year': 1988, 'score': 0.7512082911136091}
acl-A00-2033 - {'abstract': ['A long-standing issue regarding algorithms that manipulate context-free grammars (CFGs) in a "topdown" left-to-right fashion is that left recursion can lead to nontermination.', 'An algorithm is known that transforms any CFG into an equivalent non-left-recursive CFG, but the resulting grammars are often too large for practical use.', 'We present a new method for removing left recursion from CFGs that is both theoretically superior to the standard algorithm, and produces very compact non-left-recursive CFGs in practice.'], 'title': 'Removing Left Recursion from Context-Free Grammars', 'type': 'unknown', 'id': 'acl-A00-2033', 'book': 'Applied Natural Language Processing Conference and Meeting of the North American Association for Computational Linguistics', 'url': 'https://aclweb.org/anthology/A00-2033', 'authors': ['Robert C. Moore'], 'year': 2000, 'score': 0.6870728125739042}
acl-P89-1029 - {'abstract': ['The offline parsable grammars apparently have enough formal power to describe human language, yet the parsing problem for these grammars is solvable.', 'Unfortunately they exclude grammars that use x-bar theory - and these grammars have strong linguistic justification.', 'We define a more general class of unification grammars, which admits x-bar grammars while preserving the desirable properties of offline parsable grammars.', 'Consider a unification grammar based on term unification.', 'A typical rule has the form to --> ti tn where to is a term of first order logic, and ti...tn are either terms or terminal symbols.', 'Those ti which are terms are called the top-level terms of the rule.', 'Suppose that no top-level term is a variable.', 'Then erasing the arguments of the top-level terms gives a new rule'], 'title': 'A Generalization of the Offline Parsable Grammars', 'type': 'unknown', 'id': 'acl-P89-1029', 'book': 'Annual Meeting of the Association for Computational Linguistics', 'url': 'https://aclweb.org/anthology/P89-1029', 'authors': ['Andrew R. Haas'], 'year': 1989, 'score': 0.5964853664965046}
acl-C02-1066 - {'abstract': ['Unification grammars are known to be Turing-equivalent; given a grammar and a word , it is undecidable whether .', 'In order to ensure decidability, several constraints on grammars, commonly known as off-line parsability (OLP) were suggested.', 'The recognition problem is decidable for grammars which satisfy OLP.', 'An open question is whether it is decidable if a given grammar satisfies OLP.', 'In this paper we investigate various definitions of OLP, discuss their interrelations and show that some of them are undecidable.'], 'title': 'Guaranteeing Parsing Termination of Unification Grammars', 'type': 'unknown', 'id': 'acl-C02-1066', 'book': 'International Conference on Computational Linguistics', 'url': 'https://aclweb.org/anthology/C02-1066', 'authors': ['Efrat Jaeger', 'Nissim Francez', 'Shuly Wintner'], 'year': 2002, 'score': 0.5886567533272893}
acl-J89-4001 - {'abstract': ['We describe a table-driven parser for unification grammar that combines bottom-up construction of phrases with top-down filtering.', 'This algorithm works on a class of grammars called depth-bounded grammars, and it is guaranteed to halt for any input string.', 'Unlike many unification parsers, our algorithm works directly on a unification grammarit does not require that we divide the grammar into a context-free "backbone" and a set of feature agreement constraints.', 'We give a detailed proof of correctness.', 'For the case of a pure bottom-up parser, our proof does not rely on the details of unification it works for any pattern-matching technique that satisfies certain simple conditions.'], 'title': 'A Parsing Algorithm for Unification Grammar', 'type': 'unknown', 'id': 'acl-J89-4001', 'book': 'Computational Linguistics', 'url': 'https://aclweb.org/anthology/J89-4001', 'authors': ['Andrew R. Haas'], 'year': 1989, 'score': 0.5647626737302678}
acl-P08-1108 - {'abstract': ['Vaxjo University Uppsala University Computer Science Linguistics and Philology SE-35195 Vaxjo SE-75126 Uppsala nivre@msi.vxu.se', 'Google Inc. 76 Ninth Avenue New York, NY 10011', 'Previous studies of data-driven dependency parsing have shown that the distribution of parsing errors are correlated with theoretical properties of the models used for learning and inference.', 'In this paper, we show how these results can be exploited to improve parsing accuracy by integrating a graph-based and a transition-based model.', 'By letting one model generate features for the other, we consistently improve accuracy for both models, resulting in a significant improvement of the state of the art when evaluated on data sets from the CoNLL-X shared task.'], 'title': 'Integrating Graph-Based and Transition-Based Dependency Parsers', 'type': 'unknown', 'id': 'acl-P08-1108', 'book': 'Proceedings of the 9th SIGdial Workshop on Discourse and Dialogue', 'url': 'https://aclweb.org/anthology/P08-1108', 'authors': ['Joakim Nivre', 'Ryan McDonald'], 'year': 2008, 'score': 0.6786024644449983}
acl-E09-1034 - {'abstract': ['Parsing Mildly Non-projective Dependency Structures*', 'Carlos Gomez-Rodriguez David Weir and John Carroll', 'Departamento de Computation Department oflnformatics', 'Universidade da Corutia, Spain University of Sussex, United Kingdom', 'We present parsing algorithms for various mildly non-projective dependency formalisms.', 'In particular, algorithms are presented for: all well-nested structures of gap degree at most 1, with the same complexity as the best existing parsers for constituency formalisms of equivalent generative power; all well-nested structures with gap degree bounded by any constant k; and a new class of structures with gap degree up to k that includes some ill-nested structures.', 'The third case includes all the gap degree k structures in a number of dependency treebanks.'], 'title': 'Parsing Mildly Non-Projective Dependency Structures', 'type': 'unknown', 'id': 'acl-E09-1034', 'book': 'EACL', 'url': 'https://aclweb.org/anthology/E09-1034', 'authors': ['Carlos Gómez-Rodríguez', 'David Weir', 'John Carroll'], 'year': 2009, 'score': 0.6828890329374105}
acl-J11-3004 - {'abstract': ['Carlos Gomez-Rodriguez*', 'Universidade da Coruna, Spain', 'John Carroll** University of Sussex, UK', 'David Weir" University of Sussex, UK', "We introduce dependency parsing schemata, a formal framework based on Sikkel's parsing schemata for constituency parsers, which can be used to describe, analyze, and compare dependency parsing algorithms.", 'We use this framework to describe several well-known projective and non-projective dependency parsers, build correctness proofs, and establish formal relationships between them.', 'We then use the framework to define new polynomial-time parsing algorithms for various mildly non-projective dependency formalisms, including well-nested structures with their gap degree bounded by a constant k in time O(n+2k), and a new class that includes all gap degree k structures present in several natural language treebanks (which we call mildly ill-nested structures for gap degree k)intime O(n+3k).', 'Finally, we illustrate how the parsing schema framework can be applied to Link Grammar, a dependency-related formalism.'], 'title': 'Dependency Parsing Schemata and Mildly Non-Projective Dependency Parsing', 'type': 'unknown', 'id': 'acl-J11-3004', 'book': 'Computational Linguistics', 'url': 'https://aclweb.org/anthology/J11-3004', 'authors': ['Carlos Gómez-Rodríguez', 'John Carroll', 'David Weir'], 'year': 2011, 'score': 0.5591926761269549}
acl-D11-1117 - {'abstract': ['We present new training methods that aim to mitigate local optima and slow convergence in unsupervised training by using additional imperfect objectives.', 'In its simplest form, lateen EM alternates between the two objectives of ordinary "soft" and "hard" expectation maximization (EM) algorithms.', 'Switching objectives when stuck can help escape local optima.', 'We find that applying a single such alternation already yields state-of-the-art results for English dependency grammar induction.', 'More elaborate lateen strategies track both objectives, with each validating the moves proposed by the other.', 'Disagreements can signal earlier opportunities to switch or terminate, saving iterations.', 'De-emphasizing fixed points in these ways eliminates some guesswork from tuning EM.', 'An evaluation against a suite of unsupervised dependency parsing tasks, for a variety of languages, showed that lateen strategies significantly speed up training of both EM algorithms, and improve accuracy for hard EM.'], 'title': 'Lateen EM: Unsupervised Training with Multiple Objectives, Applied to Dependency Grammar Induction', 'type': 'unknown', 'id': 'acl-D11-1117', 'book': 'EMNLP', 'url': 'https://aclweb.org/anthology/D11-1117', 'authors': ['Valentin I. Spitkovsky', 'Hiyan Alshawi', 'Daniel Jurafsky'], 'year': 2011, 'score': 0.6385078215474692}
acl-N10-1116 - {'abstract': ['From Baby Steps to Leapfrog: How "Less is More" in Unsupervised Dependency Parsing*', 'Valentin I. Spitkovsky Hiyan Alshawi', "We present three approaches for unsupervised grammar induction that are sensitive to data complexity and apply them to Klein and Manning's Dependency Model with Valence.", 'The first, Baby Steps, bootstraps itself via iterated learning of increasingly longer sentences and requires no initialization.', "This method substantially exceeds Klein and Manning's published scores and achieves 39.4% accuracy on Section 23 (all sentences) of the Wall Street Journal corpus.", 'The second, Less is More, uses a low-complexity subset of the available data: sentences up to length 15.', 'Focusing on fewer but simpler examples trades off quantity against ambiguity; it attains 44.1% accuracy, using the standard linguistically-informed prior and batch training, beating state-of-the-art.', 'Leapfrog, our third heuristic, combines Less is More with Baby Steps by mixing their models of shorter sentences, then rapidly ramping up exposure to the full training set, driving up accuracy to 45.0%.', 'These trends generalize to the Brown corpus; awareness of data complexity may improve other parsing models and unsupervised algorithms.'], 'title': 'From Baby Steps to Leapfrog: How “Less is More” in Unsupervised Dependency Parsing', 'type': 'unknown', 'id': 'acl-N10-1116', 'book': 'Human Language Technologies: the 2010 Annual Conference of the North American Chapter of the Association for Computational Linguistics', 'url': 'https://aclweb.org/anthology/N10-1116', 'authors': ['Valentin I. Spitkovsky', 'Hiyan Alshawi', 'Daniel Jurafsky'], 'year': 2010, 'score': 0.5929615489213668}
acl-W00-0737 - {'abstract': ['This paper proposes an error-driven HMM-based text chunk tagger with context-dependent lexicon.', 'Compared with standard HMM-based tagger, this tagger incorporates more contextual information into a lexical entry.', 'Moreover, an error-driven learning approach is adopted to decrease the memory requirement by keeping only positive lexical entries and makes it possible to further incorporate more context-dependent lexical entries.', 'Finally, memory-based learning is adopted to further improve the performance of the chunk tagger.'], 'title': 'Hybrid Text Chunking', 'type': 'unknown', 'id': 'acl-W00-0737', 'book': 'Conference on Computational Natural Language Learning and of the Second Learning Language in Logic Workshop CoNLL and LLL', 'url': 'https://aclweb.org/anthology/W00-0737', 'authors': ['Guodong Zhou', 'Jian Su', 'TongGuan Tey'], 'year': 2000, 'score': 0.6440890431216987}
acl-W00-0733 - {'abstract': ['Tjong Kim Sang (2000) describes how a system-internal combination of memory-based learners can be used for base noun phrase (baseNP) recognition.', 'The idea is to generate different chunking models by using different chunk representations.', 'Chunks can be represented with bracket structures but alternatively one can use a tagging representation which classifies words as being inside a chunk (I), outside a chunk (0) or at a chunk boundary (B) (Ramshaw and Marcus, 1995).', 'There are four variants of this representation.', 'The B tags can be used for the first word of chunks that immediately follow another chunk (the IOB1 representation) or they can be used for every chunk-initial word (I0B2).', 'Alternatively an E tag can be used for labeling the final word of a chunk immediately preceding another chunk (IOE1) or it can be used for every chunk-final word (10E2).', 'Bracket structures can also be represented as tagging structures by using two streams of tags which define whether words start a chunk or not (0) or whether words are at the end of a chunk or not (C).', 'We need both for encoding the phrase structure and hence we will treat the two tag streams as a single representation (0+C).', 'A combination of baseNP classifiers that use the five representation performs better than any of the included systems (Tjong Kim Sang, 2000).', 'We will apply such a classifier combination to the CoNLL-2000 shared task.'], 'title': 'Text Chunking by System Combination', 'type': 'unknown', 'id': 'acl-W00-0733', 'book': 'Conference on Computational Natural Language Learning and of the Second Learning Language in Logic Workshop CoNLL and LLL', 'url': 'https://aclweb.org/anthology/W00-0733', 'authors': ['Erik F. Tjong Kim Sang'], 'year': 2000, 'score': 0.6162144075294403}
acl-W07-2220 - {'abstract': ['Data-Driven Dependency Parsing across Languages and Domains: Perspectives from the CoNLL 2007 Shared Task', 'Vaxjo University, School of Mathematics and Systems Engineering Uppsala University, Department of Linguistics and Philology E-mail: nivre@msi.vxu.se', 'The Conference on Computational Natural Language Learning features a shared task, in which participants train and test their learning systems on the same data sets.', 'In 2007, as in 2006, the shared task has been devoted to dependency parsing, this year with both a multilingual track and a domain adaptation track.', 'In this paper, I summarize the main findings from the 2007 shared task and try to identify major challenges for the parsing community based on these findings.'], 'title': 'Data-Driven Dependency Parsing across Languages and Domains: Perspectives from the CoNLL-2007 Shared task', 'type': 'unknown', 'id': 'acl-W07-2220', 'book': 'Tenth International Conference on Parsing Technologies', 'url': 'https://aclweb.org/anthology/W07-2220', 'authors': ['Joakim Nivre'], 'year': 2007, 'score': 0.6575056569308046}
acl-N09-2066 - {'abstract': ["Giuseppe Attardi Felice Dell'Orletta", 'Dipartimento di Informatica Dipartimento di Informatica', 'Universita di Pisa Universita di Pisa', 'Pisa, Italy Pisa, Italy', 'attardi@di.unipi.it felice.dellorletta@di.unipi.it', '1 Introduction', 'Deterministic transition-based Shift/Reduce dependency parsers make often mistakes in the analysis of long span dependencies (McDonald & Nivre, 2007).', 'Titov and Henderson (2007) address this accuracy drop by using a beam search instead of a greedy algorithm for predicting the next parser transition.', 'We propose a parsing method that allows reducing several of these errors, although maintaining a quasi linear complexity.', 'The method consists in two steps: first the sentence is parsed by a deterministic Shift/Reduce parser, then a second deterministic Shift/Reduce parser analyzes the sentence in reverse using additional features extracted from the parse trees produced by the first parser.'], 'title': 'Reverse Revision and Linear Tree Combination for Dependency Parsing', 'type': 'unknown', 'id': 'acl-N09-2066', 'book': 'HLT-NAACL, Companion Volume: Short Papers', 'url': 'https://aclweb.org/anthology/N09-2066', 'authors': ['Giuseppe Attardi', "Felice Dell'Orletta"], 'year': 2009, 'score': 0.6476837707547407}
acl-C90-2053 - {'abstract': ["Tomita's parsing algorithm [Tomita 86], which adapted the LR parsing algorithm to context free grammars, makes use of a breadth-first strategy to handle LR table conflicts.", "As the breadth-first strategy is compatible with parallel processing, we can easily develop a parallel generalized LR parser based on Tomita's algorithm [Tanaka 89].", 'However, there is a problem in that this algorithm synchronizes parsing processes on each shift action for the same input word to merge many stacks into Graph Structured Stacks (GSS).', 'In other words, a process that has completed a shift action must wait until all other processes have ended theirs a strategy that reduces parallel performance.', 'We have developed a new parallel parsing algorithm that does not need to wait for shift actions before merging many stacks, using stream communication of a concurrent logic programming language called GHC [Ueda 85].', 'Thus we obtain a parallel generalized LR, parser implemented in GHC.'], 'title': 'A New Parallel Algorithm for Generalized LR Parsing', 'type': 'unknown', 'id': 'acl-C90-2053', 'book': 'International Conference on Computational Linguistics', 'url': 'https://aclweb.org/anthology/C90-2053', 'authors': ['Hiroaki Numazaki', 'Hozumi Tanaka'], 'year': 1990, 'score': 0.6948414886580413}
acl-C88-2138 - {'abstract': ['Maativo -Lomita Canter for It/Wahine Tranalsdiei and Computer _dente De]tannieitt Camcgie-Mellen University Pittsburgh, PAita,:11"1, t.ISA AbSttraui tiOrffialisms (e.g. Categorial Grammar, IIPSO arid GB Grammar), which do not Imo explicit phrase structure roles, are suitable for higher level syntax but not for low level lariguago-specific e0)18trUCtIMIS such as dates (July Pith, 15-JUL-1007, ete), which :,300111 to require the power of phrase atructure re108.', 'paper presents an implementation method to combine lexicon-driven parsing arid phrase structure parsing, with a apecial rriearla called graph-structurnd stook.', "d'.ie Recent linguistic grammar formalisms can be classified Into two families, pluaso-structure-based or lexicon-driven.", 'The phrase-:An:dove-based formalisms include Definite Clause Grammar [U], Lexical Functional Grammar [3], Generalized Phrase Structure Grammar [5, 6] and Functional Unification Grammar [7].', 'They all are based on context-free phrase structure rules which are augmented in ono way or another.', "On the other !land, lexicon-driven fOrlilaliSWS include Categorial Graminar [1], Head-driven ['lobe° Structure Grammar [9, 10] and Gil-Grammar [4, 14 All of these lexicon-driven formalisms do not have any explicit phrase structure rides, but Information about how to combine coristittierria into a high, r constituent is encoded in each lexicon or Colistilomit which is m be combined.", 'It Is often argued that lexicon-driven formalisms can handle some linguistic phenomena such as free-word-order more elegantly, and also they can capture universality of milltiple languages, as described, for example, by Wchrli [14 In section 2, on the other hand, it is argued that, while lexicon-driven formalisms might be suitable to cope with linguistically "interesting" phonomona, they lack the power to express linguistically \'uninteresting" phenomena which are Mien very specific to a particular language.', 'Unfortunately, in order to build a practical parser for a "real" text, one roust handle very many "uninteresting" low level phenomena which cannot be easily formalized in the lexicon-driven way.', 'Hence, if we want to build a practical parser with a theory behind the lexicon-driven formalisms, then it is essential to combine lexicon-driven parsing (tor higher level syntax) and phrase-structure-based parsing (for low level detail and other language-specific/exceptional constructions).', 'In section 3, we generalize the computational models of all the lexicon-driven and phrase-structure-based forstalisins as: sitift-roduco parsing.'], 'title': 'Combining Lexicon-Driven Parsing and Phrase-Structure-Based Parsing', 'type': 'unknown', 'id': 'acl-C88-2138', 'book': 'International Conference on Computational Linguistics', 'url': 'https://aclweb.org/anthology/C88-2138', 'authors': ['Masaru Tomita'], 'year': 1988, 'score': 0.6917377569244731}
acl-E93-1010 - {'abstract': ['We present evidence that head-driven parsing strategies lead to efficiency gains over standard parsing strategies, for lexicalist, concatenative and unification-based grammars.', 'A head-driven parser applies a rule only after a phrase matching the head has been derived.', 'By instantiating the head of the rule important information is obtained about the left-hand-side and the other elements of the right-hand-side.', 'We have used two different head-driven parsers and a number of standard parsers to parse with lexicalist grammars for English and for Dutch.', "The results indicate that for important classes of lexicalist grammars it is fruitful to apply parsing strategies which are sensitive to the linguistic notion 'head'."], 'title': 'Head-Driven Parsing for Lexicalist Grammars: Experimental Results', 'type': 'unknown', 'id': 'acl-E93-1010', 'book': 'Conference of the European Association for Computational Linguistics', 'url': 'https://aclweb.org/anthology/E93-1010', 'authors': ['Gosse Bouma', 'Gertjan van Noord'], 'year': 1993, 'score': 0.6741468033183979}
acl-P84-1073 - {'abstract': ['MLR, an extended LA parser, is introduced, and its application to natural language parsing is discussed.', 'An LA parser is a shift-reduce parser which is deterministically guided by a parsing table.', 'A parsing table can be obtained automatically from a context-free phrase structure grammar.', 'LR parsers cannot manage ambiguous grammars such as natural language grammars, because their parsing tables would have multiply-defined entries, which precludes deterministic parsing.', 'MLR, however, can handle multiply-defined entries, using a dynamic programming method.', 'When an input sentence is ambiguous, the MLR parser produces all possible parse trees without parsing any part of the input sentence more than once in the same way, despite the fact that the parser does not maintain a chart as in chart parsing.', 'Our method also provides an elegant solution to the problem of multi-part-of speech words such as "that".', 'The mul parser and its parsing table generator have been implemented at Carnegie-Mellon University.'], 'title': 'LR Parsers for Natural Languages', 'type': 'unknown', 'id': 'acl-P84-1073', 'book': 'International Conference on Computational Linguistics and Annual Meeting of the Association for Computational Linguistics', 'url': 'https://aclweb.org/anthology/P84-1073', 'authors': ['Masaru Tomita'], 'year': 1984, 'score': 0.6652840330369802}
Lambda = 0 -> No penalty
bound: 0.0
find mmr max: 6.789516392906729
len: 1 17
bound: 6.789516392906729
find mmr max: 12.430918525435606
len: 2 16
bound: 12.430918525435606
find mmr max: 16.92668727801493
len: 3 15
bound: 16.92668727801493
find mmr max: 20.5842130228218
len: 4 14
bound: 20.5842130228218
find mmr max: 23.334784594412984
len: 5 13
bound: 23.334784594412984
find mmr max: 25.32014241913394
len: 6 12
bound: 25.32014241913394
find mmr max: 26.60595033411121
len: 7 11
bound: 26.60595033411121
find mmr max: 27.23547799293599
len: 8 10
bound: 27.23547799293599
find mmr max: 27.192077585151697
len: 8 9
bound: 27.23547799293599
find mmr max: 27.141881484066133
len: 8 8
bound: 27.23547799293599
find mmr max: 27.138304313319946
len: 8 7
bound: 27.23547799293599
find mmr max: 27.13286209622323
len: 8 6
bound: 27.23547799293599
find mmr max: 27.12516420365082
len: 8 5
bound: 27.23547799293599
find mmr max: 27.105048932640553
len: 8 4
bound: 27.23547799293599
find mmr max: 27.03884044576916
len: 8 3
bound: 27.23547799293599
find mmr max: 27.002549039577172
len: 8 2
bound: 27.23547799293599
find mmr max: 26.9074348518802
len: 8 1
bound: 27.23547799293599
find mmr max: 26.745378370129433
len: 8 0
8
acl-E93-1010
acl-P08-1108
acl-P84-1073
acl-J89-4001
acl-J11-3004
acl-N10-1116
acl-W00-0733
acl-A00-2033
Lambda = 0.5 -> less penalty
bound: 0.0
find mmr max: 6.789516392906729
len: 1 17
bound: 6.789516392906729
find mmr max: 11.938341915938905
len: 2 16
bound: 11.938341915938905
find mmr max: 15.610366051089475
len: 3 15
bound: 15.610366051089475
find mmr max: 18.02342271592284
len: 4 14
bound: 18.02342271592284
find mmr max: 19.39791343338755
len: 5 13
bound: 19.39791343338755
find mmr max: 19.617785644891008
len: 6 12
bound: 19.617785644891008
find mmr max: 19.270999042558103
len: 6 11
bound: 19.617785644891008
find mmr max: 19.157657725724206
len: 6 10
bound: 19.617785644891008
find mmr max: 19.007045386116282
len: 6 9
bound: 19.617785644891008
find mmr max: 18.925183015479067
len: 6 8
bound: 19.617785644891008
find mmr max: 18.82811793894979
len: 6 7
bound: 19.617785644891008
find mmr max: 18.79591220576628
len: 6 6
bound: 19.617785644891008
find mmr max: 18.70600377956257
len: 6 5
bound: 19.617785644891008
find mmr max: 18.68385020816842
len: 6 4
bound: 19.617785644891008
find mmr max: 18.68281612309026
len: 6 3
bound: 19.617785644891008
find mmr max: 18.60540849326719
len: 6 2
bound: 19.617785644891008
find mmr max: 18.598608658418
len: 6 1
bound: 19.617785644891008
find mmr max: 18.472689087364607
len: 6 0
6
acl-E93-1010
acl-P08-1108
acl-P84-1073
acl-J89-4001
acl-J11-3004
acl-W00-0737
Lambda = 1.0 -> same degree penalty
bound: 0.0
find mmr max: 6.789516392906729
len: 1 17
bound: 6.789516392906729
find mmr max: 11.445765306442205
len: 2 16
bound: 11.445765306442205
find mmr max: 14.294044824164018
len: 3 15
bound: 14.294044824164018
find mmr max: 15.497228490799479
len: 4 14
bound: 15.497228490799479
find mmr max: 15.862574609133603
len: 5 13
bound: 15.862574609133603
find mmr max: 15.018994047992873
len: 5 12
bound: 15.862574609133603
find mmr max: 14.837659636360636
len: 5 11
bound: 15.862574609133603
find mmr max: 14.750170846651798
len: 5 10
bound: 15.862574609133603
find mmr max: 14.640268521520934
len: 5 9
bound: 15.862574609133603
find mmr max: 14.555948543736363
len: 5 8
bound: 15.862574609133603
find mmr max: 14.419668045624363
len: 5 7
bound: 15.862574609133603
find mmr max: 14.280660762831591
len: 5 6
bound: 15.862574609133603
find mmr max: 14.275648629388904
len: 5 5
bound: 15.862574609133603
find mmr max: 14.273650479005141
len: 5 4
bound: 15.862574609133603
find mmr max: 14.227050607422326
len: 5 3
bound: 15.862574609133603
find mmr max: 14.109389262840393
len: 5 2
bound: 15.862574609133603
find mmr max: 13.98970148978469
len: 5 1
bound: 15.862574609133603
find mmr max: 13.689206812880728
len: 5 0
5
acl-E93-1010
acl-P08-1108
acl-P84-1073
acl-E09-1034
acl-C02-1066
Lambda = 2.0 -> double degree penalty
bound: 0.0
find mmr max: 6.789516392906729
len: 1 17
bound: 6.789516392906729
find mmr max: 10.460612087448801
len: 2 16
bound: 10.460612087448801
find mmr max: 11.840150514372816
len: 3 15
bound: 11.840150514372816
find mmr max: 11.339191296973237
len: 3 14
bound: 11.840150514372816
find mmr max: 11.303436129811526
len: 3 13
bound: 11.840150514372816
find mmr max: 10.930374344550875
len: 3 12
bound: 11.840150514372816
find mmr max: 10.888828351254068
len: 3 11
bound: 11.840150514372816
find mmr max: 10.692642861778761
len: 3 10
bound: 11.840150514372816
find mmr max: 10.674687233780546
len: 3 9
bound: 11.840150514372816
find mmr max: 10.530820228194425
len: 3 8
bound: 11.840150514372816
find mmr max: 10.474080346389375
len: 3 7
bound: 11.840150514372816
find mmr max: 10.443685924792687
len: 3 6
bound: 11.840150514372816
find mmr max: 10.430964280745828
len: 3 5
bound: 11.840150514372816
find mmr max: 10.399406823934681
len: 3 4
bound: 11.840150514372816
find mmr max: 10.240016939972696
len: 3 3
bound: 11.840150514372816
find mmr max: 10.120295536811106
len: 3 2
bound: 11.840150514372816
find mmr max: 9.957179527971292
len: 3 1
bound: 11.840150514372816
find mmr max: 9.939699526144963
len: 3 0
3
acl-E93-1010
acl-P08-1108
acl-C90-2053
#Lambda = 4.0 -> as the paper chosen
bound: 0.0
find mmr max: 6.789516392906729
len: 1 17
bound: 6.789516392906729
find mmr max: 8.82064744984857
len: 2 16
bound: 8.82064744984857
find mmr max: 8.234985550807847
len: 2 15
bound: 8.82064744984857
find mmr max: 7.559980083671011
len: 2 14
bound: 8.82064744984857
find mmr max: 7.52428586388297
len: 2 13
bound: 8.82064744984857
find mmr max: 7.503284242432638
len: 2 12
bound: 8.82064744984857
find mmr max: 7.413898161236235
len: 2 11
bound: 8.82064744984857
find mmr max: 7.394795667830454
len: 2 10
bound: 8.82064744984857
find mmr max: 7.274778407131977
len: 2 9
bound: 8.82064744984857
find mmr max: 7.174685290363158
len: 2 8
bound: 8.82064744984857
find mmr max: 7.027824327296955
len: 2 7
bound: 8.82064744984857
find mmr max: 7.010677234025838
len: 2 6
bound: 8.82064744984857
find mmr max: 6.901723875245459
len: 2 5
bound: 8.82064744984857
find mmr max: 6.653147541065678
len: 2 4
bound: 8.82064744984857
find mmr max: 6.133845014212811
len: 2 3
bound: 8.82064744984857
find mmr max: 5.950435895161249
len: 2 2
bound: 8.82064744984857
find mmr max: 5.909495405019838
len: 2 1
bound: 8.82064744984857
find mmr max: 5.66901338850934
len: 2 0
2
acl-E93-1010
acl-C90-2053
