{
  "info": {
    "authors": [
      "Qiuye Zhao",
      "Mitch Marcus"
    ],
    "book": "ACL",
    "id": "acl-P12-1111",
    "title": "Exploring Deterministic Constraints: from a Constrained English POS Tagger to an Efficient ILP Solution to Chinese Word Segmentation",
    "url": "https://aclweb.org/anthology/P12-1111",
    "year": 2012
  },
  "references": [
    "acl-C08-1049",
    "acl-J93-2004",
    "acl-J96-3004",
    "acl-N03-1033",
    "acl-P07-1096",
    "acl-P07-1106",
    "acl-P08-1067",
    "acl-P08-1102",
    "acl-P09-1039",
    "acl-P09-1057",
    "acl-P09-1058",
    "acl-P11-1070",
    "acl-P11-1139",
    "acl-W02-1001",
    "acl-W04-3236",
    "acl-W96-0213"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We show for both English POS tagging and Chinese word segmentation that with proper representation, large number of deterministic constraints can be learned from training examples, and these are useful in constraining probabilistic inference.",
        "For tagging, learned constraints are directly used to constrain Viterbi decoding.",
        "For segmentation, character-based tagging constraints can be learned with the same templates.",
        "However, they are better applied to a word-based model, thus an integer linear programming (ILP) formulation is proposed.",
        "For both problems, the corresponding constrained solutions have advantages in both efficiency and accuracy."
      ]
    },
    {
      "heading": "1 introduction",
      "text": [
        "In recent work, interesting results are reported for applications of integer linear programming (ILP) such as semantic role labeling (SRL) (Roth and Yih, 2005), dependency parsing (Martins et al., 2009) and so on.",
        "In an ILP formulation, ?non-local?",
        "deterministic constraints on output structures can be naturally incorporated, such as ?a verb cannot take two subject arguments?",
        "for SRL, and the projectiv-ity constraint for dependency parsing.",
        "In contrast to probabilistic constraints that are estimated from training examples, this type of constraint is usually handwritten reflecting one's linguistic knowledge.",
        "Dynamic programming techniques based on Markov assumptions, such as Viterbi decoding, cannot handle those ?non-local?",
        "constraints as discussed above.",
        "However, it is possible to constrain Viterbi decoding by ?local?",
        "constraints, e.g. ?assign label t to word w?",
        "for POS tagging.",
        "This type of constraint may come from human input solicited in interactive inference procedure (Kristjansson et al., 2004).",
        "In this work, we explore deterministic constraints for two fundamental NLP problems, English POS tagging and Chinese word segmentation.",
        "We show by experiments that, with proper representation, large number of deterministic constraints can be learned automatically from training data, which can then be used to constrain probabilistic inference.",
        "For POS tagging, the learned constraints are directly used to constrain Viterbi decoding.",
        "The corresponding constrained tagger is 10 times faster than searching in a raw space pruned with beam-width 5.",
        "Tagging accuracy is moderately improved as well.",
        "For Chinese word segmentation (CWS), which can be formulated as character tagging, analogous constraints can be learned with the same templates as English POS tagging.",
        "High-quality constraints can be learned with respect to a special tagset, however, with this tagset, the best segmentation accuracy is hard to achieve.",
        "Therefore, these character-based constraints are not directly used for determining predictions as in English POS tagging.",
        "We propose an ILP formulation of the CWS problem.",
        "By adopting this ILP formulation, segmentation F-measure is increased from 0.968 to 0.974, as compared to Viterbi decoding with the same feature set.",
        "Moreover, the learned constraints can be applied to reduce the number of possible words over a character sequence, i.e. to reduce the number of variables to set.",
        "This reduction of problem size immediately speeds up an ILP solver by more than 100 times."
      ]
    },
    {
      "heading": "2 English POS tagging",
      "text": []
    },
    {
      "heading": "2.1 Explore deterministic constraints",
      "text": [
        "Suppose that, following (Chomsky, 1970), we distinguish major lexical categories (Noun, Verb, Adjective and Preposition) by two binary features: +|?",
        "N and +|?",
        "V. Let (+N, ?V)=Noun, (?N, +V)=Verb, (+N, +V)=Adjective, and (?N, ?V)=preposition.",
        "A word occurring in between a preceding word the and a following word of always bears the feature +N.",
        "On the other hand, consider the annotation guideline of English Treebank (Marcus et al., 1993) instead.",
        "Part-of-speech (POS) tags are used to categorize words, for example, the POS tag VBG tags verbal gerunds, NNS tags nominal plurals, DT tags determiners and so on.",
        "Following this POS representation, there are as many as 10 possible POS tags that may occur in between the?of, as estimated from the WSJ corpus of Penn Treebank.",
        "2.1.1 Templates of deterministic constraints To explore determinacy in the distribution of POS tags in Penn Treebank, we need to consider that a POS tag marks the basic syntactic category of a word as well as its morphological inflection.",
        "A constraint that may determine the POS category should reflect both the context and the morphological feature of the corresponding word.",
        "The practical difficulty in representing such deterministic constraints is that we do not have a perfect mechanism to analyze morphological features of a word.",
        "Endings or prefixes of English words do not deterministically mark their morphological inflections.",
        "We propose to compute the morph feature of a word as the set of all of its possible tags, i.e. all tag types that are assigned to the word in training data.",
        "Furthermore, we approximate unknown words in testing data by rare words in training data.",
        "For a word that occurs less than 5 times in the training corpus, we compute its morph feature as its last two characters, which is also conjoined with binary features indicating whether the rare word contains digits, hyphens or upper-case characters respectively.",
        "See examples of morph features in Table 1.",
        "We consider bigram and trigram templates for generating potentially deterministic constraints.",
        "Let wi denote the ith word relative to the current word w0; and mi denote the morph feature of wi.",
        "A (frequent) (set of possible tags of the word)",
        "as computed from the WSJ Corpus of Penn Treebank.",
        "bi- w?1w0, w0w1, m?1w0, w0m1 gram w?1m0, m0w1, m?1m0, m0m1 tri- w?1w0w1, m?1w0w1, w?1m0w1, m?1m0w1 gram w?1w0m1, m?1w0m1, w?1m0m1, m?1m0m1",
        "ministic constraints of English POS tagging.",
        "bigram constraint includes one contextual word (w?1|w1) or the corresponding morph feature; and a trigram constraint includes both contextual words or their morph features.",
        "Each constraint is also conjoined with w0 or m0, as described in Table 2."
      ]
    },
    {
      "heading": "2.1.2 Learning of deterministic constraints",
      "text": [
        "In the above section, we explore templates for potentially deterministic constraints that may determine POS category.",
        "With respect to a training corpus, if a constraint C relative to w0 ?always?",
        "assigns a certain POS category t?",
        "to w0 in its context, i.e.",
        "count(C?t0=t?)",
        "count(C) > thr, and this constraint occurs more than a cutoff number, we consider it as a deterministic constraint.",
        "The threshold thr is a real number just under 1.0 and the cutoff number is empirically set to 5 in our experiments."
      ]
    },
    {
      "heading": "2.1.3 Decoding of deterministic constraints",
      "text": [
        "By the above definition, the constraint of w?1 = the,m0 = {NNS, VBZ} andw1 = of is deterministic.",
        "It determines the POS category of w0 to be NNS.",
        "There are at least two ways of decoding these constraints during POS tagging.",
        "Take the word trades for example, whose morph feature is {NNS, VBZ}.",
        "One alternative is that as long as trades occurs between the-of, it is tagged with NNS.",
        "The second alternative is that the tag decision is made only if all deterministic constraints relative to this occurrence of trades agree on the same tag.",
        "Both ways of decoding are purely rule-based and involve no probabilistic inference.",
        "In favor of a higher precision, we adopt the latter one in our experiments."
      ]
    },
    {
      "heading": "2.2 Search in a constrained space",
      "text": [
        "Following most previous work, we consider POS tagging as a sequence classification problem and decompose the overall sequence score over the linear structure, i.e. t?",
        "= argmax",
        "function tagGEN maps input sentence w = w1...wn to the set of all tag sequences that are of length n. If a POS tagger takes raw input only, i.e. for every word, the number of possible tags is a constant T , the space of tagGEN is as large as Tn.",
        "On the other hand, if we decode deterministic constraints first before a probabilistic search, i.e. for some words, the number of possible tags is reduced to 1, the search space is reduced to Tm, where m is the number of (unconstrained) words that are not subject to any deterministic constraints.",
        "Viterbi algorithm is widely used for tagging, and runs in O(nT 2) when searching in an unconstrained space.",
        "On the other hand, consider searching in a constrained space.",
        "Suppose that among the m unconstrained words, m1 of them follow a word that has been tagged by deterministic constraints and m2 (=m-m1) of them follow another unconstrained word.",
        "Viterbi decoder runs in O(m1T + m2T 2) while searching in such a constrained space.",
        "The example in Table 3 shows raw and constrained input with respect to a typical input sentence.",
        "Lookahead features The score of tag predictions are usually computed in a high-dimensional feature space.",
        "We adopt the basic feature set used in (Ratnaparkhi, 1996) and (Collins, 2002).",
        "Moreover, when deterministic constraints have applied to contextual words of w0, it is also possible to include some lookahead feature templates, such as: t0&t1, t0&t1&t2, and t?1&t0&t1 where ti represents the tag of the ith word relative to the current word w0.",
        "As discussed in (Shen et al., 2007), categorical information of neighbouring words on both sides of w0 help resolve POS ambiguity of w0.",
        "In (Shen et al., 2007), lookahead features may be available for use during decoding since searching is bidirectional instead of left-to-right as in Viterbi decoding.",
        "In this work, deterministic constraints are decoded before the application of probabilistic models, therefore lookahead features are made available during Viterbi decoding."
      ]
    },
    {
      "heading": "3 Chinese Word Segmentation (CWS)",
      "text": []
    },
    {
      "heading": "3.1 Word segmentation as character tagging",
      "text": [
        "Considering the ambiguity problem that a Chinese character may appear in any relative position in a word and the out-of-vocabulary (OOV) problem that it is impossible to observe all words in training data, CWS is widely formulated as a character tagging problem (Xue, 2003).",
        "A character-based CWS decoder is to find the highest scoring tag sequence t?",
        "over the input character sequence c, i.e.",
        "This is the same formulation as POS tagging.",
        "The Viterbi algorithm is also widely used for decoding.",
        "The tag of each character represents its relative position in a word.",
        "Two popular tagsets include 1) IB: where B tags the beginning of a word and I all other positions; and 2) BMES: where B, M and E represent the beginning, middle and end of a multi-character word respectively, and S tags a single-character word.",
        "For example, after decoding with BMES, 4 consecutive characters associated with the tag sequence BMME compose a word.",
        "However, after decoding with IB, characters associated with BIII may compose a word if the following tag is B or only form part of a word if the following tag is I.",
        "Even though character tagging accuracy is higher with tagset IB, tagset BMES is more popular in use since better performance of the original problem CWS can be achieved by this tagset.",
        "Character-based feature templates We adopt the ?non-lexical-target?",
        "feature templates in (Jiang et al., 2008a).",
        "Let ci denote the ith character relative to the current character c0 and t0",
        "denote the tag assigned to c0.",
        "The following templates are used:",
        "Character-based deterministic constraints We can use the same templates as described in Table 2 to generate potentially deterministic constraints for CWS character tagging, except that there are no morph features computed for Chinese characters.",
        "As we will show with experimental results in Section 5.2, useful deterministic constraints for CWS can be learned with tagset IB but not with tagset BMES.",
        "It is interesting but not surprising to notice, again, that the determinacy of a problem is sensitive to its representation.",
        "Since it is hard to achieve the best segmentations with tagset IB, we propose an indirect way to use these constraints in the following section, instead of applying these constraints as straightforwardly as in English POS tagging."
      ]
    },
    {
      "heading": "3.2 Word-based word segmentation",
      "text": [
        "A word-based CWS decoder finds the highest scoring segmentation sequence w?",
        "that is composed by the input character sequence c, i.e.",
        "where function segGEN maps character sequence c to the set of all possible segmentations of c. For example, w = (c1..cl1)...(cn?lk+1...cn) represents a segmentation of k words and the lengths of the first and last word are l1 and lk respectively.",
        "In early work, rule-based models find words one by one based on heuristics such as forward maximum match (Sproat et al., 1996).",
        "Exact search is possible with a Viterbi-style algorithm, but beam-search decoding is more popular as used in (Zhang and Clark, 2007) and (Jiang et al., 2008a).",
        "We propose an Integer Linear Programming (ILP) formulation of word segmentation, which is naturally viewed as a word-based model for CWS.",
        "Character-based deterministic constraints, as discussed in Section 3.1, can be easily applied."
      ]
    },
    {
      "heading": "3.3 ILP formulation of CWS",
      "text": [
        "Given a character sequence c=c1...cn, there are s(= n(n+1)/2) possible words that are contiguous subsets of c, i.e. w1, ..., ws ?",
        "c. Our goal is to find",
        "(2) xi ?",
        "{0, 1}, 1 ?",
        "i ?",
        "s The boolean value of xi, as guaranteed by constraint (2), indicates whether wi is selected in the segmentation solution or not.",
        "Constraint (1) requires every character to be included in exactly one selected word, thus guarantees a proper segmentation of the whole sequence.",
        "This resembles the ILP formulation of the set cover problem, though the first constraint is different.",
        "Take n = 2 for example, i.e. c = c1c2, the set of possible words is {c1, c2, c1c2}, i.e. s = |x |= 3.",
        "There are only two possible solutions subject to constraints (1) and (2), x = 110 giving an output set {c1, c2}, or x = 001 giving an output set {c1c2}.",
        "The efficiency of solving this problem depends on the number of possible words (contiguous subsets) over a character sequence, i.e. the number of variables in x.",
        "So as to reduce |x|, we apply deterministic constraints predicting IB tags first, which are learned as described in Section 3.1.",
        "Possible words are generated with respect to the partially tagged character sequence.",
        "A character tagged with B always occurs at the beginning of a possible word.",
        "Table 4 illustrates the constrained and raw input with respect to a typical character sequence."
      ]
    },
    {
      "heading": "3.4 Character-and word-based features",
      "text": [
        "As studied in previous work, word-based feature templates usually include the word itself, sub-words contained in the word, contextual characters/words and so on.",
        "It has been shown that combining the use of character-and word-based features helps improve performance.",
        "However, in the character tagging formulation, word-based features are non-local.",
        "To incorporate these non-local features and make the search tractable, various efforts have been made.",
        "For example, Jiang et al. (2008a) combine different levels of knowledge in an outside linear model of a two-layer cascaded model; Jiang et al. (2008b) uses the forest re-ranking technique (Huang, 2008); and in (Kruengkrai et al., 2009), only known words in vocabulary are included in the hybrid lattice consisting of both character-and word-level nodes.",
        "We propose to incorporate character-based features in word-based models.",
        "Consider a character-based feature function ?",
        "(c, t, c) that maps a character-tag pair to a high-dimensional feature space, with respect to an input character sequence c. For a possible word over c of length l , wi = ci0 ...ci0+l?1, tag each character cij in this word with a character-based tag tij .",
        "Character-based features of wi can be computed as {?",
        "(cij , tij , c)|0 ?",
        "j < l}.",
        "The first row of Table 5 illustrates character-based features of a word of length 3, which is tagged with tagset BMES.",
        "From this view, the character-based feature templates defined in Section 3.1 are naturally used in a word-based model.",
        "When character-based features are incorporated into word-based CWS models, some word-based features are no longer of interest, such as the starting character of a word, sub-words contained in the word, contextual characters and so on.",
        "We consider word counting features as a complementary to character-based features, following the idea of using web-scale features in previous work, e.g. (Bansal and Klein, 2011).",
        "For a possible word w, let count(w) return the count of times that w occurs as a legal word in training data.",
        "The word count number is further processed following (Bansal and Klein, 2011), wc(w) = floor(log(count(w)) ?",
        "5)/5.",
        "In addition to wc(wi), we also use corresponding word count features of possible words that are composed of the boundary and contextual characters ofwi.",
        "The specific word-based feature templates are illustrated in the second row of Table 5."
      ]
    },
    {
      "heading": "4 Training",
      "text": [
        "We use the following linear model for scoring predictions: score(y)=?T?",
        "(x, y), where ?",
        "(y) is a high-dimensional binary feature representation of y over input x and ?",
        "contains weights of these features.",
        "For character-?",
        "(ci0 , B, c), ?",
        "(ci1 , M, c), ?",
        "(ci2 , E, c)-based word",
        "ble wordwi over the input character sequence c. Suppose thatwi = ci0ci1ci2 , and its preceding and following characters are cl and cr respectively.",
        "parameter estimation of ?, we use the averaged per-ceptron as described in (Collins, 2002).",
        "This training algorithm relies on the choice of decoding algorithm.",
        "When we experiment with different decoders, by default, the parameter weights in use are trained with the corresponding decoding algorithm.",
        "Especially, for experiments with lookahead features of English POS tagging, we prepare training data with the stacked learning technique, in order to alleviate overfitting.",
        "More specifically, we divide the training data into k folds, and tag each fold with the deterministic model learned over the other k-1 folds.",
        "The predicted tags of all folds are then merged into the gold training data and used (only) as lookahead features.",
        "Sun (2011) uses this technique to merge different levels of predictors for word segmentation."
      ]
    },
    {
      "heading": "5 Experiments",
      "text": []
    },
    {
      "heading": "5.1 Data set",
      "text": [
        "We run experiments on English POS tagging on the WSJ corpus in the Penn Treebank.",
        "Following most previous work, e.g. (Collins, 2002) and (Shen et al., 2007), we divide this corpus into training set (sections 0-18), development set (sections 19-21) and the final test set (sections 22-24).",
        "We run experiments on Chinese word segmentation on the Penn Chinese Treebank 5.0.",
        "Following (Jiang et al., 2008a), we divide this corpus into training set (chapters 1-260), development set (chapters 271-300) and the final test set (chapters 301-325)."
      ]
    },
    {
      "heading": "5.2 Deterministic constraints",
      "text": [
        "Experiments in this section are carried out on the development set.",
        "The cutoff number and threshold as defined in 2.1.2, are fixed as 5 and 0.99 respectively.",
        "For English POS tagging, we evaluate the deterministic constraints generated by the templates described in Section 2.1.1.",
        "Since these deterministic constraints are only applied to words that occur in a constrained context, we report F-measure as the accuracy measure.",
        "Precision p is defined as the percentage of correct predictions out of all predictions, and recall r is defined as the percentage of gold predictions that are correctly predicted.",
        "F-measure F1 is computed by 2pr/(p+ r).",
        "As shown in Table 6, deterministic constraints learned with both bigram and trigram templates are all very accurate in predicting POS tags of words in their context.",
        "Constraints generated by bigram template alone can already cover 84.1% of the input words with a high precision of 0.993.",
        "By adding the constraints generated by trigram template, recall is increased to 0.857 with little loss in precision.",
        "Since these deterministic constraints are applied before the decoding of probabilistic models, reliably high precision of their predictions is crucial.",
        "There are 114589 bigram deterministic constraints and 130647 trigram constraints learned from the training data.",
        "We show a couple of examples of bigram deterministic constraints in Table 7.",
        "As defined in Section 2.2, we use the set of all possible POS tags for a word, e.g. {VBN, VBZ}, as its morph feature if the word is frequent (occurring more than 5 times in training data).",
        "For a rare word, the last two characters are used as its morph feature, e.g. ?es.",
        "A constraint is composed of w?1, w0 and w1, as well as the morph features m?1, m0 and m1.",
        "For ex-tagset precision recall F1",
        "ample, the first constraint in Table 7 determines the tag VBN of w0.",
        "A deterministic constraint is aware of neither the likelihood of each possible tag or the relative rank of their likelihoods.",
        "Deterministic constraints for character tagging For the character tagging formulation of Chinese word segmentation, we discussed two tagsets IB and BMES in Section 3.1.",
        "With respect to either tagset, we use both bigram and trigram templates to generate deterministic constraints for the corresponding tagging problem.",
        "These constraints are also evaluated by F-measure as defined above.",
        "As shown in Table 8, when tagset IB is used for character tagging, high precision predictions can be made by the deterministic constraints that are learned with respect to this tagset.",
        "However, when tagset BMES is used, the learned constraints don't always make reliable predictions, and the overall precision is not high enough to constrain a probabilistic model.",
        "Therefore, we will only use the deterministic constraints that predict IB tags in following CWS experiments."
      ]
    },
    {
      "heading": "5.3 English POS tagging",
      "text": [
        "For English POS tagging, as well as the CWS problem that will be discussed in the next section, we use the development set to choose training iterations (= 5), set beam width etc.",
        "The following experiments are done on the final test set.",
        "As introduced in Section 2.2, we adopt a very compact feature set used in (Ratnaparkhi, 1996)1.",
        "While searching in a constrained space, we can also extend this feature set with some basic lookahead features as defined in Section 2.2.",
        "This replicates the feature set B used in (Shen et al., 2007).",
        "In this work, our main interest in the POS tagging problem is on its efficiency.",
        "A well-known technique to speed up Viterbi decoding is to conduct beam search.",
        "Based on experiments carried out 1Our implementation of this feature set is basically the same as the version used in (Collins, 2002).",
        "in each column is bold.",
        "The baseline for speed in all cases is the unconstrained tagger using (Ratnaparkhi, 1996)'s feature and conducting a beam (=5) search.",
        "on the development set, we set beam-width of our baseline model as 5.",
        "Our baseline model, which uses Ratnaparkhi (1996)'s feature set and conducts a beam (=5) search in the unconstrained space, achieves a tagging accuracy of 97.16%.",
        "Tagging accuracy is measured by the percentage of correct predictions out of all gold predictions.",
        "We consider the speed of our baseline model as 1?, and compare other taggers with this one.",
        "The speed of a POS tagger is measured by the number of input words processed per second.",
        "As shown in Table 9, when the beam-width is reduced from 5 to 1, the tagger (beam=1) is 3 times faster but tagging accuracy is badly hurt.",
        "In contrast, when searching in a constrained space rather than the raw space, the constrained tagger (beam=5) is 10 times fast as the baseline and the tagging accuracy is even moderately improved, increasing to 97.20%.",
        "When we evaluate the speed of a constrained tagger, the time of decoding deterministic constraints is included.",
        "These constraints make more accurate predictions than probabilistic models, thus besides improving the overall tagging speed as we expect, tagging accuracy also improves by a little.",
        "In Viterbi decoding, all possible transitions between two neighbour states are evaluated, so the addition of locally lookahead features may have NO impact on performance.",
        "When beam-width is set to 5, tagging accuracy is not improved by the use of Feature B in (Shen et al., 2007); and because the size of the feature model grows, efficiency is hurt.",
        "On the other hand, when lookahead features are used, Viterbi-style decoding is less affected by the reduction of beam-width.",
        "As compared to the constrained greedy tagger using Ratnaparkhi (1996)'s feature set, with the additional use of three locally lookahead feature templates, tagging accuracy is increased from 96.80% to 97.02%.",
        "When no further data is used other than training data, the bidirectional tagger described in (Shen et al., 2007) achives an accuracy of 97.33%, using a much richer feature set (E) than feature set B, the one we compare with here.",
        "As noted above, the addition of three feature templates already has a notable negative impact on efficiency, thus the use of feature set E will hurt tagging efficiency much worse.",
        "Rich feature sets are also widely used in other work that pursue state-of-art tagging accuracy, e.g. (Toutanova et al., 2003).",
        "In this work, we focus on the most compact feature sets, since tagging efficiency is our main consideration in our work on POS taging.",
        "The proposed constrained taggers as described above can achieve near state-of-art POS tagging accuracy in a much more efficient manner."
      ]
    },
    {
      "heading": "5.4 Chinese word segmentation",
      "text": [
        "Like other tagging problems, Viterbi-style decoding is widely used for character tagging for CWS.",
        "We transform tagged character sequences to word segmentations first, and then evaluate word segmentations by F-measure, as defined in Section 5.2.",
        "We proposed an ILP formulation of the CWS problem in Section 3.3, where we present a word-based model.",
        "In Section 3.4, we describe a way of mapping words to a character-based feature space.",
        "From this view, the highest scoring tagging sequence is computed subject to structural constraints, giving us an inference alternative to Viterbi decoding.",
        "For example, recall the example of input character sequence c = c1c2 discussed in Section 3.3.",
        "The two possible ILP solutions give two possible segmentations {c1, c2} and {c1c2}, thus there are 2 tag sequences evaluated by ILP, BB and BI.",
        "On the other hand, there are 4 tag sequences evaluated by Viterbi decoding: BI, BB, IB and II.",
        "With the same feature templates as described in Section 3.1, we now compare these two decoding methods.",
        "Tagset BMES is used for character tagging as well as for mapping words to character-based feature space.",
        "We use the same Viterbi decoder as implemented for English POS tagging and use a non-commercial ILP solver included in GNU Linear Pro",
        "Only character-based features are used.",
        "POS-/+: percep-tron trained without/with POS.",
        "gramming Kit (GLPK), version 4.3.",
        "2 As shown in Table 10, optimal solutions returned by an ILP solver are more accurate than optimal solutions returned by a Viterbi decoder.",
        "The F-measure is improved by a relative error reduction of 18.8%, from 0.968 to 0.974.",
        "These results are compared to the core perceptron trained without POS in (Jiang et al., 2008a).",
        "They only report results with ?lexical-target?",
        "features, a richer feature set than the one we use here.",
        "As shown in Table 10, we achieve higher performance even with more compact features.",
        "Joint inference of CWS and Chinese POS tagging is popularly studied in recent work, e.g. (Ng and Low, 2004), (Jiang et al., 2008a), and (Kruengkrai et al., 2009).",
        "It has been shown that better performance can be achieved with joint inference, e.g. F-measure 0.978 by the cascaded model in (Jiang et al., 2008a).",
        "We focus on the task of word segmentation only in this work and show that a comparable F-measure is achievable in a much more efficient manner.",
        "Sun (2011) uses the stacked learning technique to merge different levels of predictors, obtaining a combined system that beats individual ones.",
        "Word-based features can be easily incorporated, since the ILP formulation is more naturally viewed as a word-based model.",
        "We extend character-based features with the word count features as described in Section 3.4.",
        "Currently, we only use word counts computed from training data, i.e. still a closed test.",
        "The addition of these features makes a moderate improvement on the F-measure, from 0.974 to 0.975.",
        "As discussed in Section 3.3, if we are able to determine that some characters always start new words, the number of possible words is reduced, i.e. the number of variables in an ILP solution is reduced.",
        "As shown in Table 11, when character se",
        "quences are partially tagged by deterministic constraints, the number of possible words per sentence, i.e. avg.",
        "|x|, is reduced from 1290.4 to 83.7.",
        "This reduction of ILP problem size has a very important impact on the efficiency.",
        "As shown in Table 11, when taking constrained input, the segmentation speed is increased by 107 times over taking raw input, from 113 characters per second to 12,190 characters per second on a dual-core 3.0HZ CPU.",
        "Deterministic constraints predicting IB tags are only used here for constraining possible words.",
        "They are very accurate as shown in Section 5.2.",
        "Few gold predictions are missed from the constrained set of possible words.",
        "As shown in Table 11, F-measure is not affected by applying these constraints, while the efficiency is significantly improved."
      ]
    },
    {
      "heading": "6 Conclusion and future work",
      "text": [
        "We have shown by experiments that large number of deterministic constraints can be learned from training examples, as long as the proper representation is used.",
        "These deterministic constraints are very useful in constraining probabilistic search, for example, they may be directly used for determining predictions as in English POS tagging, or used for reducing the number of variables in an ILP solution as in Chinese word segmentation.",
        "The most notable advantage in using these constraints is the increased efficiency.",
        "The two applications are both well-studied; there isn't much space for improving accuracy.",
        "Even so, we have shown that as tested with the same feature set for CWS, the proposed ILP formulation significantly improves the F-measure as compared to Viterbi decoding.",
        "These two simple applications suggest that it is of interest to explore data-driven deterministic constraints learnt from training examples.",
        "There are more interesting ways in applying these constraints, which we are going to study in future work."
      ]
    }
  ]
}
