{
  "info": {
    "authors": [
      "Lei Zhang",
      "Ming Zhou",
      "Changning Huang",
      "Haihua Pan"
    ],
    "book": "Annual Meeting of the Association for Computational Linguistics",
    "id": "acl-P00-1032",
    "title": "Automatic Detecting/Correcting Errors in Chinese Text by an Approximate Word-Matching Algorithm",
    "url": "https://aclweb.org/anthology/P00-1032",
    "year": 2000
  },
  "references": [
    "acl-J96-1003"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "An approximate word-matching algorithm for Chinese is presented.",
        "Based on this algorithm, an effective approach to Chinese spelling error detection and correction is implemented.",
        "With a word trigram language model, the optimal string is searched from all possible derivation of the input sentence using operations of character substitution, insertion, and deletion.",
        "Comparing the original sentence with the optimal string, spelling error detection and correction is realized simultaneously."
      ]
    },
    {
      "heading": "Introduction",
      "text": [
        "No system aiming at automatic detecting and correcting errors in Chinese text achieves satisfying result today.",
        "One representative approach is confusing character substitution method (Chang, 1994), where confusing characters are used to replace every character in the input sentence, and a \"correct\" result with highest evaluation score is searched from all paths.",
        "While achieving relatively good result, it has obvious weakness: only character substitution errors can be detected and corrected, other kinds of errors can not be handled, including character deletion, character insertion, and string substitution errors.",
        "There is a clear two-level structure in English spelling error detection and correction, \"non-word\" error and \"real-word\" error (Kukich, 1992).",
        "Things are different in Chinese.",
        "Although many approaches find that most errors in Chinese cause segmentation abnormal (Sun, 1997 and Zhang, 1998), no one stress on such \"non-word\" error and the two-level structure is not adopted in Chinese.",
        "Following are possible reasons for this situation.",
        "There is no obvious word boundary in Chinese text, so automatic word segmentation must be introduced.",
        "If error exists, segmentation result could be weird.",
        "For example, the segmentation of ,'VJ AkAk, which is a character deletion error for the word MJ1,L4 Ak, may appear like,'J'./I(k/AC, including three one-character words.",
        "It's easy for human to judge thatTJ kAk is some kind of \"non-word\" error, but it's difficult for computer to make such a decision because most Chinese characters could be used as a one-character word.",
        "A fast approximate Chinese word-matching algorithm is presented.",
        "Based on this algorithm, a new automatic error detection and correction approach using confusing word substitution is implemented.",
        "Compared with the approach of (Chang, 94), its distinguished feature is that not only character substitution error, but also character insertion or deletion error and string substitution error could be handled.",
        "When classifying errors in Chinese text, most papers prefer to categorize errors on the character level.",
        "In our opinion, this kind of classification contributes little to improve the performance for Chinese text error detection and correction.",
        "Referring to what's common in English spelling error detection and correction, we classify errors as followed: (1)Non-word errors: The string mapping to a word in the correct text can't be treated as a word in the corresponding error text.",
        "This kind of error can be further classified into: Ji Character substitution error.",
        "A correct character is replaced by another character.",
        "Such as 1 1�t",
        "String substitution error.",
        "A correct string is replaced by another string, and at least one of the two strings consists of more than one character.",
        "Such as 4 � FIL Character insertion error.",
        "Such as ' ; )�MA 4 I:�C�CJ (A)Character deletion error.",
        "Such as ,r ,,b kAk 4 rkkk `_V `.",
        "(2) Real-word errors.",
        "This kind of error could be further classified into: ( Word substitution error.",
        "Such as �_*M 4 300.",
        "(2 Word insertion error.",
        "Such as XT 4 XTU T. Word-Deletion error.",
        "Such as – A.",
        "1.2 Fast precise Chinese word-matching algorithm",
        "Dictionary organized in (deterministic) finite state recognizer (FSR) format is used to implement the fast precise Chinese word-matching algorithm.",
        "FSR = (Q, A, S, F) with Q denoting the set of states, A denoting the input alphabet, which are all Chinese characters for a Chinese dictionary, S : QxA4Q denoting the state transition function and F c Q denoting the final states.",
        "Besides, let stStart denote the starting state of a FSR, stError denote the state when input character cannot be accepted.",
        "Precise Chinese word match is to find all the strings, starting from a specific position in a sentence, which are items in a dictionary.",
        "For example, with the dictionary including words: rP, rPP .",
        "rPP91`, MA, A, AVQ, at the beginning of the sentence \" rp P9 A vl� YM Ai * T ! \"",
        ", three words of different length \"rp\", \"rp [9 \", \"rP [9 A\" should be matched.",
        "Figure 1 shows the algorithm of fast precise Chinese word match.",
        "Where dict=(Q, A, S, F) is a Chinese dictionary, state is its current state, str is the string currently read by dict, sentence is the input sentence, idx is the subscript in the sentence of the character that should be read immediately.",
        "All matched words are put into result.",
        "The initial values when calling this recursive function should assure: str=nil, state=stStart, result=O.",
        "This function is used by approximate word-matching algorithm later.",
        "1.3 Approximate Chinese word-matching algorithm",
        "Approximate word match based-on FSR is used in English spelling error detection and correction to find all words in a dictionary whose minimum edit distance to a given string is less than a threshold.",
        "However, there are great differences between the approximate word match of Chinese and English.",
        "First, the length of the English string to be matched is determinate.",
        "Because there are no obvious word boundaries in Chinese text, the length of the Chinese string to be matched is unknown.",
        "So approximate Chinese word match must find words that are similar to all strings of different length.",
        "For example, when approximately matching the sentence \" M `�; -*)M AJO\" at its beginning, the algorithm should give out all Chinese words that are similar to \")I\", \")I",
        "Second, character is the basic unit in the English, and its approximate word-matching algorithm can adopt a cut-off method (Oflazer, 1996) depending on the string currently read and only one character to be read next time.",
        "This decreases the search space greatly.",
        "As mentioned before, errors in Chinese text may be caused by string replacement where the lengths of the correct string and its corresponding error string may be different.",
        "This means, no matter how far the FSR has read from the beginning position, how dissimilar the string currently read is to all possible words, we can't determine whether or not words that are similar to the target string could be found if more characters are read later.",
        "For example, the error 4 AZ)�AA Oft, which is caused because the Five-stroke input code are similar between )�(tdi) and A)K Oft(tmdi).",
        "Although AZT AA is dissimilar to all words in dictionary, AZT* K -; A is similar to word The direct way to implement the approximate Chinese word match is: for each substring with length 1, 2, 3, ..., N, starting at specified position in sentence, browse the dictionary and count their similarity or edit distance to every word in it.",
        "This approach will face two problems: (1) High computational complexity.",
        "A common Chinese dictionary with normal size contains about 60,000 words.",
        "Besides, the evaluation of the similarity between two strings is also time-consuming.",
        "Its computing cost is far from the real-time requirement of error detection and correction.",
        "Z2 What is the maximum substring length N?",
        "One may think that 4 or 5 is enough.",
        "Let's look at an extraordinary example.",
        "Imaging an inexperienced Five-Stroke typewriter is supposed to input a four-character word and he makes mistakes on every character.",
        "More unfortunately, his carelessness causes every single character transformed to a four-character word.",
        "Finally he gets a 16-character string instead of the expected four-character word.",
        "Here, N should be at least 16 to get the proper match.",
        "To implement approximate match, distance of two strings should be defined.",
        "Some predefined distances of two strings is called meta-distance, denoted with MetaD.",
        "We define MetaD(X, Y) between two Chinese strings X and Y according to their grapheme, pronunciation and input code: Ji The similarity of their Pinyin input code.",
        "For characters X and Y with same pronunciation, for example n (tong) and 31 (tong), MetaD(X, Y)=30.",
        "For characters X and Y different only on surd/sonant, for example P' f (shan) and E (san), MetaD(X, Y)=40.",
        "(�) The similarity of their Five-Stroke input code.",
        "For strings X and Y that one input code could be transformed to another at most by one substitution operation, for example3f 9�(ahnm) and ZA-fS(ahnn), MetaD(X,Y)=30.",
        "For strings X and Y that one input code could be transformed to another only by one insertion, deletion or transposition operation, for example jX (aa) and Z (aaa), Pi (bwj) and �11(wbj), MetaD(X,Y)=40.",
        "(�) Some rules learned from text errors reflecting common human confusion on Chinese characters.",
        "For example, MetaD(, -)=26.",
        "In addition, let s mean null string, for each character z, let MetaD(s,․) = MetaD(z, z) _ 0, MetaD(z, s) = Metad(s, z) = 50.",
        "For those string pairs X and Y that there is no meta-distance definition between them, just let MetaD(X,Y)=+ co.",
        "Define the set of meta-strings M as: M= { X1 X# s, 3 Y # X, MetaD(X, Y) < +oo } For each meta-string XE M, define its confusing string set cfs(X) as:",
        "And each YE cfs(X) is called confusing string of X.",
        "When character transposition error' is not considered, the distance of two strings Xlm and Ytn, where m and n is the length of X and Y respectively, can be defined as:",
        "This recursive definition is not easy to compute.",
        "Fortunately, our approximate match algorithm use a heuristic expanding method and avoid the computing cost.",
        "Character transposition error is rare in Chinese text.",
        "1.3.2 Fast approximate Chinese word-matching algorithm Chinese word approximate match is to find, from a specific position in the target sentence, all words that has a distance less than a threshold tw to substrings beginning at the position with different length 1, 2, 3, .... At the same time, the beginning position of the match next time and the distance d between the matched word and its corresponding original string should also be given.",
        "In our implementation, the set of meta-string M is also organized in a FSR format.",
        "In M's every final state representing a meta-string X, all strings in cfs(,Y) and their distances to X is recorded.",
        "Figure 2 shows the approximate Chinese word-matching algorithm.",
        "Where cdfa=�Q , A, 6, F) is M. dict--(Q, A, S, F) is Chinese dictionary.",
        "state is the current state of dict.",
        "str is the string currently read by dict.",
        "sentence is the target sentence.",
        "idx is the subscript in the sentence of the character to be read next time.",
        "dill is the distance of two partial strings already matched.",
        "result is a set of 3-tuple elements like (word, next, d), where word is the approximate matched word, next is the position where the approximate match should start next time.",
        "d is the distance between the matched word and its corresponding original string.",
        "The initial values when calling this algorithm should assure: str–nil, state=stStart, dif�0, result .",
        "The algorithm could restore character insertion, deletion, substitution errors as well as string substitution errors.",
        "The threshold tw decreases the search space.",
        "For example, when to approximate match at the beginning of \", where I is a character substitution error of 1, the result may be contains ()1, 2, 0), (IM, 2, 30), 2, 30), (�, 2, 40),..., ()j, 3, 0), ()j 4, 0), ()101, 2, 50), ()1f, 2, 50),..., (MR, 2, 50), (#)1, 2, 50)..., etc.",
        "The correct word )I X is in the list."
      ]
    },
    {
      "heading": "2 Confusing word substitution approach",
      "text": [
        "Confusing character substitution approach (Chang, 1994) got a relatively good result, but can not deal with errors of character insertion, character deletion and string substitution.",
        "Our confusing word substitution approach is an improvement on the confusing character substitution approach by mending such disability.",
        "It is based on the fast approximate Chinese word-matching algorithm.",
        "In this approach, a given sentence is approximately segmented from all possible derivation of the input sentence using operations of substitution,",
        "insertion, and deletion.",
        "Paths are then evaluated using base language model and distance discount.",
        "The optimal path with highest score is searched and treated as the correction of the original sentence."
      ]
    },
    {
      "heading": "2.1 Approximate segmentation",
      "text": [
        "As what happens in precise segmentation, approximate segmentation is to give a segmentation path for a input sentence, but with error tolerant ability.",
        "On the path, each word is similar to its corresponding original string in the input sentence.",
        "That's why we call this confusing word substitution approach.",
        "For a input sentence, let threshold ts_> t,,,.",
        "It's required that the sum of distances between all the words W' on an approximate segmentation path and their corresponding original string W can not be greater than ts: I d (W' , W) <_ is"
      ]
    },
    {
      "heading": "W lF path",
      "text": [
        "The reason for using is is that there are always little errors in one sentence and it could decrease the space of the approximate segmentation paths.",
        "Figure 3 shows the algorithm of the approximate segmentation listing all possible paths.",
        "Where the path is an approximate segmentation for input sentence, it's an array of elements like (word, next, d).",
        "result is the set of all possible approximate segmentation paths.",
        "Other symbols, such as dict and cdfa, are of same meaning as in section"
      ]
    },
    {
      "heading": "2.2 Path evaluation",
      "text": [
        "The evaluation of paths consists basic language model evaluation and distance discount.",
        "For a given approximate segmentation path, basic language model evaluation can adopt N-Gram models of character, word, POS tag or word class.",
        "Denote the score with ModelScore(path).",
        "The distance discount multiplies the ModelScore with a discount, valued from 0 to 1, according to the distance between the path and the input sentence.",
        "The final score of a path FS is: FS(path, sentence) ModelScore(path) discount(path, sentence) In this paper, we use: discount(path, sentence)= 11 f(l,n,d(W ,W))"
      ]
    },
    {
      "heading": "W� path",
      "text": [
        "Where l is the length of W', n is the number of the segment units when its corresponding original string W is segmented.",
        "d(W , W) is the distance between W' and W f is the discount function.",
        "Generally, the value of f should be closer to 1.0 if d is less, l is longer or n is greater.",
        "Because the number of possible paths in an approximate segmentation is very large, to avoid the computational complexity, dynamic programming is adopted and some changes are made to the segmentation algorithm."
      ]
    },
    {
      "heading": "3 Experiment and results",
      "text": [
        "First define some evaluating indicator for the automatic error detection and correction task, let: A=number of errors in target text.",
        "B=number of warnings the proofreading approach given C=number of errors the proofreading approach detected D=number of errors the proofreading approach corrected",
        "Then, recall rate = C/A* 100%, precise rate = CB* 100%, correction rate= D/A* 100%.",
        "In the experiment, a text containing 535 errors is to be detected and corrected.",
        "The corpus to train the word trigram language model is about 200M bytes, including people's daily 93 and 94, 10 years reader, BaiJiaBao'94, ShiChangBao'94.",
        "Two thresholds is and tw are set 59 and 50 respectively.",
        "Zhang Zhaohuang's approach is also applied on the test text as a comparison.",
        "The distribution of different kinds of errors and the experiment results are shown in Figure 4.",
        "From the result, we can see that our approach using similar word substitution has the same ability to detect and correct the character substitution errors as (Zhang 1994) approach.",
        "But its ability to detect and correct character insertion error, character deletion error and string substitution error are highly enhanced.",
        "The result shows that our approach has great practicability.",
        "The reason for those incorrect warnings and undetected or uncorrected errors mainly on: U Insufficient of the similar string set.",
        "When a correct string is not included in the similar string set, some errors will not be detected and corrected.",
        "For example, the error,cHn bfb jJ\"�\"I7�L�f}1 fJ\" did not detected in our experiment because \"V' does not in the similar string set of \"\".",
        "More complete similar string set will detect and correct more errors, yet they may also cause more incorrect warnings, and increase the computing cost.",
        "Language Mode deficiency.",
        "Trigram only has local linguistic constraints.",
        "It's necessary to adopt long-distance constraints.",
        "Incomplete of the dictionary.",
        "Data sparseness.",
        "Larger corpus needed in training."
      ]
    },
    {
      "heading": "4 Conclusion",
      "text": [
        "A fast approximate Chinese word-matching algorithm is presented in this paper.",
        "Based on the algorithm, an automatic Chinese Spelling Error Correction approach using similar word",
        "substitution and language model evaluation is designed.",
        "Compared with Zhang Chao-Huang's confusing character substitution method, this new approach can deal with not only character substitution errors but also insertion, deletion and string substitution errors.",
        "Because no word boundaries in Chinese text, there is not a two-level structure of \"non-word\" and \"real-word\" errors in Chinese spelling correction task like that in English spelling correction.",
        "The fast approximate Chinese word-matching algorithm can handle Chinese \"non-word\" error efficiently, making it easy to establish a two-level structure in Chinese spelling correction.",
        "The future research may include: Ol Pruning the approximate word matching result before they take part in the approximate segmentation.",
        "This will decrease the computing cost.",
        "(�) Introducing long distance constraints.",
        "What's need to point out is that dynamic programming may dislike this kind of long distance constrains.",
        "So they are more suitable in the pruning and discounting."
      ]
    }
  ]
}
