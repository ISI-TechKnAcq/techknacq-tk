{
  "info": {
    "authors": [
      "Nancy M. Ide",
      "Harry C. Bunt"
    ],
    "book": "Proceedings of the Fourth Linguistic Annotation Workshop",
    "id": "acl-W10-1840",
    "title": "Anatomy of Annotation Schemes: Mapping to GrAF",
    "url": "https://aclweb.org/anthology/W10-1840",
    "year": 2010
  },
  "references": [
    "acl-P98-1013"
  ],
  "sections": [
    {
      "text": [
        "Nancy Ide",
        "Harry Bunt",
        "Tilburg Center for Creative Computing Tilburg University, The Netherlands harry.bunt@uvt.nl",
        "In this paper, we apply the annotation scheme design methodology defined in (Bunt, 2010) and demonstrate its use for generating a mapping from an existing annotation scheme to a representation in GrAF format.",
        "The most important features of this methodology are (1) the distinction of the abstract and concrete syntax of an annotation language; (2) the specification of a formal semantics for the abstract syntax; and (3) the formalization of the relation between abstract and concrete syntax, which guarantees that any concrete syntax inherits the semantics of the abstract syntax, and thus guarantees meaning-preserving mappings between representation formats.",
        "By way of illustration, we apply this mapping strategy to annotations from ISO-TimeML, PropBank, and FrameNet."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "The Linguistic Annotation Framework (LAF, (Ide and Romary, 2004); ISO 24612, 2009) defines an abstract model for annotations together with an XML serialization of the model, the Graph Annotation Format (GrAF, (Ide and Suderman, 2007)).",
        "GrAF is intended to be a pivot format capable of representing diverse annotation types of varying complexity, guaranteeing syntactic consistency among the different annotations.",
        "GrAF does not address the issue of semantic consistency among annotation labels and categories; this is assumed to be handled by other standardization efforts such as ISOCat (Kemps-Snijders et al., 2009).",
        "ISOCat provides a set of data categories at various levels of granularity, each accompanied by a precise definition of its linguistic meaning.",
        "Labels applied in a user-defined annotation scheme should be mapped to these categories in order to ensure semantic consistency among annotations of the same phenomenon.",
        "While the mapping of annotation labels to a common definition, coupled with the syntactic consistency guaranteed by GrAF, takes a giant step towards the harmonization of linguistic annotations, this is still not enough to ensure that these annotations are sufficiently compatible to enable merging, comparison, and manipulation with common software.",
        "For this, the conceptual structure of the annotation, in terms of the structural relations among the defined annotation categories, must also be consistent.",
        "It is therefore necessary to consider this aspect of annotation scheme design in order to achieve a comprehensive treatment of the requirements for full harmonization of linguistic annotations.",
        "In (Bunt, 2010), a design methodology for semantic annotation schemes is proposed, developed during the ISO project \"Semantic annotation framework, Part 1: Time and events\" (\"Se-mAF/Time\", for short), which is currently nearing completion (see ISO DIS 24617-1, 2009).",
        "The methodology includes a syntax that specifies both a class of representation structures and a class of more abstract annotation structures.",
        "These two components of the language specification are called its concrete and abstract syntax, respectively.",
        "A distinguishing feature of the proposed methodology is that the semantics is defined for the structures of the abstract syntax, rather than for the expressions that represent these structures.",
        "In this paper, we generalize the design methodology defined in (Bunt, 2010) and demonstrate its use for generating a mapping from an existing annotation scheme to a representation in GrAF format.",
        "By way of illustration, we apply the mapping strategy to annotations from ISO2005), and FrameNet (Baker et al., 1998)."
      ]
    },
    {
      "heading": "2. Background",
      "text": [
        "The process of corpus annotation may consist of attaching simple labels to textual elements, such as part of speech and syntactic designations and named entity tags.",
        "For more complex types of annotation, annotations include a variety of additional information about linguistic features and relations.",
        "This is especially true for the kinds of semantic annotation that have recently begun to be undertaken in earnest, including semantic role labeling (e.g., FrameNet and PropBank) and time and event annotation (e.g., TimeML).",
        "However, these annotation schemes are not always designed based on formal principles, and as a result, comparing or merging information-even from two schemes annotating the same phenomenon-can be difficult or impossible without substantial human effort.",
        "A major source of difficulties in interpreting annotation scheme content is that information in the annotation is implicit rather than explicit, making (especially) structural relations among parts of the linguistic information ambiguous.",
        "This often results from the use of an impoverished representation scheme, which provides only minimal mechanisms for bracketing and association.",
        "Consider, for example, the two annotation fragments below, expressed with parenthetic bracketing, taken from a computational lexicon:",
        "In (1), the bracketed information is a list of alternatives, whereas in (2), it is a set of properties, but there is no way to automatically distinguish the two in order to process them differently.",
        "Another example comes from PropBank:",
        "Because of the \"flat\" representation, it is impossible to automatically determine if the mor-phosyntactic descriptor \"vn-a\" is associated with the element annotated as \"rel\", vs. the \"gold\" descriptor that is (assumedly) associated with the entire proposition.",
        "In both of these examples, linguistically-informed humans have little difficulty determining the structure because of the knowledge they bring to the interpretation.",
        "This knowledge is then embedded in the processing software so that the data are processed properly; however, because it is not a part of the representation itself, it is not available to others who may develop software for other kinds of processing.",
        "To avoid these problems, annotation scheme design in ISO projects is split into two phases: the specification of (1) an abstract model consisting of annotation categories and structures and (2) specification of (possibly multiple) representation structures.",
        "An abstract model of annotation structures is typically implemented via development of a \"metamodel\", i.e. a listing of the categories of entities and relations to be considered, often visualized by a UML-like diagram-i.e., a graph.",
        "Schemes described via this method are trivially mappable to GrAF, ensuring that syntactic consistency among the different schemes, whatever their original representation structures may be, is achievable.",
        "It also ensures that these schemes are trivially mappable to different representation formats that are used in various software systems, e.g., GATE, UIMA, NLTK, GraphViz, etc."
      ]
    },
    {
      "heading": "3. Anatomy of an annotation scheme",
      "text": [
        "As specified in (Bunt, 2010), an annotation scheme consists of a syntax that specifies a class of more abstract annotation structures (the abstract syntax) and a class of representation structures (the concrete syntax), plus a semantics associated with the abstract syntax.",
        "The abstract syntax of an annotation scheme defines the set-theoretical structures which constitute the information that may be contained in annotations.",
        "It consists of (a) a specification of the elements from which these structures are built up, called a conceptual inventory; and (b) annotation construction rules, which describe the possible combinations of these elements into annotation structures.",
        "The semantics of the annotation scheme components is defined for the annotation structures of the abstract syntax; Bunt (2010) provides a formal specification of the semantics of ISO-TimeML in terms of Discourse Representation Structures (Kamp and Reyle, 1993), and defines the class of concrete representations of the structures defined by the abstract syntax.",
        "For example, a fragment of the ISO-TimeML conceptual inventory includes:",
        "• finite sets of elements called event types, tenses, aspects, signatures, cardinalities, and veracities.",
        "• finite sets of elements called temporal relations, duration relations, event subordination relations, aspectual relations, etc.",
        "The annotation construction rules for ISO-TimeML specify how to construct two types of annotation structures: entity structures and link structures.",
        "One type of entity structure, called an event structure, is defined as a 6-tuple (e, t, a, s, k, v) where e is a member of the set of event types; t and a are a tense and an aspect, respectively; s is a signature (a set-theoretical type that is used for handling quantification over events); k is a cardinality, used for expressing information about the size of a set of events involved in a quantified relation; and v is a veracity, which is used to represent whether an event is claimed to have occurred, or claimed not to have occurred (for dealing with positive and negative polarity, respectively), or to have yet another status such as 'possibly' or 'requested', for handling such cases as Please come back later today.",
        "A time-amount structure is a pair (n, u) or a triple (R, n, u), where n is a real number, R a numerical relation, and u a temporal unit.",
        "The rules also define a link structure called an event duration structure as a triple (event structure, time-amount structure, duration relation).",
        "The concrete syntax provides the representation of annotation structures defined in the abstract syntax.",
        "A concrete syntax is said to be ideal for a given abstract syntax if there is a one-to-one correspondence between the structures defined by the abstract syntax and those defined by the concrete syntax.",
        "An ideal concrete syntax RFi defines a function F1 from annotation structures to RFi-representations, and an inverse function F\"from RF1-representations to annotation structures.",
        "In other words, the abstract and the concrete syntax are isomorphic.",
        "Since this holds for any ideal concrete syntax, it follows that any two ideal representation formats are isomorphic.",
        "Given two",
        "type =\"FAST\" tense=PAST signature=\"INDIVIDUAL\"/> <TIME-AMOUNT xml:id=\"ta1\"",
        "duration=\"ta1\" relType=\"FOR\"/> </isoTimeML-ICS1rep>",
        "September2009.",
        "TimeML.",
        "Tokens: [Iti][fastedt2][fort3][twou][dayst5].",
        "Figure 1: ISO-TimeMLJCS1 annotation",
        "ideal representation formats RFi and RFj we can define a homomorphic mapping Cij from RFi-representations to RFj-representations by and conversely, we can define a homomorphic mapping Cji from RFj-representations to RFi-representations by",
        "These two mappings constitute conversions from one format to the other, that is, they constitute one-to-one meaning-preserving mappings: if ß(r) denotes the meaning of representation r, then ß(Cij(r)) = ß(r) for any Fi-representation r, and conversely, ß(Cji(r')) = ß(r') for any Fj-representation r'.",
        "Figure 1 shows a rendering of the sentence I fasted for two days using a concrete XML-based syntax for the annotation structures defined by the ISO-TimeML abstract syntax, called the ICS-1 format, as described in (Bunt, 2010)."
      ]
    },
    {
      "heading": "4. GrAF overview",
      "text": [
        "GrAF is an exchange or pivot format intended to simplify the processes of merging of annotations from different sources and using annotations with different software systems.",
        "The underlying data model is a directed acyclic graph, which is isomorphic to UML-like structures that may be used to define an abstract syntax for a given annotation scheme, as described in section 3.",
        "GrAF is an XML serialization of a formal graph consisting of nodes and edges, either or both of which are decorated with feature structures.",
        "Nodes may have edges to one or more other nodes in the graph, or they may be linked directly to regions within the primary data that is being annotated.",
        "The feature structure attached to a node or edge provides the content of the annotation-that is, the associated linguistic information expressed as a set of attribute-value pairs.",
        "The feature structures in GrAF conform to formal feature structure specifications and may be subjected to operations defined over feature structures, including subsumption and unification.",
        "As a result, any representation of an annotation in GrAF must consist of a feature structure that provides all of the relevant linguistic information.",
        "Figure 2 shows a fragment of a FrameNet frame element annotation, serialized in GrAF XML.",
        "It consists of a graph node with id \"fn-n1\" and an annotation with the label \"FE\".",
        "The refattribute on the <a> (annotation) element associates the annotation with node \"fn-n1\".",
        "The annotation contains a feature structure with three features: FE (Frame element), GF (Grammatical Function), and PT (Phrase Type).",
        "An edge connects the node to another node in the graph with the id \"fntok-n5\" (not shown here), which is associated with annotation information for a token that in turn references the span of text in primary data being annotated."
      ]
    },
    {
      "heading": "5. Mapping to GrAF",
      "text": [
        "LAF specifies that an annotation representation R is valid if it is mappable to a meaning-preserving representation in GrAF, and that its GrAF representation is in turn mappable to R. In terms of the definitions in section 3, a LAF-valid representation R is one where ß(R) = ß(CRG(R)) and ß(G) = ß(CGR(G)), where G is a GrAF representation.",
        "We can also define a valid annotation scheme in terms of conversion transitivity through GrAF; that is, for two arbitrary annotation schemes R and S, the following holds:",
        "Our goal here is to provide a formal specification for the mapping function CRG, assuming the existence of a formal specification of an annotation scheme as outlined in section 3.",
        "To accomplish this, it is necessary to identify the two components of an abstract syntax for annotation scheme R: the conceptual inventory and the annotation construction rules that indicate how elements of the conceptual inventory are combined into annotation structures-specifically, entity structures, which describe annotation objects, and link structures, which describe relations among entity structures.",
        "Once these are available, a general procedure for establishing a GrAF representation of the annotation structures is as follows:",
        "For each type of entity structure e:",
        "• introduce a label Le, where Le is the entity structure type;",
        "• define a set of features f corresponding one-to-one with the components of the n-tuple of elements from the conceptual inventory defining entity structure e.",
        "A link structure is a triple (E1 ,E2,r) consisting of two sets of entity structures and a relational element defining a relation between them.",
        "For each type of link structure:",
        "1. introduce a label Lr, where Lr is the type name of relation r.",
        "2.",
        "If r is associated with a set of elements from the conceptual inventory, then features are created as in (2), above.",
        "In GrAF, an annotation A consists of a label L and a feature structure containing a set of features f. Annotations may be associated with nodes or edges in the graph.",
        "Typically, entity structures are associated with nodes that have links into a region of primary data or one or more edges connecting it to other nodes in the graph.",
        "Link structures are associated with edges, identifying a relation among two or more entity structures.",
        "In the simplest case, a link structure consists of a relation between two entity structures, each of a given type; in the corresponding GrAF representation, the link structure label is associated with an edge d that connects nodes n1,n2, each of which is decorated with annotations labeled L1,L2, respectively.",
        "For example, for the ISO-TimeML abstract syntax fragment provided in section 3, we define the labels EVENT and INSTANT corresponding to the two entity structures with names event structure and time amount structure, and a link structure TIME-ANCHORING.",
        "Because an event structure is defined as a 6-tuple (e, t, a, s, k, v), we define six features event, tense, aspect signature, cardinality, and veracity.",
        "A time-amount structure may be a pair (n, u) or a triple (R, n, u), where n is a real number, R a numerical relation, and u a temporal unit, so we introduce features numeral, unit, and relType.",
        "Finally, the time anchoring link structure is a triple (event structure, time-amountstructure, duration relation).",
        "In this case, the first two elements of the triple are the entity structures being linked; these will be represented as nodes in the GrAF implementation.",
        "The label and features associated with each entity and link structure provide the template for an annotation corresponding to that structure with appropriate values filled in, which may then be associated with a node or edge in the graph.",
        "The GrAF representation of the ISO-TimeML annotation for the sentence I fasted for two days is shown in Figure 3, based on the abstract syntax given in section 3.1.",
        "To create an annotation corresponding to an ISO-TimeML entity structure, a node <node> element) is created and assigned a unique identifier as the value of the XML attribute xml:id.",
        "An annotation (<a>) element is also created, with a label attribute whose value is the entity structure name, and which contains a feature structure providing the appropriate feature/value pairs for that entity structure.",
        "The annotation is associated with the node by using the node's unique identifier as the value of the refattribute on the <a> element.",
        "An edge is then created from the node to another node in the graph (r2) that references the data to be annotated-in this case, one or more tokens defined over regions of the primary data.",
        "ISO-TimeML link structures define a relation between two entity structures, and are rendered in GrAF as a labeled edge between the nodes annotated with the entity structure information.",
        "In the ISO-TimeML example, an annotation with label MLINK ('measure link') is created with a single feature relType.",
        "The from and to attributes on the <edge> element link the node with the EVENT entity structure annotation (node tml-n1 in the example) to the node with the TIME-AMOUNT annotation (tml-n2).",
        "This edge is then associated with the MLINK annotation (cf. Bunt and Pustejovsky, 2009; Pustejovsky et al., 2010).",
        "Figure 1 shows the rendering of the ISO-TimeML abstract syntax in the ICS-1 concrete syntax.",
        "Following Section 3.2, these two realizations of the abstract syntax for ISO-TimeML are isomorphic.",
        "Tokens: [Iti][/astedt2][/ort3][twot4\\[dayst5].",
        "Figure 3: ISO-TimeML annotation in GrAF",
        "value=\"individual\"/>",
        "The previous two sections show how schemes for which an abstract syntax is specified can be rendered in GrAF as well as other concrete syntax representations.",
        "However, as noted in section 2, many annotation formats-especially legacy formats-were not designed based on an underlying data model.",
        "Therefore, in order to achieve a mapping to GrAF, it is necessary to \"reverse engineer\" the annotation format to define its abstract syntax.",
        "Because of problems such as those outlined in Section 2, this exercise may require some extrapolation of information that is implicit, or not specified, in the original annotation format.",
        "We provide two examples below, one for PropBank and one for FrameNet.",
        "The PropBank format specifies an annotation for a sentence consisting of several columns, specifying the file path; the sentence number within the file; the number of the terminal in the sentence that is the location of the verb; a status indication; a frameset identifier (frame and sense number); an inflection field providing person, tense, aspect, voice, and form of the verb; and one or more \"proplabels\" representing an annotation associated with a particular argument or adjunct of the proposition.",
        "Proplabels are associated with primary data via reference to the Penn Treebank (PTB) node in the syntax tree of the sentence.",
        "Based on this we can specify a portion of a PropBank conceptual Inventory:",
        "• a special proposition type verb, designating the verb (replaces PropBank \"rel\");",
        "• a finite set PROP = {ARGA, ARGM, ARG0, ARG1, ARG2} of proposition labels;",
        "• a finite set FEAT = {EXT, DIR, LOC, TMP, REC, PRD, NEG, MOD, ADV, M NR, CAU, PNC, DIS}, plus the set of prepositions and \"null\", comprising the set of features;",
        "{form, tense, aspect, person, voice}, where form = {infinitive, gerund, participle, finite}, tense = {future, past, present}, aspect = {perfect, progressive, both}, person = and voice = {active, passive}.",
        "• afiniteset FrameSets = {fs1,fs2,...fsn} where each fsi is a frame set defined in Prop-",
        "Bank.",
        "An abstract syntax for PropBank could specify the following annotation construction rules:",
        "• a proposition entity structure is a pair ( f, A) where f is a frameset and A is a set of argument entity structures.",
        "• an argument entity structure is an argument",
        "a G PROP x FEAT.",
        "• a verb entity structure is a 5-tuple (f,t,a,p,v) where f G form, t G tense, a G aspect, p G person, and v G voice.",
        "Based on this, the PropBank annotation in Section 2 can be rendered into a concrete syntax; in this case, in GrAF as shown in Figure 4.",
        "Note that the to attribute on <edge> elements have as values the reference to PTB nodes from the original PropBank encoding; in GrAF, these values would be identifers on the appropriate nodes in a GrAF representation of PTB.",
        "We have also included role names (e.g., \"owner\") in the annotation, which are not present in the original; this was done for convenience and readability, and the values for the \"role\" feature could have been given as arg-0, arg-1, etc.",
        "instead.",
        "The original PropBank encoding is close to an ideal concrete syntax, as it can be generated from the abstract syntax.",
        "However, the round trip back to the abstract syntax is not possible, because it is necessary to do some interpretation ofassociations among bits of annotation information in order to construct the abstract syntax and, subsequently, map the PropBank format to GrAF.",
        "Specifically, in the GrAF encoding the inflection information is associated with the node referencing the verb, but this association is not explicit in the original (and in fact may not be what the annotation scheme designers intended).",
        "5.2.2 An abstract syntax for FrameNet The FrameNet XML format is shown in Figure 5.",
        "The structure and content of this encoding is highly oriented toward a presentation view,",
        "<f name=\"role\" value=\"possession\"/> <f name=\"feature\" value=\"adverbial\"/>",
        "intended to support display of the sentence and frame elements in a browser.",
        "A partial abstract syntax for FrameNet derived from this format includes the following conceptual inventory:",
        "• a Target, designating the frame-evoking lexical unit;",
        "• a finite set FE = {Recipient, Supplier, Means,...} of frame element labels;",
        "• a finite set GF = {Obj,Ext,Dep,...} of grammatical functions.",
        "• a finite set PT = {NP, PP,...} of phrase types.",
        "• a finite set LU = {u1,u2, ...un} where each ui is a lexical unit.",
        "• a finite set FrameNames = {f1, f2,...fn} where each fi is a frame defined in FrameNet.",
        "An abstract syntax for this partial inventory could specify the following annotation construction rules:",
        "• a frame entity structure is a pair ( f, A) where f is a frame name, u is a lexical unit, and F is a set of frame element (FE) entity structures.",
        "• an FE entity structure is a triple { f, g, p}, f G",
        "FE, g G GF, p G PT.",
        "The GrAF rendering of the abstract syntax is given in Figure 6, which was generated from the FrameNet abstract syntax using the rules outlined in section 5.",
        "Both the FrameNet XML and the GrAF rendering provide an ideal concrete syntax because they are isomorphic to the abstract syntax and, by the definition in section 3.2, are conversions of one another."
      ]
    },
    {
      "heading": "6. Conclusion",
      "text": [
        "In this paper we outlined a methodology for annotation scheme design and development; demonstrated how schemes designed using this methodology may be easily mapped to GrAF; and demonstrated how \"reverse engineering\" an annotation format whose abstract syntax is unspecified can provide the information required to map that format to GrAF.",
        "This work was undertaken with two goals in mind: (1) to provide a formal method for mapping to GrAF; and (2) to demonstrate the advantages of a methodology for annotation scheme design that is based on an abstract model, as adopted in ISO TC37 SC4 projects and formalized in (Bunt, 2010).",
        "The ultimate goal is, of course, to achieve harmonization of annotation formats, so that they can be merged, enabling the study of interactions among information at different linguistic levels; compared, in order to both evaluate and improve automatic annotation accuracy; and to enable seamless transition from one software environment to another when creating and using linguistic annotations.",
        "<annotationSet lexUnitRef=\"11673\" </annotationSet>"
      ]
    }
  ]
}
