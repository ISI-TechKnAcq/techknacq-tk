{
  "info": {
    "authors": [
      "Torbjorn Lager"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E99-1047",
    "title": "u-TBL Lite: A Small, Extendible Transformation-Based Learner",
    "url": "https://aclweb.org/anthology/E99-1047",
    "year": 1999
  },
  "references": [
    "acl-J95-4004",
    "acl-W99-0705"
  ],
  "sections": [
    {
      "heading": "SWEDEN",
      "text": [
        "Torbjorn.Lager©ling.uu.se"
      ]
    },
    {
      "heading": "Abstract",
      "text": [
        "This short paper describes – and in fact gives the complete source for – a tiny Prolog program implementing a flexible and fairly efficient Transformation-Based Learning (TBL) system."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Transformation-Based Learning (Brill, 1995) is a well-established learning method in NLP circles.",
        "This short paper presents a 'light' version of the 1L-TBL system – a general, logically transparent, flexible and efficient transformation-based learner presented in (Lager, 1999).",
        "It turns out that a transformation-based learner, complete with a compiler for templates, can be implemented in less than one page of Prolog code."
      ]
    },
    {
      "heading": "2 p-TBL Rules & Representations",
      "text": [
        "The point of departure for TBL is a tagged initial-state corpus and a correctly tagged training corpus.",
        "Assuming the part-of-speech tagging task, corpus data can be represented by means of three kinds of clauses: vd(P,W) is true iff the word W is at position P in the corpus tag(P,A) is true iff the word at position P in the corpus is tagged A tag(A,B,P) is true iff the word at P is tagged A and the correct tag for the word at P is B Although this representation may seem a bit redundant, it provides exactly the kind of indexing into the data that is needed.' A decent Prolog system can deal with millions of such clauses.",
        "lAssuming a Prolog with first argument indexing.",
        "The A-TBL systems are implemented in SICStus Prolog.",
        "The object of TBL is to learn an ordered sequence of transformation rules.",
        "Such rules dictate when – based on the context – a word should have its tag changed.",
        "An example would be \"replace tag vb with nn if the word immediately to the left has a tag dt.\" Here is how this rule is represented in the it-TBL rule/template formalism: tag : vb>nn.",
        "<- tag: dt0 [-1] .",
        "Conditions may refer to different features, and complex conditions may be composed from simpler ones.",
        "For example, here is a rule saying \"replace tag rb with j j, if the current word is \"only\" , and if one of the previous two tags is dt.\":",
        "Rules that can be learned in TBL are instances of templates, such as \"replace tag A with B if the word immediately to the left has tag C\", where A, B and C are variables.",
        "In the /L-TBL formalism:",
        "Positive and negative instances of rules that are instances of this template can be generated by means of the following clauses:",
        "Tied to each template is also a procedure that will apply rules that are instances of the template:"
      ]
    },
    {
      "heading": "3 The p-TBL Template Compiler",
      "text": [
        "To write clauses such as the above by hand for large sets of templates would be tedious and prone to errors.",
        "Instead, Prolog's term expansion facility, and a couple of DCG rules, can be used to compile templates into Prolog code, as follows:",
        "Proceedings of EACL '99 A<-Cs), (G3,fail;true))]) :- ), list2goal(L1,G1), ), list2goal(L2,G2), ), list2goal(L3,G3)."
      ]
    },
    {
      "heading": "4 The p-TBL Lite Learner",
      "text": [
        "Given corpus data, compiled templates, and a value for Threshold, the predicate tbl/1 implements the p,-TBL main loop, and writes a sequence of rules to the screen:",
        "The call to the setof-bagof combination generates a frequency listing of all positive instances of all templates, based on which the call to bestof /4 then selects the rule with the highest score.",
        "tb1/1 terminates if the score for that rule is less than the threshold, else it applies the rule and goes on to learn more rules from there.",
        "To compute the rule with the highest score, bestof /4 traverses the frequency listing, keeping track of a leading rule and its score.",
        "The score of a rule is calculated as the difference between the number of its positive instances and its negative instances.",
        "When the list of rules is empty or the number of positive instances of the most frequent rule in what remains of the list is less than the leading rules score, the leader is declared winner.",
        "The following procedure implements the counting of negative instances in an efficient way:",
        "( bb_put(c,0), G, bb_get(c,NO), N is NO+1, bb_put(c,N), N > M -> fail ; bb_get(c,N)"
      ]
    },
    {
      "heading": "5 p-TBL Lite Performance",
      "text": [
        "The learner was benchmarked on a 250Mhz Sun Ultra Enterprise 3000, training on Swedish corpora of three different sizes, with 23 different tags, and the 26 templates that Brill uses in his context-rule learner2.",
        "In each case, the accuracy of the resulting sequence of rules was measured on a test corpus consisting of 40k words, with an initial-state accuracy of 93.3%.",
        "The following table summarizes the results: Size Thrshld Runtime # of rules Acc.",
        "30k 2 15 min 99 95.5% 60k 4 24 min 85 95.7% 120k 6 60 min 92 95.8% By comparison, it took Brill's C-implemented context-rule learner 90 minutes, 185 minutes, and 560 minutes, respectively, to train on these corpora, producing similar sequences of rules.",
        "Thus p-TBL Lite is an order of magnitude faster than Brill's learner.",
        "The full u-TBL system presented in (Lager, 1999) is even faster, uses less memory, and is in certain respects more general.",
        "Small is beautiful, however, and the light version may also have a greater pedagogical value.",
        "Both versions can be downloaded from http://www.ling.gu.se/,-,lager/mutbl.html."
      ]
    }
  ]
}
