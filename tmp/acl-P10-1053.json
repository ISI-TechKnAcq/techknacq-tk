{
  "info": {
    "authors": [
      "Sylvain Schmitz"
    ],
    "book": "ACL",
    "id": "acl-P10-1053",
    "title": "On the Computational Complexity of Dominance Links in Grammatical Formalisms",
    "url": "https://aclweb.org/anthology/P10-1053",
    "year": 2010
  },
  "references": [
    "acl-E91-1005",
    "acl-J01-1004",
    "acl-J92-4004",
    "acl-P83-1020",
    "acl-P85-1010",
    "acl-P94-1036",
    "acl-P95-1021"
  ],
  "sections": [
    {
      "text": [
        "LSV, ENS Cachan & CNRS, France",
        "sylvain.schmitz@lsv.ens-cachan.fr",
        "links were introduced in model long distance scram-mena, motivating the defi- VP VP VP / \\ / / \\ \\ I NPnom VP NPacc VP V I repariert Dominance grammars to bling pheno nition of multiset-valued linear indexed grammars (MLIGs) by Rambow (1994b), and inspiring quite a few recent formalisms.",
        "It turns out that MLIGs have since been rediscovered and reused in a variety of contexts, and that the complexity of their emptiness problem has become the key to several open questions in computer science.",
        "We survey complexity results and open issues on MLIGs and related formalisms, and provide new complexity bounds for some linguistically motivated restrictions."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Scrambling constructions, as found in German and other SOV languages (Becker et al., 1991; Ram-bow, 1994a; Lichte, 2007), cause notorious difficulties to linguistic modeling in classical grammar formalisms like HPSG or TAG.",
        "A well-known illustration of this situation is given in the following two German sentences for \"that Peter has repaired the fridge today\" (Lichte, 2007),",
        "dass [Peter] heute [den Kühlschrank] repariert hat that Peternom today the fridgeacc repaired has dass [den Kuhlschrank] heute [Peter] repariert hat that the fridgeacc today Peternom repaired has",
        "with a flexible word order between the two complements of repariert, namely between the nominative Peter and the accusative den Kühlschrank.",
        "Rambow (1994b) introduced a formalism, unordered vector grammars with dominance links (UVG-dls), for modeling such phenomena.",
        "These grammars are defined by vectors of context-free productions along with dominance links that should be enforced during derivations; for instance, Figure 1 shows how a flexible order between the complements of repariert could be expressed in an UVG-dl.",
        "Similar dominance mechanisms have been employed in various tree description formalisms (Rambow et al., 1995; Rambow et al., 2001; Candito and Kahane, 1998; Kallmeyer, 2001; Guillaume and Perrier, 2010) and TAG extensions (Becker et al., 1991; Rambow, 1994a).",
        "However, the prime motivation for this survey is another grammatical formalism defined in the same article: multiset-valued linear indexed grammars (Rambow, 1994b, MLIGs), which can be seen as a low-level variant of UVG-dls that uses multisets to emulate unfulfilled dominance links in partial derivations.",
        "It is a natural extension of Petri nets, with broader scope than just UVG-dls; indeed, it has been independently rediscovered by de Groote et al.",
        "(2004) in the context of linear logic, and by Verma and Goubault-Larrecq (2005) in that of equational theories.",
        "Moreover, the decidability of its emptiness problem has proved to be quite challenging and is still uncertain, with several open questions depending on its resolution:",
        "• provability in multiplicative exponential linear logic (de Groote et al., 2004),",
        "• emptiness and membership of abstract cat-egorial grammars (de Groote et al., 2004; Yoshinaka and Kanazawa, 2005),",
        "• emptiness and membership of Stabler (1997)'s minimalist grammars without",
        "shortest move constraint (Salvati, 2010),",
        "• satisfiability of first-order logic on data trees (Bojanczyk et al., 2009), and of course",
        "• emptiness and membership for the various formalisms that embed UVG-dls.",
        "Unsurprisingly in the light of their importance in different fields, several authors have started investigating the complexity of decisions problems for MLIGs (Demri et al., 2009; Lazic, 2010).",
        "We survey the current state of affairs, with a particular emphasis on two points:",
        "1. the applicability of complexity results to UVG-dls, which is needed if we are to conclude anything on related formalisms with dominance links,",
        "2. the effects of two linguistically motivated restrictions on such formalisms, lexicalization and boundedness/rankedness.",
        "The latter notion is imported from Petri nets, and turns out to offer interesting new complexity trade-offs, as we prove that k-boundedness and k-rankedness are EXPTlME-complete for MLIGs, and that the emptiness and membership problems are EXPTIME-complete for k-bounded MLIGs but PTIME-complete in the k-ranked case.",
        "This also implies an EXPTIME lower bound for emptiness and membership in minimalist grammars with shortest move constraint.",
        "We first define MLIGs formally in Section 2 and review related formalisms in Section 3.",
        "We proceed with complexity results in Section 4 before concluding in Section 5.",
        "Notations In the following, S denotes a finite alphabet, S* the set of finite sentences over S, and e the empty string.",
        "The length of a string w is noted |w|, and the number of occurrence of a symbol a in w is noted |w|a.",
        "A language is formalized as a subset of S*.",
        "Let Nn denote the set of vectors of positive integers of dimension n. The i-th component of a vector x in Nn is x(i), 0 denotes the null vector, 1 the vector with 1 values, and ej the vector with 1 as its i-th component and 0 everywhere else.",
        "The ordering < on Nn is the componentwise ordering: X < y iff x(i) < y(i) for all 0 < i < n. The size of a vector refers to the size of its binary encoding: |x| = ^n=11 + max(0, |_log2 X(i)J).",
        "We refer the reader unfamiliar with complexity classes and notions such as hardness or LogSpace reductions to classical textbooks (e.g. Papadimitriou, 1994)."
      ]
    },
    {
      "heading": "2. Multiset-Valued Linear Indexed Grammars",
      "text": [
        "dimensional multiset-valued linear indexed grammar (MLIG) is a tuple G = (N, S,P, (S, xo)) where N is a finite set of nonterminal symbols, S a finite alphabet disjoint from N, V = (N x Nn) ö S the vocabulary, P a finite set of productions in (N x Nn) x V*, and (S, xo) G N x Nn the start symbol.",
        "Productions are more easily written as with each uj in S* and each (Bj, xj) in N x Nn.",
        "The derivation relation == over sequences in V * is defined by if ö and ö' are in V*, a production of form (*) appears in P, x < y, for each 1 < i < m, xj < and y - x = £™i yj - xi.",
        "The language of a MLIG is the set of terminal strings derived from (S, x0), i.e.",
        "and we denote by L(MLIG) the class of MLIG languages.",
        "Example 2.",
        "To illustrate this definition, and its relevance for free word order languages, consider the 3-dimensional MLIG with productions and start symbol (S, 0).",
        "It generates the MIX language of all sentences with the same number of a, b, and c's (see Figure 2 for an example derivation):",
        "Lmix = {w G {a, b, c}* | |w|a = |w|b = |w|c} .",
        "The size |G| of a MLIG G is essentially the sum of the sizes of each of its productions of form (*):",
        "m + 1 + |x| + ^2 N + ^2 |ujM .",
        "A MLIG is in extended two form (ETF) if all its productions are of form with a in S, A, Bi, B2 in N, and x, xi, x2 in Nn.",
        "Using standard constructions, any MLIG can be put into ETF in linear time or logarithmic space.",
        "A MLIG is in restricted index normal form (RINF) if the productions in P are of form (A,0) – a, (A,0) – (B,äj), or (A,äj) – (B,0), with A, B in N, 0 < i < n, and a in (su(n x {0}))*.",
        "The direct translation into RINF proposed by Rambow (1994a) is exponential ifwe consider a binary encoding of vectors, but using techniques developed for Petri nets (Dufourd and Finkel, 1999), this blowup can be avoided:",
        "Proposition 3.",
        "For any MLIG, one can construct an equivalent MLIG in RINF in logarithmic space.",
        "Two restrictions on dominance links have been suggested in an attempt to reduce their complexity, sometimes in conjunction: lexicalization and k-boundedness.",
        "We provide here characterizations for them in terms of MLIGs.",
        "We can combine the two restrictions, thus defining the class of k-bounded lexicalized MLIGs.",
        "Lexicalization Lexicalization in UVG-dls reflects the strong dependence between syntactic constructions (vectors of productions representing an extended domain of locality) and lexical anchors.",
        "We define here a restriction of MLIGs with similar complexity properties:",
        "Definition 4.",
        "A terminal derivation a ==p w with w in S* is c-lexicalized for some c > 0 if p < c • | w | .",
        "A MLIG is lexicalized if there exists c such that any terminal derivation starting from (S, xo) is c-lexicalized, and we denote by L(MLIG^) the set of lexicalized MLIG languages.",
        "Looking at the grammar of Example 2, any terminal derivation (S, 0) ==p w verifies p = + 1 , and the grammar is thus lexicalized.",
        "Boundedness As dominance links model longdistance dependencies, bounding the number of simultaneously pending links can be motivated on competence/performance grounds (Joshi et al., 2000; Kallmeyer and Parmentier, 2008), and on complexity/expressiveness grounds (S0gaard et al., 2007; Kallmeyer and Parmentier, 2008; Chiang and Scheffler, 2008).",
        "The shortest move constraint (SMC) introduced by Stabler (1997) to enforce a strong form of minimality also falls into this category of restrictions.",
        "Definition 5.",
        "A MLIG derivation ao == ai == • • • == ap is of rank k for some k > 0 if, no vector with a sum of components larger than k can appear in any aj, i.e. for all x in Nn such that there exist 0 < j < p, ö, ö' in V* and A in N with aj = ö(A, x)ö', one has EI=i x(i) < k.",
        "A MLIG is k-ranked (noted kr-MLIG) if any derivation starting with ao = (S, xo) is of rank k. It is ranked if there exists k such that it is k-ranked.",
        "A 0-ranked MLIG is simply a context-free grammar (CFG), and we have more generally the following:",
        "Lemma 6.",
        "Any n-dimensional k-ranked MLIG G can be transformed into an equivalent CFG G' in time O(|G| • (n + 1)fc3).",
        "A definition quite similar to k-rankedness can be found in the Petri net literature:",
        "Definition 7.",
        "A MLIG derivation ao == ai == • • • == ap is k-bounded for some k > 0 if, no vector with a coordinate larger than k can appear in any aj, i.e. for all x in Nn such that there exist 0 < j < p, ö, ö' in V* and A in N with aj = ö(A, x)ö', and for all 1 < i < n, one has x(i) < k.",
        "A MLIG is k-bounded (noted kb-MLIG) if any derivation starting with ao = (S, xo) is k-bounded.",
        "It is bounded if there exists k such that it is k-bounded.",
        "The SMC in minimalist grammars translates exactly into 1-boundedness of the corresponding",
        "MLIGs (Salvati, 2010).",
        "Clearly, any k-ranked MLIG is also k-bounded, and conversely any n-dimensional k-bounded MLIG is (kn)-ranked, thus a MLIG is ranked iff it is bounded.",
        "The counterpart to Lemma 6 is:",
        "Lemma 8.",
        "Any n-dimensional k-bounded MLIG G can be transformed into an equivalent CFG G'intime O(|G| • (k + 1)n ).",
        "most (k + 1)n context-free productions.",
        "□ one can check that the grammar of Example 2 is not bounded (to see this, repeatedly apply production (S, 0) – (S, 1)), as expected since MIX is not a context-free language.",
        "Let us mention a few more results pertaining to MLIG languages:",
        "Proposition 9 (Rambow, 1994b).",
        "L(MLIG) is a substitution closed full abstract family of languages.",
        "Proposition 10 (Rambow, 1994b).",
        "L(MLIG^) is a subset of the context-sensitive languages.",
        "Natural languages are known for displaying some limited cross-serial dependencies, as witnessed in linguistic analyses, e.g. of Swiss-German (Shieber, 1985), Dutch (Kroch and Santorini, 1991), or Tagalog (Maclachlan and Ram-bow, 2002).",
        "This includes the copy language which does not seem to be generated by any",
        "L(MLIG).",
        "Finally, we obtain the following result as a consequence of Lemmas 6 and 8:",
        "Corollary 12.",
        "L(kr-MLIG) = L(kb-MLIG) = L(kb-MLIG^) is the set of context-free languages."
      ]
    },
    {
      "heading": "3. Related Formalisms",
      "text": [
        "We review formalisms connected to MLIGs, starting in Section 3.1 with Petri nets and two of their extensions, which turn out to be exactly equivalent to MLIGs.",
        "We then consider various linguistic formalisms that employ dominance links (Section 3.2).",
        "Definition 13 (Petri, 1962).",
        "A marked Petri netis a tuple N = (S, T, f, mo) where S and T are disjoint finite sets of places and transitions, f a flow function from (Sx T ) U (T x S ) to N, and moan initial marking in NS.",
        "A transition t G T can be fired in a marking m in NS if f (p, t) > m(p) for all p G S, and reaches a new marking m' defined by m'(p) = m(p) – f (p, t) + f (t,p) for all p G S, written m [t) m'.",
        "Another view is that place p holds m(p) tokens, f (p, t) of which are first removed when firing t, and then f (t,p) added back.",
        "Firings are extended to sequences a in T* by m [e) m, and m [at) m' if there exists m'' with m [a) m'' [t) m'.",
        "A labeled Petri net with reachability acceptance is endowed with a labeling homomorphism p : T* – S* and a finite acceptance set F ç NS, defining the language (Peterson, 1981)",
        "L(N, F) = {p(a) G S* | 3m G F, mo [a) m} .",
        "Labeled Petri nets (with acceptance set {0}) are notational variants of right linear MLIGs, defined as having production in (N xNn)x(S*U(S* •(N x Nn))).",
        "This is is case of the MLIG of Example 2, which is given in Petri net form in Figure 3, where circles depict places (representing MLIG nonterminals and indices) with black dots for initial tokens (representing the MLIG start symbol), boxes transitions (representing MLIG productions), and arcs the flow values.",
        "For instance, production (S,ä3) – c (S,0) is represented by the rightmost, c-labeled transition, with f(S, t) = f(e3, t) = f (t, S ) = 1 and f (ei, t) = f (e2, t) = f (t, ei) = f (t,e2) = f (t,es) = 0.",
        "Extensions The subsumption of Petri nets is not innocuous, as it allows to derive lower bounds on the computational complexity of MLIGs.",
        "Among several extensions of Petri net with some branching capacity (see e.g. Mayr, 1999; Haddad and Poitrenaud, 2007), two are of singular importance: It turns out that MLIGs in their full generality have since been independently rediscovered under the names vector addition tree automata (de Groote et al., 2004, VATA) and branching VASS (Verma and Goubault-Larrecq, 2005, BVASS).",
        "Semilinearity Another interesting consequence of the subsumption of Petri nets by MLIGs is that the former generate some non semilinear languages, i.e. with a Parikh image which is not a semilinear subset of N's' (Parikh, 1966).",
        "Hopcroft and Pansiot (1979, Lemma 2.8) exhibit an example of a VASS with a non semilinear reachability set, which we translate as a 2-dimensional right linear MLIG with productions and (S, e2) as start symbol, that generates the non semilinear language",
        "Lnsm = {anbm | 0 < n, 0 < m < 2n} .",
        "Proposition 14 (Hopcroft and Pansiot, 1979).",
        "There exist non semilinear Petri nets languages.",
        "The non semilinearity of MLIGs entails that of all the grammatical formalisms mentioned next in Section 3.2; this answers in particular a conjecture by Kallmeyer (2001) about the semilinearity of V-",
        "TAGs.",
        "UVG-dl Rambow (1994b) introduced UVG-dls as a formal model for scrambling and tree description grammars.",
        "Definition 15 (Rambow, 1994b).",
        "An unordered vector grammars with dominance links (UVG-dl) is a tuple G = (N, S, W, S) where N and S are disjoint finite sets of nonterminals and terminals, V = N U S is the vocabulary, W is a set of vectors of productions with dominance links, i.e. each element of W is a pair (P, D) where each P is a multiset of productions in N x V* and D is a relation from nonterminals in the right parts of productions in P to nonterminals in their left parts, and S in N is the start symbol.",
        "A terminal derivation of w in S* in an UVG-dl is a context-free derivation of form S == ai == a2 • • • ap- i == w such that the control word pi p2 • • • pP is a permutation of a member of W*and the dominance relations of W hold in the associated derivation tree.",
        "The language L(G) of an UVG-dl G is the set of sentences w with some terminal derivation.",
        "We write L (UVG-dl) for the class of UVG-dl languages.",
        "An alternative semantics of derivations in UVG-dls is simply their translation into MLIGs: associate with each nonterminal in a derivation the multiset of productions it has to spawn.",
        "Figure 4 presents the two vectors of an UVG-dl for the MIX language of Example 2, with dashed arrows indicating dominance links.",
        "observe that production",
        "S – S in the second vector has to spawn eventually one occurrence of each S – aS, S – bS, and S – cS, which corresponds exactly to the",
        "MLIG of Example 2.",
        "The ease of translation from the grammar of Figure 4 into a MLIG stems from the impossibility of splitting any of its vectors (P, D) into two nonempty ones (Pi, Di) and (P2, D2) while preserving the dominance relation, i.e. with P = Pi öP2 and D = Di öD2.",
        "This strictness property can be enforced without loss of generality since we can always add to each vector (P, D) a production S – S with a dominance link to each production in P. This was performed on the second vector in Figure 4; remark that the grammar without this addition is an unordered vector grammar (Cremers and Mayer, 1974, UVG), and still generates Lmix.",
        "Theorem 16 (Rambow, 1994b).",
        "Every MLIG can be transformed into an equivalent UVG-dl in logarithmic space, and conversely.",
        "Proofsketch.",
        "one can check that Rambow (1994b)'s proof of L(MLIG) ç L(UVG-dl) incurs at most a quadratic blowup from a MLIG in RINF, and invoke Proposition 3.",
        "More precisely, given a MLIG in RINF, productions of form (A,0) – a with A in N and a in (S U (N x {0}))* form singleton vectors, and productions of form (A,0) – (B,ej) with A, B in N and 0 < i < n need to be paired with a production of form (C,ej) – (D,0) for some C and D in N in order to form a vector with a dominance link between B and C.",
        "The converse inclusion and its complexity are immediate when considering strict UVG-dls.",
        "□",
        "The restrictions to k-ranked and k-bounded grammars find natural counterparts in strict UVG-dls by bounding the (total) number of pending dominance links in any derivation.",
        "Lexicalization has now its usual definition: for every vector ({pj;i,..., pj;ki}, Dj) in W, at least one of the pj j should contain at least one terminal in its right part – we have then L(UVG-dl^) ç L(MLIG^).",
        "More on Dominance Links Dominance links are quite common in tree description formalisms, where they were already in use in D-theory (Marcus et al., 1983) and in quasi-tree semantics for fb-TAGs (Vijay-Shanker, 1992).",
        "In particular, D-tree substitution grammars are essentially the same as UVG-dls (Rambow et al., 2001), and quite a few other tree description formalisms subsume them (Candito and Kahane, 1998; Kallmeyer, 2001; Guillaume and Perrier, 2010).",
        "Another class of grammars are vector TAGs (V-TAGs), which extend TAGs and MCTAGs using dominance links (Becker et al., 1991; Rambow, 1994a; Champol-lion, 2007), subsuming again UVG-dls."
      ]
    },
    {
      "heading": "4. Computational Complexity",
      "text": [
        "We study in this section the complexity of several decision problems on MLIGs, prominently of emptiness and membership problems, in the general (Section 4.2), k-bounded (Section 4.3), and lexicalized cases (Section 4.4).",
        "Table 1 sums up the known complexity results.",
        "Since by Theorem 16 we can translate between MLIGs and UVG-dls in logarithmic space, the complexity results on UVG-dls will be the same.",
        "Let us first review some decision problems of interest.",
        "In the following, G denotes a MLIG",
        "boundedness given (G), is G bounded?",
        "As seen in Section 2.2, this is equivalent to ranked-ness.",
        "k-boundedness given (G, k), k in N, is G k-bounded?",
        "As seen in Section 2.2, this is the same as (kn)-rankedness.",
        "Here we will distinguish two cases depending on whether k is encoded in unary or binary.",
        "reachability given (G, F), G e-free in ETF and F a finite subset of N x Nn, does there exist a = (Ai, yi) • • • (Am, yj in F * such that (S, xo) ==* a?",
        "non emptiness given (G), is L(G) non empty?",
        "(uniform) membership given (G, w), w in S*, does w belong to L(G)?",
        "Boundedness and k-boundedness are needed in order to prove that a grammar is bounded, and to apply the smaller complexities of Section 4.3.",
        "Coverability is often considered for Petri nets, and allows to derive lower bounds on reachability.",
        "Emptiness is the most basic static analysis one might want to perform on a grammar, and is needed for parsing as intersection approaches (Lang, 1994), while membership reduces to parsing.",
        "Note that we only consider uniform membership, since grammars for natural languages are typically considerably larger than input sentences, and their influence can hardly be neglected.",
        "There are several obvious reductions between reachability, emptiness, and membership.",
        "Let – iog denote LogSpace reductions between decision problems; we have:",
        "Proposition 17.",
        "coverability – log reachability (1) ^log non emptiness (2) ^log membership (3) Proofsketch.",
        "For (1), construct a reachability instance (G', {(E, 0)}) from a coverability instance (G, F) by adding to G a fresh nonterminal E and the productions {(A,x) – (E,0) | (A,x) G F} U {(E,äj) – (E,0) | 0 < i < n} .",
        "For (2), from a reachability instance (G, F), remove all terminal productions from G and add instead the productions {(A,x) – e | (A, x) G F}; the new grammar G' has a non empty language iff the reachability instance was positive.",
        "Conversely, from a non emptiness instance (G), put the grammar in ETF and define F to match all terminal productions, i.e. F = {(A,x) | (A, x) – a G P, a G SU{e}}, and then remove all terminal productions in order to obtain a reachability instance (G', F).",
        "For (3), from a non emptiness instance (G), replace all terminals in G by e to obtain an empty word membership instance (G',e).",
        "Conversely, from a membership instance (G, w), construct the intersection grammar G' with L(G') = L(G)n{w} (Bar-Hillel et al., 1961), which serves as non emptiness instance (G').",
        "□",
        "Verma and Goubault-Larrecq (2005) were the first to prove that coverability and boundedness were decidable for BVASS, using a covering tree construction a la Karp and Miller (1969), thus of non primitive recursive complexity.",
        "Demri et al.",
        "(2009, Theorems 7, 17, and 18) recently proved tight complexity bounds for these problems, extending earlier results by Rackoff (1978) and Lipton (1976) for Petri nets.",
        "ity and boundedness for MLIGs are 2ExpTime-complete.",
        "Regarding reachability, emptiness, and membership, decidability is still open.",
        "A 2ExpSpace lower bound was recently found by Lazic (2010).",
        "If a decision procedure exists, we can expect it to be quite complex, as already in the Petri net case, the complexity of the known decision procedures (Mayr, 1981; Kosaraju, 1982) is not primitive recursive (Cardoza et al., 1976, who attribute the idea to Hack).",
        "Since k-bounded MLIGs can be converted into CFGs (Lemma 8), emptiness and membership problems are decidable, albeit at the expense of an exponential blowup.",
        "We know from the Petri net literature that coverability and reachability problems are PSpace-complete for k-bounded right linear MLIGs (Jones et al., 1977) by a reduction from linear bounded automaton (LBA) membership.",
        "We obtain the following for k-bounded MLIGs, using a similar reduction from membership in polynomially space bounded alternating Turing machines (Chandra et al., 1981, ATM): Theorem 19.",
        "Coverability and reachability for k-bounded MLIGs are ExpTime-complete, even for fixed k > 1.",
        "The lower bound is obtained through an encoding of an instance of the membership problem for ATMs working in polynomial space into an instance of the coverability problem for 1-bounded MLIGs.",
        "The upper bound is a direct application of Lemma 8, coverability and reachability being reducible to the emptiness problem for a CFG of exponential size.",
        "Theorem 19 also shows the Ex-pTime-hardness of emptiness and membership in minimalist grammars with SMC.",
        "Corollary 20.",
        "Let k > 1; k-boundedness for MLIGs is ExpTime-complete.",
        "Proof.",
        "For the lower bound, consider an instance (G, F) of coverability for a 1-bounded MLIG G, which is ExpTime-hard according to Theorem 19.",
        "Add to the MLIG G a fresh nonterminal E and the productions which make it non k-bounded iff the coverability instance was positive.",
        "For the upper bound, apply Lemma 8 with k' = k + 1 to construct an O(|G| • 2n log2(fc'+i))-sized CFG, reduce it in polynomial time, and check whether a nonterminal (A, x) with x(i) = k' for some 0 < i < n occurs in the reduced grammar.",
        "Note that the choice of the encoding of k is irrelevant, as k = 1 is enough for the lower bound, and k only logarithmically influences the exponent for the upper bound.",
        "□",
        "Corollary 20 also implies the EXPTIME-completeness of k-rankedness, k encoded in unary, if k can take arbitrary values.",
        "on the other hand, if k is known to be small, for instance logarithmic in the size of G, then k-rankedness becomes polynomial by Lemma 6.",
        "Observe finally that k-rankedness provides the only tractable class of MLIGs for uniform membership, using again Lemma 6 to obtain a CFG of polynomial size – actually exponential in k, but k is assumed to be fixed for this problem.",
        "An obvious lower bound is that of membership in CFGs, which is PTIME-complete (Jones and Laaser, 1976).",
        "Unlike the high complexity lower bounds of the previous two sections, NPTIME-hardness results for uniform membership have been proved for a number of formalisms related to MLIGs, from the commutative CFG viewpoint (Huynh, 1983; Barton, 1985; Esparza, 1995), or from more specialized models (S0gaard et al., 2007; Champollion, 2007; Koller and Rambow, 2007).",
        "We focus here on this last proof, which reduces from the normal dominance graph configurability problem (Althaus et al., 2003), as it allows to derive",
        "NPTIME-hardness even in highly restricted grammars.",
        "Theorem 21 (Koller and Rambow, 2007).",
        "Uniform membership of (G, w) for G a 1-bounded, lexicalized, UVG-dl with finite language is NPTIME-hard, even for | w| = 1.",
        "Proofsketch.",
        "Set S as start symbol and add a production S – aA to the sole vector of the grammar G constructed by Koller and Rambow (2007) from a normal dominance graph, with dominance links to all the other productions.",
        "Then G becomes strict, lexicalized, with finite language {a} or 0, and 1-bounded, such that a belongs to L(G) iff the normal dominance graph is configurable.",
        "□",
        "The fact that uniform membership is in NPTIME in the lexicalized case is clear, as we only need to guess nondeterministically a derivation of size linear in | w| and check its correctness.",
        "The weakness of lexicalized grammars is however that their emptiness problem is not any easier to solve!",
        "The effect of lexicalization is indeed to break the reduction from emptiness to membership in Proposition 17, but emptiness is as hard as ever, which means that static checks on the grammar might even be undecidable."
      ]
    },
    {
      "heading": "5. Conclusion",
      "text": [
        "Grammatical formalisms with dominance links, introduced in particular to model scrambling phenomena in computational linguistics, have deep connections with several open questions in an unexpected variety of fields in computer science.",
        "We hope this survey to foster cross-fertilizing exchanges; for instance, is there a relation between",
        "Problem",
        "Lower bound",
        "Upper bound",
        "Petri net fc-Boundedness",
        "PSpace (Jones et al., 1977)",
        "PSpace (Jones et al., 1977)",
        "Petri net Boundedness",
        "ExpSpace (Lipton, 1976)",
        "ExpSpace (Rackoff, 1978)",
        "Petri net {Emptiness, Membership}",
        "ExpSpace (Lipton, 1976)",
        "Decidable, not primitive recursive (Mayr, 1981; Kosaraju, 1982)",
        "{MLIG, MLIG£} fc-Boundedness",
        "ExpTime (Corollary 20)",
        "ExpTime (Corollary 20)",
        "{MLIG, MLIG£} Boundedness",
        "2ExpTime (Demri et al., 2009)",
        "2ExpTime (Demri etal., 2009)",
        "{MLIG, MLIG£} Emptiness",
        "2ExpSpace (Lazic, 2010)",
        "Not known to be decidable",
        "MLIG Membership",
        "{fcb-MLIG, fcb-MLIG£} Emptiness",
        "ExpTime (Theorem 19)",
        "ExpTime (Theorem 19)",
        "fcb-MLIG Membership",
        "{MLIG£, fcb-MLIG£} Membership",
        "NPTime (Koller and Rambow, 2007)",
        "NPTime (trivial)",
        "cr-MLIG {Emptiness, Membership}",
        "PTime (Jones and Laaser, 1976)",
        "PTime (Lemma 6)",
        "Conjecture 11 and the decidability of reachability in MLIGs?",
        "A similar question, whether the language Lpal of even 2-letters palindromes was a Petri net language, was indeed solved using the decidability of reachability in Petri nets (Jantzen, 1979), and shown to be strongly related to the latter (Lambert, 1992).",
        "A conclusion with a more immediate linguistic value is that MLIGs and UVG-dls hardly qualify as formalisms for mildly context-sensitive languages, claimed by Joshi (1985) to be adequate for modeling natural languages, and \"roughly\" defined as the extensions of context-free languages that display",
        "1. support for limited cross-serial dependencies: seems doubtful, see Conjecture 11,",
        "2. constant growth, a requisite nowadays replaced by semilinearity: does not hold, as seen with Proposition 14, and",
        "3. polynomial recognition algorithms: holds only for restricted classes of grammars, as seen in Section 4.",
        "Nevertheless, variants such as k-ranked V-TAGs are easily seen to fulfill all the three points above.",
        "Acknowledgements Thanks to Pierre Cham-bart, Stephane Demri, and Alain Finkel for helpful discussions, and to Sylvain Salvati for pointing out the relation with minimalist grammars."
      ]
    }
  ]
}
