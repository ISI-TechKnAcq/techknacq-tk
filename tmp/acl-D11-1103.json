{
  "info": {
    "authors": [
      "Anoop Deoras",
      "Tomas Mikolov",
      "Kenneth Ward Church"
    ],
    "book": "EMNLP",
    "id": "acl-D11-1103",
    "title": "A Fast Re-scoring Strategy to Capture Long-Distance Dependencies",
    "url": "https://aclweb.org/anthology/D11-1103",
    "year": 2011
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Anoop Deoras Tomas Mikolov Kenneth Church",
        "HLT-COE and CLSP Brno University of Technology HLT-COE and CLSP Johns Hopkins University Speech@FIT Johns Hopkins University",
        "Baltimore MD 21218, USA Czech Republic Baltimore MD 21218, USA",
        "A re-scoring strategy is proposed that makes it feasible to capture more long-distance dependencies in the natural language.",
        "Two pass strategies have become popular in a number of recognition tasks such as ASR (automatic speech recognition), MT (machine translation) and OCR (optical character recognition).",
        "The first pass typically applies a weak language model (n-grams) to a lattice and the second pass applies a stronger language model to N best lists.",
        "The stronger language model is intended to capture more longdistance dependencies.",
        "The proposed method uses RNN-LM (recurrent neural network language model), which is a long span LM, to rescore word lattices in the second pass.",
        "A hill climbing method (iterative decoding) is proposed to search over islands of confusability in the word lattice.",
        "An evaluation based on Broadcast News shows speedups of 20 over basic N best re-scoring, and word error rate reduction of 8% (relative) on a highly competitive setup."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Statistical Language Models (LMs) have received considerable attention in the past few decades.",
        "They have proved to be an essential component in many statistical recognition systems such as ASR (automatic speech recognition), MT (machine translation) and OCR (optical character recognition).",
        "The task of a language model is to assign probability to any word sequence possible in the language.",
        "The probability of the word sequence W = w\\,..., wm = wf is typically factored using the chain rule:",
        "In modern statistical recognition systems, an LM tends to be restricted to simple n-gram models, where the distribution ofthe predicted word depends on the previous (n – 1) words i.e. P(wi|w1-1) « P (wi|wi-^+i).",
        "Noam Chomsky argued that n-grams cannot learn long-distance dependencies that span over more than n words (Chomsky, 1957, pp.13).",
        "While that might seem obvious in retrospect, there was a lot of excitement at the time over the Shannon-McMillan-Breiman Theorem (Shannon, 1948) which was interpreted to say that, in the limit, under just a couple of minor caveats and a little bit of not-very-important fine print, n-gram statistics are sufficient to capture all the information in a string (such as an English sentence).",
        "Chomsky realized that while that may be true in the limit, n-grams are far from the most parsimonious representation of many linguistic facts.",
        "In a practical system, we will have to truncate n-grams at some (small) fixed n (such as trigrams or perhaps 5-grams).",
        "Truncated n-gram systems can capture many agreement facts, but not all.",
        "By long-distance dependencies, we mean facts like agreement and collocations that can span over many words.",
        "With increasing order of n-gram models we can, in theory, capture more regularities in the language.",
        "In addition, if we can move to more general models then we could hope to capture more, as well.",
        "However, due to data sparsity, it is hard to estimate a robust n-gram distribution for large values of n ( say, n > 10) using the conventional Maximum Likelihood techniques, unless a more robust technique is employed for modeling which generalizes well on unseen events.",
        "Some of these well known long span / complex language models which have shown to perform very well on many speech tasks include: structured language model (Chelba and Jelinek, 2000; Roark, 2001; Wang and Harper, 2002; Filimonov and Harper, 2009), latent semantic analysis language model (Bellegarda, 2000), topic mixture language models (Iyer and Ostendorf, 1999), whole sentence exponential language models (Rosenfeld, 1997; Rosenfeld et al., 2001), feedforward neural networks (Bengio et al., 2001), recurrent neural network language models (Mikolov et al., 2010), among many others.",
        "Although better modeling techniques can now capture longer dependencies in a language, their incorporation in decoders of speech recognition or machine translation systems becomes computationally challenging.",
        "Due to the prohibitive increase in the search space of sentence hypotheses (or longer length word sub sequences), it becomes challenging to use a long span language model in the first pass decoding.",
        "A word graph (word lattices for speech recognition systems and hypergraphs for machine translation systems), encoding exponential number of hypotheses is hence outputted at the first pass output on which a sophisticated and complex language model is deployed for re-scoring.",
        "However, sometimes even re-scoring of this refined search space can be computationally expensive due to explosion of state space.",
        "Previously, we showed in (Deoras et al., 2011) how to tackle the problem ofincorporating long span information during decoding in speech recognition systems by variationaly approximating (Bishop, 2006, pp.",
        "462) the long span language model by a tractable substitute such that this substitute model comes closest to the long span model (closest in terms of Kullback Leibler Divergence (Cover and J.A.Thomas, 1991, pp.",
        "20)).",
        "The tractable substitute was then used directly in the first pass speech recognition systems.",
        "In this paper we propose an approach that keeps the model intact but approximates the search space instead (which can become intractable to handle especially under a long span model), thus enabling the use of full blown model for re-scoring.With this approach, we can achieve full lattice re-scoring with a complex model, at a cost more than 20 times less than of a naive brute force approach that is commonly used today.",
        "The rest of the paper is organized as follows: We discuss a particular form of long span language model in Sec. 2.",
        "In Sec. 3 we discuss two standard re-scoring techniques and then describe and demonstrate our proposed technique in Sec. 4.",
        "We present experimental results in Sec. 5 followed by conclusions and some remarks in Sec. 6."
      ]
    },
    {
      "heading": "2. Recurrent Neural Networks (RNN)",
      "text": [
        "There is a long history of using neural networks to model sequences.",
        "Elman (1990) used recurrent neural network for modeling sentences of words generated by an artificial grammar.",
        "Work on statistical language modeling of real natural language data, together with an empirical comparison of performance to standard techniques was done by Bengio et al.",
        "(2001).",
        "His work has been followed by Schwenk (2007), who has shown that neural network language models actually work very well in the state-of-the-art speech recognition systems.",
        "Recurrent Neural Network based Language Models (RNN-LMs) (Mikolov et al., 2010) improved the ability of the original model to capture patterns in the language without using any additional features (such as part of speech, morphology etc) i.e. other than lexical ones.",
        "The RNN-LM was shown to have superior performance than the original feedforward neural network (Mikolov et al., 2011b).",
        "Recently, we also showed that this model outperforms many other advanced language modeling techniques (Mikolov et al., 2011a).",
        "We hence decided to work with this model.",
        "This model uses whole history to make predictions, thus it lies outside the family of n-gram models.",
        "Power of the model comes at a considerable computational cost.",
        "Due to the requirement of unlimited history, many optimization tricks for rescor-ing with feedforward-based NNLMs as presented by Schwenk (2007) cannot be applied during rescoring with RNN LM.",
        "Thus, this model is a good candidate",
        "(delayed)",
        "Figure 1: Schematic Representation of Recurrent Neural Network Language Model.",
        "The network has an input layer w, a hidden layer s and an output layer y. Matrices U and V represent synapses.",
        "to show effectiveness and importance of our work.",
        "The basic RNNLM is shown in Fig. 1.",
        "The model has an input layer w(t) that encodes previous word using 1 of N coding (thus, the size of the input layer is equal to the size of the vocabulary, and only the neuron that corresponds to the previous word in a sequence is set to 1).",
        "The hidden layer s(t) has additional recurrent connections that are delayed by one time step.",
        "After the network is trained, the output layer y(t) represents probability distribution for the current word, given the previous word and the state of the hidden layer from the previous time step.",
        "The training is performed by 'backpropagation-through-time' algorithm that is commonly used for training recurrent neural networks (Rumelhart et al., 1986).",
        "More details about training, setting initial parameters, choosing size of the hidden layer etc.",
        "are presented in (Mikolov et al., 2010).",
        "Additional extensions that allow this model to be trained on large corpora are presented in (Mikolov et al., 2011b)."
      ]
    },
    {
      "heading": "3. Standard Approaches for Rescoring",
      "text": [
        "A word lattice, L, obtained at the output of the first pass decoding, encodes exponential number (exponential in the number of states (nodes) present in the lattice) of hypotheses in a very compact data structure.",
        "It is a directed acyclic graph G = (V, E,ns,Ne), where V and E denote set of vertices (nodes / states) and edges (arcs / links), respectively.",
        "ns and Ne denote the unique start state and set of end states.",
        "A path, n, in a lattice is an element of E* with consecutive transitions.",
        "We will denote the origin / previous state of this path by and destination / next state of this path by n[n].",
        "A path, n is called a complete path if = ns and n[n] G Ne.",
        "A path, n, is called a partial path if = ns but n[n] may or may not belong to Ne.",
        "A path, n, is called a trailing path if may or may not be equal tons and n[n] G Ne.",
        "We will also denote the time stamp at the start of the path by Ts [n] and the time stamp at the end of the path by Te [n].",
        "Since there are nodes attached to the start and end of any path, we will denote the time stamp at any node u G V by T[u].",
        "Associated with every path, n, is also a word sequence W [n] G W *, where W is the vocabulary used during speech recognition.",
        "For the sake ofsim-plicity, we will distinguish word sequence of length 1 from the word sequences of length greater than 1 by using lower and upper casing i.e. w[ ] and W[•] respectively.",
        "The acoustic likelihood of the path n G E * is then given as:",
        "where Vj G {1, 2,..., |^|} ttj G E, n = QlJ=1njand P(aj]) is the acoustic likelihood of the acoustic substring aj, spanning between Ts[nj ] and Te[nj], conditioned on the word w[nj] associated with the edge nj .",
        "Similarly, the language model score of the path n is given as:",
        "where P(w[nj]|w[nj-1],..., w[nj-TO+1]) is the m-th order Markov approximation for estimating the probability of a word given the context upto that point.",
        "The speech recognizer, which uses m-th order Markov LM for first pass recognition, imposes a constraint on the word lattice such that at each state there exists an unambiguous context of consecutive m – 1 words.",
        "A first pass output is then a path n* having Maximum a Posterior (MAP) probability.",
        "Thus n* is obtained as:",
        "where 7 is the scaling parameter needed to balance the dynamic variability between the distributions of acoustic and language model (Ogawa et al., 1998).",
        "Efficient algorithms such as single source shortest path (Mohri et al., 2000) can be used for finding out the MAP path.",
        "Under a new n-gram Language Model, rescor-ing involves replacing the existing language model scores of all paths n. If we denote the new language model by Lnew and correspondingly the score of the path n by Lnew [n], then it is simply obtained as:",
        "where P(w[nj]|w[nj--1],..., w[nj-n+1]) is the nth order Markov approximation for estimating the probability of a word given the unambiguous context of n – 1 words under the new rescoring LM.",
        "If the Markov rescoring n-gram LM needs a bigger context for the task of prediction (i.e. n > m, where m – 1 is the size of the unambiguous context maintained at every state of the word lattice), then each state of the lattice has to be split until an unambiguous context of length as large as that required by the new re-scoring language model is not maintained.",
        "The best path, n* is then obtained as:",
        "where n acts as the new scaling parameter which may or may not be equal to the old scaling parameter",
        "7.",
        "It should be noted that if the rescoring LM needs a context of the entire past in order to predict the next word, then the lattice has to be expanded by splitting the states many more times.",
        "This usually blows up the search space even for a reasonably small number",
        "timal under some model.",
        "This should not be confused with the Kleene stars appearing as superscripts for E and W, which serve the purpose of regular expressions implying 0 or many occurences of the element of E and V respectively.",
        "of state splitting iterations.",
        "When the task is to do rescoring under a long span LM, such as RNN-LM, then exact lattice re-scoring option is not feasible.",
        "In order to tackle this problem, a suboptimal approach via N best list rescoring is utilized.",
        "The details of this method are presented next.",
        "N best list re-scoring is a popular way to capture some long-distance dependencies, though the method can be slow and it can be biased toward the weaker language model that was used in the first pass.",
        "Given a word lattice, L, top N paths ... ,nN} are extracted such that their joint likelihood under the baseline acoustic and language models are in descending order i.e. that:",
        "Efficient algorithms exist for extracting N best paths from word lattices (Chow and Schwartz, 1989; Mohri and Riley, 2002).",
        "If a new language model, Lnew, is provided, which now need not be restricted to finite state machine family, then that can be deployed to get the score of the entire path n. If we denote the new LM scores by Lnew [•], then under N best list paradigm, optimal path n is found out such where n acts as the new scaling parameter which may or may not be equal to 7.",
        "If N <C |L| (where |L| is the total number of complete paths in word lattice, which are exponentially many), then the path obtained using (2) is not guaranteed to be optimal (under the rescoring model).",
        "The short list of hypotheses so used for re-scoring would yield suboptimal output if the best path n* (according to the new model) is not present among the top N candidates extracted from the lattice.",
        "This search space is thus said to be biased towards a weaker model mainly because the N best lists are representative of the model generating them.",
        "To illustrate the idea, we demonstrate below a simple analysis on a relatively easy task of speech transcription on WSJ data.",
        "In this setup, the recognizer made use of a bigram LM to produce lattices and hence N best lists.",
        "Each hypothesis in this set got a rank with the top most and highest scoring hypothesis getting a rank of 1 , while the bottom most hypothesis getting a rank of N. We then re-scored these hypotheses with a better language model (either with a higher order Markov LM i.e. a trigram LM (tg) or the log linear combination of n-gram models and syntactic models (n-gram+syntactic) and re-ranked the hypotheses to obtain their new ranks.",
        "We then used Spearman's rank correlation factor, p, which takes values in [ – 1, +1], with – 1 meaning that the two ranked lists are negatively correlated (one list is in a reverse order with respect to the other list) and +1 meaning that the two ranked lists are positively correlated (the two lists are exactly the same).",
        "Spearman's rank correlation factor is given as:",
        "where dn is the difference between the old and new rank of the nth entry (in our case, difference between n(G {1, 2,..., N}) and the new rank which the nthhypothesis got under the rescoring model).",
        "Table 1 shows how the correlation factor drops dramatically when a better and a complementary LM is used for re-scoring, suggesting that the N best lists are heavily biased towards the starting models.",
        "Huge re-rankings suggests there is an opportunity to improve and also a need to explore more hypotheses, i.e. beyond N best lists.",
        "Table 1: Spearman Rank Correlation on the N best list extracted from a bi-gram language model (bg) and re-scored with relatively better language models including, trigram LM (tg), and the log linear combination of n-gram models, and syntactic models (n-gram+syntactic).",
        "With a bigger and a better LM, the WER decreases at the expense of huge re-rankings of N best lists, only suggesting the fact that N best lists generated under a weaker model, are not reflective enough of a relatively better model.",
        "In the next section, we propose an algorithm which keeps the representation of search space as simple as that of N best list, but does not restrict itself to top N best paths alone and hence does not get biased towards the starting weaker model."
      ]
    },
    {
      "heading": "4. Proposed Approach for Rescoring",
      "text": [
        "A high level idea of our proposed approach is to identify islands of confusability in the word lattice and replace the problem of global search over word lattice by series of local search problems over these islands in an iterative manner.",
        "The motivation behind this strategy is the observation that the recognizer produces bursts of errors such that they have a temporal scope.",
        "The recognizer output (sentence hypotheses) when aligned together typically shows a pattern of confusions both at the word level and at the phrase level.",
        "Regions where there are singleton words competing with one another (reminiscent of a confusion bin of a Confusion Network (CN) (Mangu, 2000)), choice of 1 word edit distance works well for the formation of local neighborhood.",
        "Regions where there are phrases competing with other phrases, choice of variable length neighborhood works well.",
        "Previously, Richardson et al.",
        "(1995) demonstrated a hill climbing framework by exploring 1 word edit distance neighborhood, while in our own previous work (Deoras and Jelinek, 2009), we demonstrated working ofiterative decoding algorithm, a hill climbing framework, for CNs, in which the neighborhood was formed by all words competing with each other in any given time slot, as defined by a confusion bin.",
        "In this work, we propose a technique which generalizes very well on word lattices and overcomes the limitations posed by a CN or by the limited nature of local neighborhood.",
        "The size of the neighborhood in our approach is a variable factor which depends upon the confusability in any particular region of the word lattice.",
        "Thus the local neighborhood are in some sense a function of the confusabil-ity present in the lattice rather than some predetermined factor.",
        "Below we describe the process, virtue of which, we can cut the lattice to form many self contained smaller sized sub lattices.",
        "Once these sub lattices are formed, we follow a similar hill climbing procedure as proposed in our previous work (Deoras and Jelinek, 2009).",
        "Model",
        "(p) WER (%)",
        "bg",
        "1.00 18.2%",
        "tg",
        "0.41 17.4%",
        "n-gram+syntactic",
        "0.33 15.8%",
        "We will continue to follow the notation introduced in section 3.1.",
        "Before we define the procedure for cutting the lattice into many small self contained lattices, we will define some more terms necessary for the ease of understandability of the algorithm.For any node v G V, we define forward probability, a(v), as the probability of any partial path n G E*, s.t.",
        "p[n] = ns, n[n] = v and it is given as:",
        "Similarly, for any node v G V, we define the backward probability, ß(v), as the probability of any trailing path n G E*, s.t.",
        "p[n] = v, n[n] G Ne and it is given as:",
        "If we define the sum of joint likelihood under the baseline acoustic and language models of all paths in the lattice by Z, then it can simply be obtained as:",
        "Z = E„eNe a(u) = ß(ns)In order to cut the lattice, we want to identify sets",
        "S following conditions are satisfied:",
        "1.",
        "For any two nodes u, v G Sj we have that: T [u] = T [v].",
        "We will define this common time stamp of the nodes in the set by T [Si].",
        "2. fin G E such that Ts[n] < T[Sj] < Te[n].",
        "The first property can be easily checked by first pushing states into a linked list associated with each time marker (this can be done by iterating over all the states of the graph) then iterating over the unique time markers and retrieving back the nodes associated with it.The second property can be checked by first iterating over the unique time markers and for each of the marker, iterating over the arcs and terminating the loop as soon as some arc is found out violating property 2 for the specific time marker.",
        "Thus the time complexity for checking property 1 is O(|V|) and that for property 2 is O(|T| x |E|), where |T| is the total number of unique time markers.",
        "Usually |T| C |E| and hence the time complexity for checking property 2 is almost linear in the number of edges.",
        "Thus effectively, the time complexity for cutting the lattice is O(|V| + |E|).",
        "Having formed such sets, we can now cut the lattice at time stamps associated with these sets i.e. that: T[S1],..., T[S|S|].",
        "It can be easily seen that the number of sub lattices, C, will be equal to |S| – 1.We will identify these sub lattices as L1, L1,..., LC.",
        "At this point, we have not formed self contained lattices yet by simply cutting the parent lattice at the cut points.",
        "Once we cut the lattice at these cut points, we implicitly introduce many new starting nodes and ending nodes for any sub lattice.",
        "We will refer to these nodes as exposed starting nodes and exposed ending nodes.",
        "Thus for some jth sub lattice, Lj, there will be as many new exposed starting nodes as there are nodes in the set Sj and as many exposed ending nodes as there are nodes in the set Sj+1 .",
        "In order to make these sub lattices consistent with the definition of a word lattice (see Sec. 3.1), we unify all the exposed starting nodes and exposed ending nodes.",
        "To unify the exposed starting nodes, we introduce as many new edges as there are nodes in the set Sj such that they have a common starting node, ns[Lj], (newly created) and distinct ending nodes present in Sj.",
        "To unify the exposed ending nodes of Lj, we introduce as many new edges as there are nodes in the set Sj+1 such that they have distinct starting nodes present in Sj+1 and a common ending node ne[Lj] (newly created).",
        "From the totality of these new edges and nodes along with the ones already present in Lj forms an induced directed acyclic subgraph G[Lj] = (V[Lj], E[Lj], ns[Lj], ne[Lj]).",
        "For any path n G E[Lj] such that p[n] = ns[Lj] and n[n] G Sj, we assign the value of a(n[n]) to denote the joint likelihood A[n]L[n] and assign epsilon for word associated with these edges i.e. w[n].",
        "We assign T[Sj] – £T to denote Ts[n] and T [Sj ] to denote Te[n].",
        "Similarly, for any path n G E[Lj] suchthatp[n] G Sj+1 andn[n] = ne[Lj], we assign the value of ß(p[7r]) to denote the joint likelihood L[n] and assign epsilon for word associated with these edges i.e. We assign T[Sj+i] to denote Ts[n] and T[Sj+i] + ÖT to denote Te [n].",
        "This completes the process and we obtain self contained lattices, which if need be, can be independently decoded and/or analyzed.",
        "Once we have formed the self contained lattices, Ci, £]_,..., Cc, where C is the total number of sub lattices formed, then the idea is to divide the re-scoring problem into many small re-scoring problems carried over the sub lattices one at a time by fixing single best paths from all the remaining sub lattices.",
        "The inputs to the algorithm are the sub lattices (produced by cutting the parent lattice generated under some Markov n-gram LM) and a new rescor-ing LM, which now need not be restricted to finite state machine family.",
        "The output of the algorithm is a word string, W*, such that it is the concatenation of final decoded word strings from each sub lattice.",
        "Thus if we denote the final decoded path (under some decoding scheme, which will become apparent next) in the jth sub lattice by nj* and the concatenation symbol by then W* = W[n*] • W[n*] •... • W[n*c] = ©<C=iW[n*].",
        "Algorithm 1 Iterative Decoding on word lattices.",
        "Require: {Ci, Ci,..., Cc }, LnewPrevHyp null CurrentHyp <- ©C=iW [nj ] while PrevHyp = CurrentHyp do for i < – 1... C do",
        "PrevHyp ^ CurrentHyp CurrentHyp ^ ©C=iW[nj] end while",
        "The algorithm is initialized by setting PrevHypo to null and CurrHypo to the concatenation of 1 best output from each sub lattice.",
        "During the initialization step, each sub lattice is analyzed independent of any other sub lattice and under the baseline acoustic scores and baseline n-gram LM scores, 1-best path is found out.",
        "Thus if we define the best path under baseline model in some jth sub-lattice by nj, Cur-rHypo is then initialized to: W• W• ... • W [nc].",
        "The algorithm then runs as long as Cur-rHypo is not equal to PrevHypo.",
        "In each iteration, the algorithm sequentially re-scores each sub-lattice by keeping the surrounding context fixed.",
        "Once all the sub lattices are re-scored, that constitutes one iteration.",
        "At the end of each iteration, CurrHypo is set to the concatenation of 1 best paths from each sub lattice while PrevHypo is set to the old value of CurrHypo.",
        "Thus if we are analyzing some ithsub-lattice in some iteration, then 1-best paths from all but this sub-lattice is kept fixed and a new 1-best path under the re-scoring LM is found out.",
        "It is not hard to see that the likelihood of the output under the new re-scoring model is guaranteed to increase monotonically after every decoding step.",
        "Since the cutting of parent lattices produce many small lattices with considerably lesser number of nodes, in practice, an exhaustive search for the 1-best hypothesis can be carried out via N best list.",
        "Algorithm 1 outlines the steps for iterative decoding on word lattices.",
        "In this section, we will discuss a speed up technique based on entropy of the lattice.",
        "Entropy of a lattice reflects the confidence of the recognizer in recognizing the acoustics.",
        "Based on the observation that if the N best list / lattice generated under some model has a very low entropy, then the Spearman's rank correlation factor, p (Eqn.",
        "3), tends to be higher even when the N best lists / lattice is re-ranked with a bigger and a better model.",
        "A low entropy under the baseline model only reflects the confidence of the recognizer in recognizing the acoustic.",
        "Table 2 shows the rank correlation values between two sets of N best lists.",
        "Both sets are produced by a bigram LM (bg).",
        "The entropy of N best lists in the first set is 0.05 nats or less.",
        "The N best lists in the second set have an entropy greater than 0.05 nats.",
        "Both these sets are re-ranked with bigger and better models (see Table 1 for model definitions).",
        "We can see from Table 2 that the rank correlation values tend to be higher (indicating little re-rankings) when the entropy of the N best list, under the baseline model, is lower.",
        "Similarly, the rank-correlation values tend to be lower (indicating more re-rankings) whenever the entropy of the N best list is higher.",
        "Note that these entropy values are computed with respect to the starting model (in this case, bigram LM).",
        "Of course, if the starting LM is much weaker than the rescoring model, then the entropy values need not be reflective of the difficulty of the overall task.",
        "This observation then suggests that it is safe to rescore only those N best lists whose entropy under the starting model is higher than some threshold.",
        "Table 2: Spearman Rank Correlation on the N best list extracted from a bi-gram language model (bg) and re-scored with relatively better language models (see Table 1 for model definitions).",
        "Entropy under the baseline model correlates well with the rank correlation factor, suggesting that exhaustive search need not be necessary for utterances yielding lower entropy.",
        "While computation of entropy for N best list is tractable, for a word lattice, the computation of entropy is intractable if one were to enumerate all the hypotheses.",
        "Even if we were able to enumerate all hypotheses, this method tends to be slower.",
        "Using efficient semiring techniques introduced by Li and Eisner (2009) or using posterior probabilities on the edges leading to end states, we can compute the entropy of a lattice in one single forward pass using dynamic programming.",
        "It should, however, be noted that, for dynamic programming technique to work, only n-gram LMs can be used.",
        "One has to resort to approximate entropy computation via N best list, if entropy under long span LM is desired.",
        "Our speed up technique is simple.",
        "Once we have formed self contained sub lattices, we want to prune all but the top few best complete paths (obtained under baseline / starting model) of those sub lattices whose entropy is below some threshold.",
        "Thus, believing in the original model's confidence, we want to focus only on those sub lattices which the recognizer found difficult to decode in the first pass.",
        "All other part of the parent lattice will be not be analyzed.",
        "The thresholds for pruning is very application and corpus specific and needs to be tuned on some held out data."
      ]
    },
    {
      "heading": "5. Experiments and Results",
      "text": [
        "We performed recognition on the Broadcast News (BN) dev04f, rt03 and rt04 task using the state-of-the-art acoustic models trained on the English Broadcast News (BN) corpus (430 hours of audio) provided to us by IBM (Chen et al., 2009).",
        "IBM also provided us its state-of-the-art speech recognizer, Attila (Soltau et al., 2010) and two Kneser-Ney smoothed backoff n-gram LMs containing 4.7M n-grams (n < 4) and 54M n-grams (n < 4), both trained on 400M word tokens.",
        "We will refer to them as KN:BN-Small and KN:BN-Big respectively.",
        "We refer readers to (Chen et al., 2009) for more details about the recognizer and corpora used for training the models.",
        "We trained two RNN based language models the first one, denoted further as RNN-limited, was trained on a subset of the training data (58M tokens).",
        "It used 400 neurons in the hidden layer.",
        "The second model, denoted as RNN-all, was trained on all of the training data (400M tokens), but due to the computational complexity issues, we had to restrict its hidden layer size to 320 neurons.",
        "We followed IBM's multi-pass decoding recipe using KN:BN-Small in the first pass followed by either N best list re-scoring or word lattice re-scoring using bigger and better models.",
        "For the purpose of re-scoring, we combined all the relevant statistical models in one unified log linear framework reminiscent of work by Beyerlein (1998).",
        "We, however, trained the model weights by optimizing expected WER rather than 1-best loss as described in (De-oras et al., 2010).",
        "Training was done on N best lists of size 2K.",
        "We will refer to the log linear com-",
        "Rescoring Model",
        "p(H<0.05) p(H>0.05)",
        "bg",
        "1.00 1.00",
        "tg",
        "0.58 0.38",
        "n-gram+syntactic",
        "0.54 0.31",
        "Figure 2: Plot of WER (y axis) on rt03+dev04f set versus the size of the search space (x axis).",
        "The baseline WER obtained using KN:BN-Small is 12% which then drops to 11% when KN:BN-Big is used for re-scoring.",
        "N best list search method obtains the same reduction in WER by evaluating as many as 228K sentence hypotheses on an average.",
        "The proposed method obtains the same reduction by evaluating 14 times smaller search space.",
        "The search effort reduces further to 40 times if entropy based pruning is employed during re-scoring.",
        "bination of KN:BN-Big and RNN-limited by KN-RNN-lim; KN:BN-Big and RNN-all by KN-RNNall and KN:BN-Big, RNN-limited and RNN-all by KN-RNN-lim-all.",
        "We used two sets for decoding: rt03+dev04f set was used as a development set while rt04 was used as a blind set for the purpose of evaluating the performance of long span RNN models using the proposed approach.",
        "We made use of OpenFst C++ libraries (Allauzen et al., 2007) for manipulating lattice graphs and generating N best lists.",
        "Due to the presence of hesitation tokens in reference transcripts and the need to access the silence/pause tokens for penalizing short sentences, we treated these tokens as regular words before extracting sentence hypotheses.",
        "This, and poorly segmented nature of the test corpora, led to huge enumeration of sentence hypotheses.",
        "In this setup, we used KN:BN-Small as the baseline starting LM which yielded the WER of 12% on rt03+dev04f set.",
        "Using KN:BN-Big as the re-scoring LM, the WER dropped to 11%.",
        "Since the re-scoring LM belonged to the n-gram family, it was possible to compute the optimal word string by re-scoring the whole lattice (see Sec. 3.1).",
        "We now compare the performance of N best list approach (Sec.",
        "3.2) with our proposed approach (Sec.",
        "4).",
        "N best list achieved the best possible reduction by evaluating as many as 228K sentence hypotheses on an average.",
        "As against that, our proposed approach achieved the same performance by evaluating 16.6K sentence hypotheses, thus reducing the search efforts by 13.75 times.",
        "By carrying out entropy pruning (see Sec. 4.3 ) on sub lattices, our proposed approach required as little as 5.6K sentence hypotheses evaluations to obtain the same optimal performance, reducing the search effort by as much as 40.46 times.",
        "For the purpose of this experiment, entropy based pruning was carried out when the entropy of the sub lattice was below 5 nats.",
        "Table 3 compares the two search methods for this setup and Fig. 2 shows a plot of WER versus the size of the search space (in terms of number of sentence hypotheses evaluated by an n-gram language model).",
        "On rt04, the KN:BN-Small LM gave a WER of 14.1% which then dropped to 13.1% after re-scoring with KN:BN-Big.",
        "Since the re-scoring model was an n-gram LM, it was possible to obtain the optimal performance via lattice update technique (see Sec. 3.1).",
        "We then carried out the re-scoring of the word lattices under KN:BN-Big using our proposed technique and found it to give the same performance yielding the WER of 13.1%.",
        "In this setup, we used the strongest n-gram LM as our baseline.",
        "We thus used KN:BN-Big as the baseline LM which yielded the WER of 11% on scoring.",
        "Due to long span nature of the re-scoring LM, it was not possible to obtain the optimal WER performance.",
        "Hence we have compared the performance of our proposed method with N best list approach.",
        "N best list achieved the lowest possible WER after evaluating as many as 33.8K sentence hypotheses on an average.",
        "As against that, our proposed approach in conjunction with entropy pruning obtained the same performance by evaluating just 1 .",
        "6K sentence hypotheses, thus reducing the search by a factor of 21.",
        "Fig 3 shows a plot of WER versus",
        "Figure 3: Plot of WER (y axis) on rt03+dev04f set versus the size of the search space (x axis).",
        "The baseline WER obtained using KN:BN-Big is 11% which then drops to 10.4% when KN-RNN-lim-all is used for re-scoring.",
        "N best list search method obtains this reduction in WER by evaluating as many as 33.8K sentence hypotheses on an average, while the proposed method (with entropy pruning) obtains the same reduction by evaluating 21 times smaller search space.",
        "the size of the search space (in terms of number of sentence hypotheses evaluated by a long span language model).",
        "In-spite of starting off with a very strong n-gram LM, the N best lists so extracted were still not representative enough of the long span rescoring models.",
        "Had we started off with KN:BN-Small, the N best list re-scoring method would have had no chance of finding the optimal hypothesis in reasonable size of hypotheses search space.",
        "Table 4 compares the two search methods for this setup when many other long span LMs were also used for re-scoring.",
        "On rt04, the KN:BN-Big LM gave a WER of 13.1% which then dropped to 12.15% after re-scoring with KN-RNN-lim-all using our proposed technique.",
        "Since the re-scoring model was not an n-gram LM, it was not possible to obtain the optimal performance but we could enumerate huge N best list to approximate this value.",
        "Our proposed method is much faster than huge N best lists and no worse in terms of WER.",
        "As far as we know, the result obtained on these sets is the best performance ever reported on the Broadcast News corpus for speech recognition.",
        "Table 3: The starting LM is a weak n-gram LM (KN:BN-Small) and the re-scoring LM is a much stronger but n-gram LM (KN:BN-Big).",
        "The baseline WER in this case is 12% and the optimal performance by the re-scoring LM is 11 .",
        "0%.",
        "The proposed method outperforms N best list approach, in terms of search efforts, obtaining optimal",
        "WER.",
        "to long span nature of the LM, optimal WER could not be estimated.",
        "The proposed method outperfoms N best list approach on every re-scoring task."
      ]
    },
    {
      "heading": "6. Conclusion",
      "text": [
        "We proposed and demonstrated a new re-scoring technique for general word graph structures such as word lattices.",
        "We showed its efficacy by demonstrating huge reductions in the search effort to obtain a new state-of-the-art performance on a very competitive speech task of Broadcast news.",
        "As part of the future work, we plan to extend this technique for hy-pergraphs and lattices in re-scoring MT outputs with complex and long span language models.",
        "Acknowledgement",
        "This work was partly funded by Human Language Technology, Center of Excellence and by Technology Agency of the Czech Republic grant No.",
        "TA01011328, and Grant Agency of Czech Republic project No.",
        "102/08/0707.",
        "We would also like to acknowledge the contribution of Frederick Jelinek towards this work.",
        "He would be a co-author if he were available and willing to give his consent.",
        "Models",
        "WER",
        "N Best",
        "ID",
        "Saving",
        "KN:BN-Small",
        "12.0",
        "-",
        "-",
        "-",
        "KN:BN-Big",
        "11.0",
        "228K",
        "5.6K",
        "40",
        "Models",
        "WER",
        "N Best",
        "ID",
        "Saving",
        "KN:BN-Big",
        "11.0",
        "-",
        "-",
        "-",
        "KN-RNN-lim",
        "10.5",
        "42K",
        "1.1K",
        "38",
        "KN-RNN-all",
        "10.5",
        "26K",
        "1.3K",
        "20",
        "KN-RNN-lim-all",
        "10.4",
        "34K",
        "1.6K",
        "21"
      ]
    }
  ]
}
