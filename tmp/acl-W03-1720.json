{
  "info": {
    "authors": [
      "Masayuki Asahara",
      "Chooi-Ling Goh",
      "Xiaojie Wang",
      "Yuji Matsumoto"
    ],
    "book": "SIGHAN Workshop on Chinese Language Processing",
    "id": "acl-W03-1720",
    "title": "Combining Segmenter and Chunker for Chinese Word Segmentation",
    "url": "https://aclweb.org/anthology/W03-1720",
    "year": 2003
  },
  "references": [
    "acl-N01-1025",
    "acl-W95-0107"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Our proposed method is to use a Hidden Markov Model-based word segmenter and a Support Vector Machine-based chunker for Chinese word segmentation.",
        "Firstly, input sentences are analyzed by the Hidden Markov Model-based word segmenter.",
        "The word segmenter produces n-best word candidates together with some class information and confidence measures.",
        "Secondly, the extracted words are broken into character units and each character is annotated with the possible word class and the position in the word, which are then used as the features for the chunker.",
        "Finally, the Support Vector Machine-based chunker brings character units together into words so as to determine the word boundaries."
      ]
    },
    {
      "heading": "1 Methods",
      "text": [
        "We participate in the closed test for all four sets of data in Chinese Word Segmentation Bakeoff.",
        "Our method is based on the following two steps:",
        "1.",
        "The input sentence is segmented into a word sequence by Hidden Markov Model-based word seg",
        "menter.",
        "The segmenter assigns a word class with a confidence measure for each word at the hidden states.",
        "The model is trained by Baum-Welch algorithm.",
        "2.",
        "Each character in the sentence is annotated with the word class tag and the position in the word.",
        "The n-best word candidates derived from the word segmenter are also extracted as the features.",
        "A support vector machine-based chunker corrects the errors made by the segmenter using the extracted features.",
        "We will describe each of these steps in more details."
      ]
    },
    {
      "heading": "1.1 Hidden Markov Model-based Word Segmenter",
      "text": [
        "Our word segmenter is based on Hidden Markov Model (HMM).",
        "We first decide the number of hidden states (classes) and assume that the each word can belong to all the classes with some probability.",
        "The problem is defined as a search for the sequence of word classes C = cl, ... , c,,, given a word sequence W = wl, ... , w,,,.",
        "The target is to find W and C for a given input S that maximizes the following probability:",
        "We assume that the word probability P(W IC) is constrained only by its word class, and that the class probability P(C) is constrained only by the class of the preceding word.",
        "These probabilities are estimated by the Baum-Welch algorithm using the training material (See (Manning and Sch¨utze., 1999)).",
        "The learning process is based on the Baum-Welch algorithm and is the same as the well-known use of HMM for part-of-speech tagging problem, except that the number of states are arbitrarily determined and the initial probabilities are randomly assigned in our model."
      ]
    },
    {
      "heading": "1.2 Correction by Support Vector Machine-based Chunker",
      "text": [
        "While the HMM-based word segmenter achieves good accuracy for known words, it cannot identify compound words and out-of-vocabulary words.",
        "Therefore, we introduce a Support Vector Machine(below SVM)-based chunker (Kudo and Matsumoto, 2001) to cover the errors made by the segmenter.",
        "The SVM-based chunker reassigns new word boundaries to the output of the segmenter.",
        "An SVM (Vapnik, 1998) is a binary classifier.",
        "Suppose we have a set of training data for a binary class problem: (xl, yl), .",
        ".",
        ".",
        ", (xN, yN), where xi E R,,, is a feature vector of the i th sample in the training data and arg max W,C yi E 1+1, – 1� is the label of the sample.",
        "The goal is to find a decision function which accurately predicts y for an unseen x.",
        "An SVM classifier gives a decision function f (x) for an input vector x where",
        "tors zi are called support vectors, which receive a non-zero weight ai.",
        "Support vectors and the parameters are determined by solving a quadratic programming problem.",
        "K(x, z) is a kernel function which maps vectors into a higher dimensional space.",
        "We use a polynomial kernel of degree 2 given by K(x, z) _ (1 + x • z)2.",
        "The SVM classifier determines the position tag for each character.",
        "We introduce the word class tag as the feature, which is generated by the word segmenter.",
        "Since we perform chunking by character units, the feature used by the classifier will be the information for the character unit.",
        "The training data for our SVM-based chunker is constructed from the output of the HMM-based word segmenter defined in the previous section.",
        "In the current setting, the HMM produces all the possible tags (class labels) for each of the word within a predefined probability bound.",
        "All the words in the output are then segmented into characters, and each of the characters is tagged with pairs of a word class and a position tag.",
        "For example, in the paired tag “0-B”, “0” is a class label of the word which the character belongs to and “B” indicates the character’s position in the word.",
        "The number of classes is determined in advance of the HMM learning.",
        "The position tag consists of the following four tags (S/B/E/I): S means a single-character word; B is the first character in a multi-character word; E is the last character in a multi-character word; I is the intermediate character in a multi-character word longer than 2 characters.",
        "As shown in Figure 1, we set the HMM-based word segmenter to produce the classes of n-best word candidates to take into account multiple possibility of word boundaries.",
        "The correct word boundary can be defined by assigning either of two kinds of tags to each of the characters.",
        "Look at the rightmost column of Figure 1 named as “Chunker Outputs.” The label “B” in this column shows that the character is the first character of a correct word, and “I” shows that the character is the other part of a word.",
        "This means that the preceding positions of “B” tags are the word boundaries.",
        "Those two tags correspond to the two classes of the SVM chunker: In the training (and test) phrase, we use window size of two characters to the left and right direction to learn (and estimate) the class for a character.",
        "For example, the shadowed parts in Figure 1 are used as the",
        "features to learn (or estimate) the word boundary tag “I” for the character “ In most cases, models perform slightly better with the increasing of the number of classes.",
        "When the corpus size is large like the Academia Sinica data, this tendency becomes more significant.",
        "Whereas it is known that the Baum Welch algorithm is very sensitive to the initialization of the classes, we randomly assigned the initial classes without making much effort.",
        "There are two reasons: (1) Since the word segmenter outputs are used as the clues to the chunker in our method, we only need some consistent class annotations.",
        "(2) The initial classes did not affect on the word segmentation accuracy in our pilot experiments."
      ]
    },
    {
      "heading": "2.2 Validation Tests for SVM-based Chunker",
      "text": [
        "The second validation test is for the chunking model to determine both “the number of word classes” and “the depth of the n-best candidates”.",
        "80% of the material used for the HMM training, another 10% is used for the chunking model training and the last 10% is used for the validation test.",
        "The results are shown in Table 2, 3 and 4.",
        "Since the training of this model is time and resource-consuming, the Academia Sinica data being very large could not get enough time to finish the validation test.",
        "The results show that the chunker actually improves the word segmentation accuracy compared with the output of the HMM word segmenter for these three data sets.",
        "The segmentation errors made by the word segmenter for compound words and unknown words are corrected.",
        "The",
        "improvement in Chinese Treebank (CTB) data set is significant, because the data set contains many compound words.",
        "There is no significant difference in the results between the different depths of n-best answers.",
        "Still, we choose the best model for the test materials among them.",
        "If we need to have a faster analyzer, we should employ only the best answer of the word segmentation.",
        "For the HMM, the larger number of classes tends to get better accuracy than smaller ones.",
        "However, for the chunking model, the result is the other way round.",
        "The model with the smaller number of classes gets slightly better accuracy.",
        "So, there should be trade-off between smaller and larger number of classes."
      ]
    },
    {
      "heading": "3 Final Models for Test Material",
      "text": [
        "For the final models, 80% of the training material is used for HMM training and 100% of the material is used for the chunking model training.",
        "The parameters, namely “the number of word classes” and “the depth of n-best word candidates”, are determined by the validation tests described in Section 2.",
        "While there is no significant difference between the depths of n-best answers, we choose the best model among them for the testing.",
        "The parameters are shown in Table 7.",
        "We cannot create the model using all the original Academia Sinica data because of its large size.",
        "Therefore, we use 80% of the data for HMM training (5 classes) and only 10% for chunking model training (with only the best candidates)."
      ]
    },
    {
      "heading": "4 Throughput Speeds",
      "text": [
        "As described, our system is based on three modules: HMM-based word segmenter, Feature extractor and SVM-based chunker.",
        "The word segmenter is composed by ChaSen (written in C/C++) (Matsumoto et.",
        "al., 2003) which is adopted for GB/Big5 encoding.",
        "The feature extractor is written in Perl.",
        "The SVM-based chunker is composed by YamCha (written in C++) (Kudo and Matsumoto, 2001).",
        "Table 5 shows the speeds 1 of the three modules individually and of the total system.",
        "“# of words” means the size of the word segmenter lexicon.",
        "Note that, if a word belongs to more than one class, we regard them as different words in our definition.",
        "“# of SV” means the number of support vectors in the chunker.",
        "The total system speed depends highly on that of the chunker.",
        "It is known that the speed of SVM classifiers depends on the number of support vectors and the number of features."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "We presented our method for Chinese Word Segmentation Bakeoff in 2nd SIGHAN Workshop.",
        "The results for the test materials are shown in Table 6.",
        "The proposed method is purely corpus-based statistical/machine learning method.",
        "Although we did not incorporate any heuristic rules (e.g. part-of-speeches, functional words and concatenation for numbers) into the model, the method achieved considerable accuracy for the word segmentation task."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "We thank Mr. Taku Kudo of NAIST for his development of the SVM-based chunker YamCha."
      ]
    }
  ]
}
