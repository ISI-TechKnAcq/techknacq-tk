{
  "info": {
    "authors": [
      "Glyn Morrill"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E99-1009",
    "title": "Geometry of Lexico-Syntactic Interaction",
    "url": "https://aclweb.org/anthology/E99-1009",
    "year": 1999
  },
  "references": [
    "acl-C90-2030",
    "acl-P89-1033"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Interaction of lexical and derivational semantics for example substitution and lambda conversion is typically a part of the on-line interpretation process.",
        "Proof-nets are to categorial grammar what phrase markers are to phrase structure grammar: unique graphical structures underlying equivalence classes of sequential syntactic derivations; but the role of proof-nets is deeper since they integrate also semantics.",
        "In this paper we show how interaction of lexical and derivational semantics at the lexico-syntactic interface can be precomputed as a process of off-line lexical compilation comprising Cut elimination in partial proof-nets.",
        "Introduction Consider the following examples of paraphrase: (1)a.Frodo lives in Bag End.",
        "Frodo inhabits Bag End.",
        "b. C.((in b) (live f)) (2)a.John tries to find Mary.",
        "John seeks Mary.",
        "b. C.((try (find m)) j) Typically, for at least (lb) and (2b) the normalised semantic forms result from a process of substitution and lambda conversion subsequent to or simultaneous with syntactic derivation.",
        "We show how such interaction of lexical and derivational semantics at the lexicosyntactic interface can be precomputed as a process of off-line lexical compilation comprising Cut elimination in partial proof-nets.",
        "For accessibility, we devote in the initial sections a considerable proportion of space to an introduction to categorial grammar oriented towards proof-nets; see also Morrill (1994), Moortgat (1996) and Carpenter (1997)."
      ]
    },
    {
      "heading": "1 Categorial grammar",
      "text": [
        "We consider categorial grammar with category formulas F (categories) defined by the following grammar: (3)a. ::= A 1 F\\F 1 FIF 1 FF b. ::= SINI CN I PP I ...",
        "The categories in A are referred to as atomic and correspond to the kinds of expressions which are considered to be \"complete\".",
        "Fairly uncontroversially, this class may be taken to include at least sentences S and names N; what the class is exactly is not fixed by the formalism.",
        "Left division categories A\\B CA under B') are those of expressions (functors) which concatenate with (arguments) in A on the left to yield Bs.",
        "Right division categories BIA CB over A') are those of expressions (functors) which concatenate with (arguments) in A on the right yielding Bs.",
        "Product categories AB are those of expressions which are the result of concatenating an A with a B; products do not play a dominant role here.",
        "More precisely, let L be the set of strings (including the empty string E) over a finite vocabulary V and let + be the operation of concatenation (i.e. (L, +, E) is the free monoid generated by V)'.",
        "Each category formula A is interpreted as a subset [[A]] of L. When the interpretation of atomic categories has been fixed, that of complex categories is defined by (4).",
        "In general, given some type assignments others may be inferred.",
        "Such reasoning is precisely formulated in the Lambek calculus L.",
        "As the reader may check, N/CN, CN S/(N\\S) has three Cut-free proofs; in general the combinatorial possibilities multiply exponentially.",
        "This feature is sometimes referred to as the problem of spuriousambiguityorderivational equivalence.",
        "It is regarded as problematic computationally because it means that in an exhaustive traversal of the proof search spaceonemusteitherrepeat",
        "subcomputations, or else perform bookkeeping to avoid so doing.",
        "The problem is that different 3i-long sequent derivations do not necessarily represent different readings, and this is the case because the sequent calculus forces us to choose between a sequentialisation of inferences in the case of (14) /L and \\L--- when in fact they are not ordered by dependency and can be performed in parallel.",
        "The problem can be resolved by defining stricter normalised proofs which impose a unique ordering when alternatives would otherwise be available (KOnig 1990, Hepple 1990, Hendriks 1993).",
        "However, while this removes spurious ambiguity as a problem arising from independence of inferences, it signally fails to exploit the fact that such inferences can be parallelised.",
        "Thus we prefer the term 'derivational equivalence' to 'spurious ambiguity' and interpret the phenomenon not as a problem for sequentialisation, but as an opportunity for parallelism.",
        "This opportunity is grasped in proof-nets."
      ]
    },
    {
      "heading": "4 Lambek proof-nets",
      "text": [
        "Proof-nets for L were developed by Roorda (1991), adapting their original introduction for linear logic in Girard (1987).",
        "In proof-nets, the opposition of formulas arising from their location in either the antecedent or the succedent of sequents is replaced by assignment of polarity: input (negative) for antecedent and output (positive) for succedent.",
        "A proof-net is a kind of graph of polar formulas.",
        "First we define a more general concept of proof structure.",
        "These are graphs assembled out of the following links:",
        "and ii-links: two premises, one conclusion In the id and Cut links X and X schematise over occurrences of the same category with opposite polarity.",
        "Note that the nodes of links are also marked (implicitly) as being either conclusions (looking down) or premises (looking up).",
        "In the i and ii-links the middle nodes are the conclusions and the outer nodes the premises.",
        "The i-links correspond to unary sequent rules and the ii-links to binary sequent rules.",
        "Observe that in the output, but not in the input, unfoldings the order of subformulas is switched between premises and conclusion; this is essential to the characterization of ordering by graph planarity.",
        "Proof structures are assembled by identifying nodes of the same polar category which are the premises and conclusions of different components; premises and conclusions not fused in this way are the premises and conclusions of",
        "the proof structure as a whole.",
        "For example, in (16a) four links are assembled into a proof structure (16b) with no premises and two conclusions, Nand S/(N\\S)+: (16)a.",
        "The structure in (18) is not a module because it contains the circularity indicated: it corresponds to the lowering (7), which is invalid.",
        "In the processing as presented so far semantic evaluation is, as is usual, normalisation of the result of substituting lexical semantics into derivational semantics.",
        "Logicallyspeaking,this substitution at the lexico-syntac tic interface is a Cut, and the normalisation is a process of Cut elimination.",
        "Currently the substitution and Cut elimination is executed after the proof search.",
        "However, if lexical semantics is represented as a proof-net, one can calculate off-line the module resulting from connecting the lexical semantics with a Cut to the module resulting from the unfolding of the lexical categories.'",
        "Lexical semantics expressed as a linear (=single bind) lambda term is unfolded into an (unordered) proof-net by the algorithm (26): (26)a.",
        "Start with the X-term c at a + node: c+."
      ]
    }
  ]
}
