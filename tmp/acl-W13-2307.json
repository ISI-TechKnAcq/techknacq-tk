{
  "info": {
    "authors": [
      "Nathan Schneider",
      "Brendan Oâ€™Connor",
      "Naomi Saphra",
      "David Bamman",
      "Manaal Faruqui",
      "Noah A. Smith",
      "Chris Dyer",
      "Jason Baldridge"
    ],
    "book": "Linguistic Annotation Workshop",
    "id": "acl-W13-2307",
    "title": "A Framework for (Under)specifying Dependency Syntax without Overloading Annotators",
    "url": "https://aclweb.org/anthology/W13-2307",
    "year": 2013
  },
  "references": [
    "acl-D07-1014",
    "acl-D08-1027",
    "acl-J93-2004",
    "acl-N06-1019",
    "acl-N13-1039",
    "acl-P06-2066",
    "acl-P99-1010",
    "acl-W12-1706",
    "acl-W13-2307"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We introduce a framework for lightweight dependency syntax annotation.",
        "Our formalism builds upon the typical representation for unlabeled dependencies, permitting a simple notation and annotation workflow.",
        "Moreover, the formalism encourages annotators to underspecify parts of the syntax if doing so would streamline the annotation process.",
        "We demonstrate the efficacy of this annotation on three languages and develop algorithms to evaluate and compare underspecified annotations."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Computational representations for natural language syntax are borne of competing design considerations.",
        "When designing such representations, there may be a tradeoff between parsimony and expressiveness.",
        "A range of linguistic theories attract support due to differing purposes and aesthetic principles (Chomsky, 1957; Tesni?re, 1959; Hudson, 1984; Sgall et al., 1986; Mel?c?uk, 1988, inter alia).",
        "Formalisms concerned with tractable computation may care chiefly about learnabil-ity or parsing efficiency (Shieber, 1992; Sleator and Temperly, 1993; Kuhlmann and Nivre, 2006).",
        "Further considerations may include psychological and evolutionary plausibility (Croft, 2001; Tomasello, 2003; Steels et al., 2011; Fossum and Levy, 2012), integration with other representations such as semantics (Steedman, 2000; Bergen and Chang, 2005), or suitability for particular applications (e.g., translation).",
        "Here we elevate ease of annotation as a primary design concern for a syntactic annotation formalism.",
        "Currently, a lack of annotated data is a huge bottleneck for robust NLP, standing in the way of parsers for social media text (Foster et al., 2011) and many low-resourced languages (to name two examples).",
        "Traditional syntactic annotation projects like the Penn Treebank (Marcus ?Corresponding author: nschneid@cs.cmu.edu et al., 1993) or Prague Dependency Treebank (Ha-jic?, 1998) require highly trained annotators and huge amounts of effort.",
        "Lowering the cost of annotation, by making it easier and more accessible, could greatly facilitate robust NLP in new languages and genres.",
        "To that end, we design and test new, lightweight methodologies for syntactic annotation.",
        "We propose a formalism, Fragmentary Unlabeled Dependency Grammar (FUDG) for unlabeled dependency syntax that addresses some of the most glaring deficiencies of basic unlabeled dependencies (?2), with little added burden on annotators.",
        "FUDG requires minimal theoretical commitments, and can be supplemented with a project-specific style guide (we provide a brief one for English).",
        "We contribute a simple ASCII markup language?",
        "Graph Fragment Language (GFL; ?3)?that allows annotations to be authored using any text editor, along with tools for validating, normalizing, and visualizing GFL annotations.1 An important characteristic of our framework is annotator flexibility.",
        "The formalism supports this by allowing underspecification of structural portions that are unclear or unnecessary for the purposes of a project.",
        "Fully leveraging this power requires new algorithms for evaluation, e.g., of inter-annotator agreement, where annotations are partial; such algorithms are presented in ?4.2 Finally, small-scale case studies (?5) apply our framework (formalism, notation, and evaluations) to syntactically annotate web text in English, news in Malagasy, and dialogues in Kinyarwanda."
      ]
    },
    {
      "heading": "2 A Dependency Grammar for Annotation",
      "text": [
        "Although dependency-based approaches to syntax play a major role in computational linguistics, the nature of dependency representations is far from uniform.",
        "Exemplifying one end of the spectrum is the Prague Dependency Treebank, which articulates an elaborate dependency-based syntactic the",
        "Found the scarriest mystery door in my school .",
        "I?M SO CURIOUS D: Found** < (the scarriest mystery door*)",
        "thers still like 1 1/2 hours till Biebs bday here :P thers** < still thers < ((1 1/2) > hours < till < (Biebs > bday)) (thers like 1 1/2 hours)",
        "ory in a rich, multi-tiered formalism (Hajic?, 1998; B?hmov?",
        "et al, 2003).",
        "On the opposite end of the spectrum are the structures used in dependency parsing research which organize all the tokens of a sentence into a tree, sometimes with category labels on the edges (K?bler et al., 2009).",
        "Insofar as they reflect a theory of syntax, these vanilla dependency grammars provide a highly reductionist view of structure?indeed, parses used to train and evaluate dependency parses are often simplifications of Prague-style parses, or else converted from constituent treebanks.",
        "In addition to the binary dependency links of vanilla dependency representations, we offer three devices to capture certain linguistic phenomena more straightforwardly:3 1.",
        "We make explicit the meaningful lexical units over which syntactic structure is represented.",
        "Our approach (a) allows punctuation and other extraneous tokens to be excluded so as not to distract from the essential structure; and (b) permits tokens to be grouped into shallow multiword lexical units.4 2.",
        "Coordination is problematic to represent with unlabeled dependencies due to its non-binary nature.",
        "A coordinating conjunction typically joins multiple expressions (conjuncts) with equal status, and other expressions may relate to the compound structure as a unit.",
        "There are several different conventions for forcing coordinate structures into a head-modifier straightjacket (Nivre, 2005; de Marneffe and Manning, 2008; Marec?ek et al., 2013).",
        "Conjuncts, coordinators, and shared de-pendents can be distinguished with edge labels; we equivalently use a special notation, permitting the coordinate structure to be automatically transformed with any of the existing conventions.5",
        "multiword expressions (de Marneffe and Manning, 2008).",
        "For simplicity, our formalism treats multiwords as unana-lyzed (syntactically opaque) wholes, though some multiword expressions may have syntactic descriptions (Baldwin and Kim, 2010).",
        "5Tesni?re (1959) and Hudson (1984) similarly use special structures for coordination (Schneider, 1998; 3.",
        "Following Tesni?re (1959), our formalism offers a simple facility to express anaphora-antecedent relations (a subset of semantic relationships) that are salient in particular syntactic phenomena such as relative clauses, appositives, and wh-expressions.",
        "Underspecification.",
        "Our desire to facilitate lightweight annotation scenarios requires us to abandon the expectation that syntactic informants provide a complete parse for every sentence.",
        "On one hand, an annotator may be uncertain about the appropriate parse due to lack of expertise, insufficiently mature annotation conventions, or actual ambiguity in the sentence.",
        "On the other hand, annotators may be indifferent to certain phenomena.",
        "This can happen for a variety of reasons: ?",
        "Some projects may only need annotations of specific constructions.",
        "For example, building a semantic resource for events may require annotation of syntactic verb-argument relations, but not internal noun phrase structure.",
        "?",
        "As a project matures, it may be more useful to annotate only infrequent lexical items.",
        "?",
        "Semisupervised learning from partial annotations may be sufficient to learn complete parsers (Hwa, 1999; Clark and Curran, 2006).",
        "?",
        "Beginning annotators may wish to focus on easily understood syntactic phenomena.",
        "?",
        "Different members of a project may wish to specialize in different syntactic phenomena, reducing training cost and cognitive load.",
        "Rather than treating annotations as invalid unless and until they are complete trees, we formally represent and reason about partial parse structures.",
        "Annotators produce annotations, which encode constraints on the (inferred) analysis, the parse structure, of a sentence.",
        "We say that a valid annotation supports (is compatible with) one or more analyses.",
        "Both annotations and analyses are represented as graphs (the graph representation is described below in ?3.2).",
        "We require that the directed edges in an analysis graph must form a tree over all the lexical items in the sentence.6 Less Sangati and Mazza, 2009).",
        "stringent well-formedness constraints on the annotation graph leave room for underspecification.",
        "Briefly, an annotation can be underspecified in two ways: (a) an expression may not be attached to any parent, indicating it might depend on any non-descendant in a full analysis?this is useful for annotating sentences piece by piece; and (b) multiple expressions may be grouped together in a fudge expression (?3.3), a constraint that the elements form a connected subgraph in the full analysis while leaving the precise nature of that subgraph indeterminate?this is useful for marking relationships between chunks (possibly constituents).",
        "A formalism, not a theory.",
        "Our framework for dependency grammar annotation is a syntactic formalism, but it is not sufficiently comprehensive to constitute a theory of syntax.",
        "Though it standardizes the basic treatment of a few basic phenomena, simplicity of the formalism requires us to be conservative about making such extensions.",
        "Therefore, just as with simpler formalisms, language-and project-specific conventions will have to be developed for specific linguistic phenomena.",
        "By embracing underspecified annotation, however, our formalism aims to encourage efficient corpus coverage in a nascent annotation project, without forcing annotators to make premature decisions."
      ]
    },
    {
      "heading": "3 Syntactic Formalism and GFL",
      "text": [
        "In our framework, a syntactic annotation of a sentence follows an extended dependency formalism based on the desiderata enumerated in the previous section.",
        "We call our formalism Fragmentary Unlabeled Dependency Grammar (FUDG).",
        "To make it simple to create FUDG annotations with a text editor, we provide a plain-text dependency notation called Graph Fragment Language (GFL).",
        "Fragments of the FUDG graph?",
        "nodes and dependencies linking them?are encoded in this language; taken together, these fragments describe the annotation in its entirety.",
        "The ordering of GFL fragments, and of tokens within each fragment, is of no formal consequence.",
        "Since the underlying FUDG representation is transparently related to GFL constructions, GFL notation will be introduced alongside the discussion of each kind of FUDG node.7 structures, we find that being able to alert annotators when they inadvertently violate the tree constraint is more useful than the expressive flexibility."
      ]
    },
    {
      "heading": "3.1 Tokens",
      "text": [
        "We expect a tokenized string, such as a sentence or short message.",
        "The provided tokenization is respected in the annotation.",
        "For human readability, GFL fragments refer to tokens as strings (rather than offsets), so all tokens that participate in an annotation must be unambiguous in the input.8 A token may be referenced multiple times in the annotation."
      ]
    },
    {
      "heading": "3.2 Graph Encoding",
      "text": [
        "Directed arcs.",
        "As in other dependency formalisms, dependency arcs are directed links indicating the syntactic headedness relationship between pairs of nodes.",
        "In GFL, directed arcs are indicated with angle brackets pointing from the dependent to its head, as in black > cat or (equivalently) cat < black.",
        "Multiple arcs can be chained together: the > cat < black < jet describes three arcs.",
        "Parentheses help group portions of a chain: (the > cat < black < jet) > likes < fish (the structure black < jet > likes, in which jet appears to have two heads, is disallowed).",
        "Note that another encoding for this structure would be to place the contents of the parentheses and the chain cat > likes < fish on separate lines.",
        "Curly braces can be used to list multiple dependents of the same head: {cat fish} > likes.",
        "Anaphoric links.",
        "These undirected links join coreferent anaphora to each other and to their antecedent(s).",
        "In English this includes personal pronouns, relative pronouns (who, which, that), and anaphoric do and so (Leo loves Ulla and so does Max).",
        "This introduces a bit of semantics into our annotation, though at present we do not attempt to mark non-anaphoric coreference.",
        "It also allows a more satisfying treatment of appositives and relative clauses than would be possible from just the directed tree (the third example in figures 2 and 3).",
        "Lexical nodes.",
        "Whereas in vanilla dependency grammar syntactic links are between pairs of token nodes, FUDG abstracts away from the individual tokens in the input.",
        "The lowest level of a FUDG annotation consists of lexical nodes, i.e., an alternative mechanism such as a GUI, as in Hajic?",
        "et al (2001).",
        "8If a word is repeated within the sentence, it must be indexed in the input string in order to be referred to from a fragment.",
        "In our notation, successive instances of the same word are suffixed with ~1, ~2, ~3, etc.",
        "Punctuation and other tokens omitted from an annotation do not need to be indexed.",
        "lexical item occurrences.",
        "Every token node maps to 0 or 1 lexical nodes (punctuation, for instance, can be ignored).",
        "A multiword is a lexical node incorporating more than one input token and is atomic (does not contain internal structure).",
        "A multiword node may group any subset of input tokens; this allows for multiword expressions which are not necessarily contiguous in the sentence (e.g., the verb-particle construction make up in make the story up).",
        "GFL notates multiwords with square brackets, e.g., [break a leg].",
        "Coordination nodes.",
        "Coordinate structures require at least two kinds of dependents: coordinators (i.e., lexical nodes for coordinating conjunctions?at least one per coordination node) and conjuncts (heads of the conjoined subgraphs?at least one per coordination node).",
        "The GFL annotation has three parts: a variable representing the node, a set of conjuncts, and a set of coordinator nodes.",
        "For instance, $a :: {[peanut butter] honey} :: {and} (peanut butter and honey) can be embedded within a phrase via the coordination node variable $a; a [fresh [[peanut butter] and honey] sandwich] snack would be formed with {fresh $a} > sandwich > snack < a.",
        "A graphical example of coordination can be seen in figure 2?",
        "note the bolded conjunct edges and the dotted coordinator edges.",
        "If the conjoined phrase as a whole takes modifiers, these are attached to the coordination node with regular directed arcs.",
        "For example, in Sam really adores kittens and abhors puppies., the shared subject Sam and adverb really attach to the entire conjoined phrase.",
        "In GFL: $a :: {adores abhors} :: {and} Sam > $a < really adores < kittens abhors < puppies Root node.",
        "This is a special top-level node used to indicate that a graph fragment constitutes a standalone utterance or a discourse connective.",
        "For an input with multiple utterances, the head of each should be designated with ** to indicate that it attaches to the root."
      ]
    },
    {
      "heading": "3.3 Means of Underspecification",
      "text": [
        "As discussed in ?2, our framework distinguishes annotations from full syntactic analyses.",
        "With respect to dependency structure (directed edges), the former may underspecify the latter, allowing the annotator to commit only to a partial analysis.",
        "For an annotationA, we define support(A) to be the set of full analyses compatible with that annotation.",
        "A full analysis is required to be a directed rooted tree over all lexical nodes in the annotation.",
        "An annotation is valid if its support is non-empty.",
        "The 2 mechanisms for dependency underspecification are unattached nodes and fudge nodes.",
        "Unattached nodes.",
        "For any node in an annotation, the annotator is free to simply leave it not attached to any head.",
        "This is interpreted as allowing its head to be any other node (including the root node), subject to the tree constraint.",
        "We call a node's possible heads its supported parents.",
        "Formally, for an unattached node v in annotation A, suppParentsA(v) = nodes(A) \\ ({v} ?",
        "descendants(v)).",
        "Fudge nodes.",
        "Sometimes, however, it is desirable to represent a sort of skeletal structure without filling in all the details.",
        "A fudge expression (FE) asserts that a group of nodes (the expression's members) belong together in a connected subgraph, while leaving the internal structure of that subgraph unspecified.",
        "The notation",
        "for this is a list of two or more nodes within parentheses: an annotation for Few if any witches are friends with Maria.",
        "might contain the FE (Few if any) so as to be compatible with the structures Few < if < any, Few > if > any, etc.?",
        "but not, for instance, Few > witches < any.",
        "In the FUDG graph, this is represented with a fudge node to which members are attached by special member arcs.",
        "Fudge nodes may be linked to other nodes: the GFL fragment (Few if any) > witches is compatible with (Few < if < any) > witches, (Few < (if > any)) > witches, and so forth.",
        "Properties.",
        "Let f be a fudge expression.",
        "From the connected subgraph definition and the tree constraint on analyses, it follows that: ?",
        "Exactly 1 member of f must, in any compatible analysis, have a parent that is not a member of f. Call this node the top of the fudge expression, denoted f ?.",
        "f ?",
        "dominates all other members of f; it can be considered f's ?internal head.?",
        "?",
        "f does not necessarily form a full subtree.",
        "Any of its members may have dependents that are not themselves members of the fudge expression.",
        "(Such dependencies can be specified in additional GFL fragments.)",
        "Top designation.",
        "A single member of a fudge expression may optionally be designated as its top (internal head).",
        "This is specified with an asterisk: (Few* if any) > witches indicates that Few must attach to witches and also dominate both if and any.",
        "In the FUDG graph, this is represented with a special top arc as depicted in bold in figure 4.",
        "Nesting.",
        "One fudge expression may nest within another, e.g. (Few (if any)) > witches; the word analyzed as attaching to witches might be Few or whichever of (if any) heads the other.",
        "A nested fudge expression can be designated as top: (Vanishingly few (if any)*).",
        "Modifiers.",
        "An arc attaching a node to a fudge expression as a whole asserts that the external node should modify the top of the fudge expression (whether or not that top is designated in the annotation).",
        "For instance, two of the interpretations of British left waffles on Falklands would be preserved by specifying British > left and (left waffles) < on < Falklands.",
        "Analyses British > left < waffles < on < Falklands and (British > left < on < Falklands) > waffles would be excluded because the preposition does not attach to the head of (left waffles).10 Multiple membership.",
        "A node may be a member of multiple fudge expressions, or a member of an FE while attached to some other node via an explicit arc.",
        "Each connected component of the FUDG graph is therefore a polytree (not necessarily a tree).",
        "The annotation graph minus all member edges of fudge nodes and all (undirected) anaphoric links must be a directed tree or forest.",
        "Enumerating supported parents.",
        "Fudge expressions complicate the procedure for listing a node's supported parents (see above).",
        "Consider an FE f having some member v. v might be the top of f (unless some other node is so designated), in which case anything the fudge node can attach to is a potential parent of v. If some node other than v might be the top of f, then v's head could be any member of f. Below (?4.1) we develop an algorithm for enumerating supported parents for any annotation graph node."
      ]
    },
    {
      "heading": "4 Annotation Evaluation Measures",
      "text": [
        "For an annotation task which allows for a great deal of latitude?as in our case, where a syntactic annotation may be full or partial?quantitative evaluation of data quality becomes a challenge.",
        "In the context of our formalism, we propose measures that address: ?",
        "Annotation efficiency, quantified in terms of annotator productivity (tokens per hour).",
        "?",
        "The amount of information in an underspecified annotation.",
        "Intuitively, an annotation that flirts with many full analyses conveys less syntactic information than one which supports few analyses.",
        "We define an annotation's promiscuity to be the number of full analyses it supports, and develop an algorithm to compute it (?4.1).",
        "10Not all attachment ambiguities can be precisely encoded in FUDG.",
        "For instance, there is no way to forbid an attachment to a word that lies along the path between the possible heads.",
        "The best that can be done given a sentence like They conspired to defenestrate themselves on Tuesday.",
        "is They > conspired < to < defenestrate < themselves and (conspired* to defenestrate (on < Tuesday)).",
        "?",
        "Inter-annotator agreement between two partial annotations.",
        "Our measures for dependency structure agreement (?4.2) incorporate the notion of promiscuity.",
        "We test these evaluations on our pilot annotation data in the case studies (?5)."
      ]
    },
    {
      "heading": "4.1 Promiscuity vs. Commitment",
      "text": [
        "Given a FUDG annotation of a sentence, we quantify the extent to which it underspecifies the full structure by counting the number of analyses that are compatible with the constraints in the annotation.",
        "We call this number the promiscuity of the annotation.",
        "Each analysis tree is rooted with the root node and must span all lexical nodes.11 A naive algorithm for computing promiscuity would be to enumerate all directed spanning trees over the lexical nodes, and then check each of them for compatibility with the annotation.",
        "But this quickly becomes intractable: for n nodes, one of which is designated as the root, there are nn?2 spanning trees.",
        "However, we can filter out edges that are known to be incompatible with the annotation before searching for spanning trees.",
        "Our ?upward-downward?",
        "method for constructing a graph of supported edges first enumerates a set of candidate top nodes for every fudge expression, then uses that information to infer a set of supported parents for every node.12 The supported edge graph then consists of vertices lexnodes(A) ?",
        "{root} and edges ?",
        "v?lexnodes(A) {(v?",
        "v?)",
        "?",
        "v?",
        "?",
        "suppParentsA(v)}.",
        "From this graph we can count all directed spanning trees in cubic time using Kirchhoff's matrix tree theorem (Chaiken and Kleitman, 1978; Smith and Smith, 2007; Margoliash, 2010).13 If some lexical node has no supported parents, this reflects conflicting constraints in the annotation, and no spanning tree will be found.",
        "Promiscuity will tend to be higher for longer sentences.",
        "To control for this, we define a second quantity, the annotation's commitment quotient (commitment being the opposite of promiscuity), 11This measure assumes a fixed lexical analysis (set of lexical nodes) and does not consider anaphoric links.",
        "Coordinate structures are simplified into ordinary dependencies, with coordinate phrases headed by the coordinator's lexical node.",
        "If a coordination node has multiple coordinators, one is arbitrarily chosen as the head and the others as its dependents.",
        "12Python code for these algorithms appears in Schneider et al. (2013) and the accompanying software release.",
        "13Due to a technicality with non-member attachments to fudge nodes, for some annotations this is only an upper bound on promiscuity; see Schneider et al. (2013).",
        "which normalizes for the number of possible spanning trees given the sentence length.",
        "The commitment quotient for an annotation of a sentence with n?1 lexical nodes and one root node is given by:",
        "(the logs are to attenuate the dominance of the exponential term).",
        "This will be 1 if only a single tree is supported by the annotation, and 0 if the annotation does not constrain the structure at all.",
        "(If the constraints in the annotation are internally inconsistent, then promiscuity will be 0 and commitment undefined.)",
        "In practice, there is a tradeoff between efficiency and commitment: more detailed annotations require more time.",
        "The value of minimizing promiscuity will therefore depend on the resources and goals of the annotation project."
      ]
    },
    {
      "heading": "4.2 Inter-Annotator Agreement",
      "text": [
        "FUDG can encode flat groupings and coreference at the lexical level, as well as syntactic structure over lexical items.",
        "Inter-annotator agreement can be measured separately for each of these facets.",
        "Pilot annotator feedback indicated that our initial lexical-level guidelines were inadequate, so we focus here on measuring structural agreement pending further clarification of the lexical conventions.",
        "Attachment accuracy, a standard measure for evaluating dependency parsers, cannot be computed between two FUDG annotations if either of them underspecifies any part of the dependency structure.",
        "One solution is to consider the intersection of supported full trees, in the spirit of our promiscuity measure.",
        "For annotations A1 and A2 of sentence s, one annotation's supported analyses can be enumerated and then filtered subject to the constraints of the other annotation.",
        "The tradeoff between inter-annotator compatibility and commitment can be accounted for by taking their product, i.e. comPrec(A1 |A2) =",
        "A limitation of this support-intersection approach is that if the two annotations are not compatible, the intersection will be empty.",
        "A more fine-grained approach is to decompose the comparison by lexical node: we generalize attachment accuracy with softComPrec(A1 |",
        "ing com(?)",
        "and suppParents(?)",
        "as in the previous section.",
        "As lexical nodes may differ between the two annotations, a reconciliation step is required",
        "All annotators were native speakers of English.",
        "to compare the structures: multiwords proposed in only one of the two annotations are converted to fudge expressions.",
        "Tokens annotated by neither annotator are ignored.",
        "Like with the promiscuity measure, we simplify coordinate structures to ordinary dependencies (see footnote 11)."
      ]
    },
    {
      "heading": "5 Case Studies",
      "text": []
    },
    {
      "heading": "5.1 Annotation Time",
      "text": [
        "To estimate annotation efficiency, we performed a pilot annotation project consisting of annotating several hundred English tweets, about 1,000 sentences in Malagasy, and a further 1,000 sentences in Kinyarwanda.14 Table 1 summarizes the number of tokens annotated and the effort required.",
        "For the two Twitter cases, the same annotator was first permitted to do partial annotation of 100 tweets, and then spend the same amount of time doing a complete annotation of all tokens.",
        "Although this is a very small study, the results clearly suggest she was able to make much more rapid progress when partial annotation was an option.15 This pilot study helped us to identify linguistic phenomena warranting specific conventions: these include wh-expressions, comparatives, vocatives, discourse connectives, null copula constructions, and many others.",
        "We documented these cases in a 20-page style guide for English,16 which informed the subsequent pilot studies discussed below."
      ]
    },
    {
      "heading": "5.2 Underspecification and Agreement",
      "text": [
        "We annotated 2 small English data samples in order to study annotators?",
        "use of underspecification.",
        "The first is drawn from Owoputi et al's 2013 Twitter part-of-speech corpus; the second is from the Reviews portion of the English Web Treebank 14Malagasy is a VOS Austronesian language spoken by 15 million people, mostly in Madagascar.",
        "Kinyarwanda is an SVO Bantu language spoken by 12 million people mostly in Rwanda.",
        "All annotations were done by native speakers of English.",
        "The Kinyarwanda and Malagasy annotators had basic proficiency in these languages.",
        "15As a point of comparison, during the Penn Treebank project, annotators corrected the syntactic bracketings produced by a high-quality handwritten parser (Fidditch) and achieved a rate of only 375 tokens/hour using a specialized GUI interface (Marcus et al., 1993).",
        "16Included with the data and software release (footnote 1).",
        "Omit.",
        "prom Hist.",
        "Mean",
        "annotator ?D?",
        "specialized in noun phrase?internal structure, while annotator ?C?",
        "specialized in verb phrase/clausal phenomena; C ?",
        "D denotes the combination of their annotation fragments.",
        "?T?",
        "denotes our dependency conversion of the English Web Treebank parses.",
        "(The value 1.00 was rounded up from .9994.)",
        "(EWTB) (Bies et al., 2012).",
        "(Our annotators only saw the tokenized text.)",
        "Both datasets are informal and conversational in nature, and are dominated by short messages/sentences.",
        "In spite of their brevity, many of the items were deemed to contain multiple ?utterances,?",
        "which we define to include discourse connectives and emoticons (at best marginal parts of the syntax); utterance heads are marked with ** in figure 1.",
        "Table 2 indicates the sizes of the two data samples, and gives statistics over the output of each annotator: total counts of single-word and multiword lexical nodes, tokens not represented by any lexical node, and fudge nodes; as well as a histogram of promiscuity counts and the average of commitment quotients (see ?4.1).",
        "For instance, the two sets of annotations obtained for the Tweets sample used underspecification in 17/60 and 23/60 tweets, respectively, though the promiscuity rarely exceeded 100 compatible trees per annotation.",
        "Examples can be seen in figure 1, where annotator ?A?",
        "marked only the noun phrase head for the scarriest mystery door, opted not to choose a head within the quantity 1 1/2, and left ambiguous the attachment of the hedge like.",
        "The strong but not utter commitment to the dependency structure is reflected in the mean commitment quotients for this dataset, both of which exceed 0.95.",
        "Inter-annotator agreement (IAA) is quantified in table 3.",
        "The row marked A ?",
        "B, for instance, considers the agreement between annotator ?A?",
        "and annotator ?B?.",
        "Measuring IAA on the dependency structure requires a common set of lexical nodes, so a lexical reconciliation step ensures that (a) any token used by either annotation is present in both, and (b) no multiword node is present in only one annotation?solved by relaxing incompatible multiwords to FEs (which increases promiscuity).",
        "For Tweets, lexical reconciliation",
        "thus reduces the commitment averages for each annotation'to a greater extent for annotator ?A?",
        "(.96 in table 2 vs. .82 in table 3) because ?A?",
        "marked more multiwords.",
        "An analysis fully compatible with both annotations exists for only 27/60 sentences; the finer-grained softComPrec measure (?4.2), however, offers insight into the balance between commitment and agreement.",
        "Qualitatively, we observe three leading causes of incompatibilities (disagreements): obvious annotator mistakes (such as the marked as a head); inconsistent handling of verbal auxiliaries; and uncertainty whether to attach expressions to a verb or the root node, as with here in figure 1.17 Annotators noticed occasional ambiguous cases and attempted to encode the ambiguity with fudge expressions: again in the tweet maybe put it off until you feel like ~ talking again ?",
        "is one example.",
        "More often, fudge expressions proved useful for syntactically difficult constructions, such as those shown in figure 1 as well as: 2 shy of breaking it, asked what tribe I was from, a $ 13 / day charge, you two, and the most awkward thing ever."
      ]
    },
    {
      "heading": "5.3 Annotator Specialization",
      "text": [
        "As an experiment in using underspecification for labor division, two of the annotators of Reviews data were assigned specific linguistic phenomena to focus on.",
        "Annotator ?D?",
        "was tasked with the internal structure of base noun phrases, including resolving the antecedents of personal pronouns.",
        "?C?",
        "was asked to mark the remaining phenomena?",
        "i.e., utterance/clause/verb phrase structure?but to mark base noun phrases as fudge expressions, leaving their internal structure unspecified.",
        "Both annotators provided a full lexical analysis.",
        "For comparison, a third individual, ?A,?",
        "annotated the same data in full.",
        "The three annotators worked completely independently.",
        "Of the results in tables 2 and 3, the most notable difference between full and specialized annotation is that the combination of independent specialized annotations (C ?",
        "D) produces somewhat higher promiscuity/lower commitment.",
        "This is unsurprising because annotators sometimes overlook relationships that fall under their specialty.18 Still, annotators reported that specialization made the task 17Another example: Some uses of conjunctions like and and so can be interpreted as either phrasal coordinators or discourse connectives (cf.",
        "The PDTB Research Group, 2007).",
        "18A more practical and less error-prone approach might be for specialists to work sequentially or collaboratively (rather than independently) on each sentence.",
        "labels are as in table 2.",
        "Per-annotator com (with lexical reconciliation) and inter-annotator softComPrec are aggregated over sentences by arithmetic mean.",
        "less burdensome, and the specialized annotations did prove complementary to each other.19"
      ]
    },
    {
      "heading": "5.4 Treebank Comparison",
      "text": [
        "Though the annotators in our study were native speakers well acquainted with representations of English syntax, we sought to quantify their agreement with the expert treebankers who created the EWTB (the source of the Reviews sentences).",
        "We converted the EWTB's constituent parses to dependencies via the PennConverter tool (Johansson and Nugues, 2007),20 then removed punctuation.",
        "Agreement with the converted treebank parses appears in the bottom two rows of table 3.",
        "Because the EWTB commits to a single analysis, precision scores are quite lopsided.",
        "Most of its attachments are consistent with our annotations (softComPrec > 0.9), but these allow many additional analyses (hence the scores below 0.5)."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "We have presented a framework for simple dependency annotation that overcomes some of the representational limitations of unlabeled dependency grammar and embraces the practical realities of resource-building efforts.",
        "Pilot studies (in multiple languages and domains, supported by a human-readable notation and a suite of open-source tools) showed this approach lends itself to rapid annotation with minimal training.",
        "The next step will be to develop algorithms exploiting these representations for learning parsers.",
        "Other future extensions might include additional expressive mechanisms (e.g., multi-headedness, labels), crowdsourcing of FUDG annotations (Snow et al., 2008), or even a semantic counterpart to the syntactic representation.",
        "19In fact, for only 2 sentences did ?C?",
        "and ?D?",
        "have incompatible annotations, and both were due to simple mistakes that were then fixed in the combination.",
        "20We ran PennConverter with options chosen to emulate our annotation conventions; see Schneider et al. (2013)."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "We thank Lukas Biewald, Yoav Goldberg, Kyle Jerro, Vi-jay John, Lori Levin, Andr?",
        "Martins, and several anonymous reviewers for their insights.",
        "This research was supported in part by the U. S. Army Research Laboratory and the U. S. Army Research Office under contract/grant number W911NF-10-1-0533 and by NSF grant IIS-1054319."
      ]
    }
  ]
}
