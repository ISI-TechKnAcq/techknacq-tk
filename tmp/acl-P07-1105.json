{
  "info": {
    "authors": [
      "Smaranda Muresan",
      "Owen Rambow"
    ],
    "book": "45th Annual Meeting of the Association of Computational Linguistics",
    "id": "acl-P07-1105",
    "title": "Grammar Approximation by Representative Sublanguage: A New Model for Language Learning",
    "url": "https://aclweb.org/anthology/P07-1105",
    "year": 2007
  },
  "references": [
    "acl-C04-1180",
    "acl-P06-1111",
    "acl-P99-1013",
    "acl-W05-0602"
  ],
  "sections": [
    {
      "text": [
        "We propose a new language learning model that learns a syntactic-semantic grammar from a small number of natural language strings annotated with their semantics, along with basic assumptions about natural language syntax.",
        "We show that the search space for grammar induction is a complete grammar lattice, which guarantees the uniqueness of the learned grammar."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "There is considerable interest in learning computational grammars.",
        "While much attention has focused on learning syntactic grammars either in a supervised or unsupervised manner, recently there is a growing interest toward learning grammars/parsers that capture semantics as well (Bos et al., 2004; Zettlemoyer and Collins, 2005; Ge and Mooney, 2005).",
        "Learning both syntax and semantics is arguably more difficult than learning syntax alone.",
        "In formal grammar learning theory it has been shown that learning from \"good examples,\" or representative examples, is more powerful than learning from all the examples (Freivalds et al., 1993).",
        "Haghighi and Klein (2006) show that using a handful of \"proto-",
        "'This research was supported by the National Science Foundation under Digital Library Initiative Phase II Grant Number IIS-98-17434 (Judith Klavans and Kathleen McKeown, PIs).",
        "We would like to thank Judith Klavans for her contributions over the course of this research, Kathy McKeown for her input, and several anonymous reviewers for very useful feedback on earlier drafts ofthis paper.",
        "types\" significantly improves over a fully unsupervised PCFG induction model (their prototypes were formed by sequences of POS tags; for example, prototypical NPs were DT NN, JJ NN).",
        "In this paper, we present a new grammar formalism and a new learning method which together address the problem of learning a syntactic-semantic grammar in the presence of a representative sample of strings annotated with their semantics, along with minimal assumptions about syntax (such as syntactic categories).",
        "The semantic representation is an ontology-based semantic representation.",
        "The annotation of the representative examples does not include the entire derivation, unlike most of the existing syntactic treebanks.",
        "The aim of the paper is to present the formal aspects of our grammar induction model.",
        "In Section 2, we present a new grammar formalism, called Lexicalized Well-Founded Grammars, a type of constraint-based grammars that combine syntax and semantics.",
        "We then turn to the two main results of this paper.",
        "In Section 3 we show that our grammars can always be learned from a set of positive representative examples (with no negative examples), and the search space for grammar induction is a complete grammar lattice, which guarantees the uniqueness of the learned grammar.",
        "In Section 4, we propose a new computationally efficient model for grammar induction from pairs of utterances and their semantic representations, called Grammar Approximation by Representative Sublanguage (GARS).",
        "Section 5 discusses the practical use of our model and Section 6 states our conclusions and future work.",
        "I.",
        "Elementary Semantic Molecules cat adj head Xtmod isa = damage II.",
        "Derived Semantic Molecule (major damage) = nr sg head X",
        "#o«io(6) returns Xi=MAJOR, X=DAMAGE, K=DEGREE from ontology"
      ]
    },
    {
      "heading": "2. Lexicalized Weil-Founded Grammars",
      "text": [
        "Lexicalized Well-Founded Grammars (LWFGs) are a type of Definite Clause Grammars (Pereira and Warren, 1980) where: (1) the Context-Free Grammar backbone is extended by introducing a partial ordering relation among nonterminals (well-founded) 2) each string is associated with a syntactic-semantic representation called semantic molecule; 3) grammar rules have two types of constraints: one for semantic composition and one for ontology-based semantic interpretation.",
        "The partial ordering among nonterminals allows the ordering of the grammar rules, and thus facilitates the bottom-up induction of these grammars.",
        "The semantic molecule is a syntactic-semantic representation of natural language strings where h (head) encodes the information required for semantic composition, and 6 (body) is the actual semantic representation of the string.",
        "Figure 1 shows examples of semantic molecules for an adjective, a noun and a noun phrase.",
        "The representations associated with the lexical items are called elementary semantic molecules (I), while the representations built by the combination of others are called derived semantic molecules (II).",
        "The head of the semantic molecule is a flat feature structure, having at least two attributes encoding the syntactic category of the associated string, cat, and the head of the string, head.",
        "The set of attributes is finite and known a priori for each syntactic category.",
        "The body of the semantic molecule is a flat, ontology-based semantic representation.",
        "It is a logical form, built as a conjunction of atomic predicates , where variables are either concept or slot identifiers in an ontology.",
        "For example, the adjective major is represented as , which says that the meaning of an adjective is a concept ( ), which is a value of a property of another concept ( ) in the ontology.",
        "The grammar nonterminals are augmented with pairs of strings and their semantic molecules.",
        "These pairs are called syntagmas, and are denoted by",
        ".",
        "There are two types of constraints at the grammar rule level – one for semantic composition (defines how the meaning of a natural language expression is composed from the meaning",
        "Figure 1: Examples of two elementary semantic molecules (I), a derived semantic molecule (II) obtained by combining them, and a constraint grammar rule together with the constraints , (III) of its parts) and one for ontology-based semantic interpretation.",
        "An example of a LWFG rule is given in Figure 1(III).",
        "The composition constraints applied to the heads ofthe semantic molecules, form a system of equations that is a simplified version of \"path equations\" (Shieber et al., 1983), because the heads are flat feature structures.",
        "These constraints are learned together with the grammar rules.",
        "The ontology-based constraints represent the validation on the ontology, and are applied to the body of the semantic molecule associated with the left-hand side nonterminal.",
        "They are not learned.",
        "Currently, is a predicate which can succeed or fail.",
        "When it succeeds, it instantiates the variables ofthe semantic representation with concepts/slots in the ontology.",
        "For example, given the phrase major damage, succeeds and returns (Xi=MAJOR, X=DAMAGE, y=DEGREE), while given the phrase major birth it fails.",
        "We leave the discussion of the ontology constraints for a future paper, since it is not needed for the main result of this paper.",
        "We give below the formal definition of Lexicalized Well-Founded Grammars, except that we do not define formally the constraints due to lack of space (see (Muresan, 2006) for details).",
        "Definition 1.",
        "A Lexicalized Well-Founded Grammar (LWFG) is a 6-tuple, G = (E,E',iVG,^ 1.",
        "X is a finite set of terminal symbols.",
        "2.",
        "E' is a finite set of elementary semantic molecules corresponding to the set of terminal symbols.",
        "3.",
        "Nq is a finite set of nonterminal symbols.",
        "4. y is a partial ordering relation among the nonterminals.",
        "5.",
        "Pq is a set of constraint rules.",
        "A constraint rule is written such that by , where .",
        "For the rules whose left-hand side are preterminals, , we use the notation",
        ".",
        "There are three types of rules: ordered non-recursive, ordered recursive, and non-ordered rules.",
        "A grammar rule ordered rule, if for all , we have .",
        "In LWFGs, each nonterminal symbol is a left-hand side in at least one ordered non-recursive rule and the empty string cannot be derived from any nonterminal symbol."
      ]
    },
    {
      "heading": "6.. is the start nonterminal symbol, and",
      "text": [
        "(we use the same notation for the reflexive, transitive closure of >;).",
        "The relation is a partial ordering only among nonterminals, and it should not be confused with information ordering derived from the flat feature structures.",
        "This relation makes the set of nonterminals well-founded, which allows the ordering of the grammar rules, as well as the ordering ofthe syntagmas generated by LWFGs.",
        "Definition 2.",
        "Given a LWFG, G, the ground syntagma derivation relation, is de-",
        "In LWFGs all syntagmas , derived from a nonterminal have the same category of their semantic molecules w'.",
        "The language of a grammar is the set of all syntagmas generated from the start symbol , i.e., .",
        "The set of all syntagmas generated by a grammar is",
        ".",
        "Given a LWFG we call a set a sublanguage of .",
        "Extending the notation, given a LWFG , the set of syntagmas generated by a rule is where denotes the ground derivation obtained using the rule in the last derivation step (we have bottom-up derivation).",
        "We will use the short notation , where is a grammar rule.",
        "Given a LWFG and a sublanguage (not necessarily of ) we denote by , the set of syntagmas generated by reduced to the sublanguage .",
        "Given a grammar rule , we call the set of syntagmas generated by reduced to the sublanguage .",
        "As we have previously mentioned, the partial ordering among grammar nonterminals allows the ordering of the syntagmas generated by the grammar, which allows us to define the representative examples of a LWFG.",
        "Representative Examples.",
        "Informally, the representative examples of a LWFG, , are the simplest syntagmas ground-derived by the grammar , i.e., for each grammar rule there exist a syntagma which is ground-derived from it in the minimum number of steps.",
        "Thus, the size of the representative example set is equal with the size of the set of grammar rules, .",
        "This set of representative examples is used by the grammar learning model to generate the candidate hypotheses.",
        "For generalization, a larger sublanguage is used, which we call representative sublanguage.",
        ".",
        "Adj Nl Giq > Det Noun Noun Adj Noun Det Noun",
        "Noun > Adj Noun Det Nl",
        "U {clear loud noise} U {the loud noise}",
        "Er={noise, loud noise, the noise} Ev=Er U {clear loud noise, the loud noise} Rule specialization steps Rule generalization steps",
        "Figure 2: Example of a simple grammar lattice.",
        "All grammars generate Er, and only T generates Ea (E is a common lexicon for all the grammars)"
      ]
    },
    {
      "heading": "3. A Grammar Lattice as a Search Space for Grammar Induction",
      "text": [
        "In this section we present a class of Lexicalized Well-Founded Grammars that form a complete lattice.",
        "This grammar lattice is the search space for our grammar induction model, which we present in Section 4.",
        "An example of a grammar lattice is given in Figure 2, where for simplicity, we only show the context-free backbone of the grammar rules, and only strings, not syntagmas.",
        "Intuitively, the grammars found lower in the lattice are more specialized than the ones higher in the lattice.",
        "For learning, Er is used to generate the most specific hypotheses (grammar rules), and thus all the grammars should be able to generate those examples.",
        "The sublanguage is used during generalization, thus only the most general grammar, , is able to generate the entire sublanguage.",
        "In other words, the generalization process is bounded by , that is why our model is called Grammar Approximation by Representative Sublanguage.",
        "There are two properties that LWFGs should have in order to form a complete lattice: 1) they should be unambiguous, and 2) they should preserve the parsing of the representative example set, We define these two properties in turn.",
        "Definition 3.",
        "A LWFG, G, is unambiguous w.r.t.",
        "a sublanguage if there is one and only one rule that derives .",
        "Since the unambiguity is relative to a set of syntagmas (pairs of strings and their semantic molecules) and not to a set of natural language strings, the requirement is compatible with modeling natural language.",
        "For example, an ambiguous string such as John saw the man with the telescope corresponds to two unambiguous syntagmas.",
        "In order to define the second property, we need to define the rule specialization step and the rule generalization step of unambiguous LWFGs, such that they are -parsing-preserving and are the inverse of each other.",
        "The property of -parsing-preserving means that both the initial and the specialized/generalized rules ground-derive the same syntagma, .",
        "Definition 4.",
        "The rule specialization step:",
        "is -parsing-preserving, if there exists = .",
        "We write .",
        "The rule generalization step :",
        "and and .",
        "We write",
        "Since is a representative example, it is derived in the minimum number ofderivation steps, and thus the rule is always an ordered, non-recursive rule.",
        "The goal of the rule specialization step is to obtain a new target grammar G' from G by modifying a rule of .",
        "Similarly, the goal of the rule generalization step is to obtain a new target grammar from by modifying a rule of .",
        "They are not to be taken as the derivation/reduction concepts in parsing.",
        "The specialization/generalization steps are the inverse of each other.",
        "From both the specialization and the generalization step we have that:",
        "La{fgen) 2 La(Tspec).",
        "In Figure 2, the specialization step r2 \\~ r'2 is -parsing-preserving, because the rule ground-derives the syntagma loud noise.",
        "If instead we would have a specialization step (",
        "), it would not be -parsing-preserving since the syntagma loud noise could no longer be ground-derived from the rule (which requires two adjectives).",
        "Definition 5.",
        "A grammar G' is one-step special ized from a grammar G, G h G', if 3r, ri € P(j",
        "Pg iff q € Pg\" .",
        "A grammar G' is specialized from",
        "a grammar , , if it is obtained from in n-specialization steps: G h • • • h G', where n is finite.",
        "We extend the notation so that we have .",
        "Similarly, we define the concept of a grammar G generalized from a grammar G', G' H G using the rule generalization step.",
        "In Figure 2, the grammar is one-step special-",
        "ized from the grammar G\\, i.e., Gi h _L, since preserve the parsing of the representative examples .",
        "A grammar which contains the rule",
        "instead of is not specialized from the grammar since it does not preserve the parsing of the representative example set, .",
        "Such grammars will not be in the lattice.",
        "In order to define the grammar lattice we need to introduce one more concept: a normalized grammar w.r.t.",
        "a sublanguage.",
        "Definition 6.",
        "A LWFG G is called normalized w.r.t.",
        "a sublanguage (not necessarily of G), if none of the grammar rules of can be further generalized to a rule by the rule generalization step such that .",
        "In Figure 2, grammar is normalized w.r.t.",
        ", while , and are not.",
        "We now define a grammar lattice £ which will be the search space for our grammar learning model.",
        "We first define the set of lattice elements £.",
        "Let be a LWFG, normalized and unambiguous w.r.t.",
        "a sublanguage which includes the representative example set of the grammar grammars specialized from .",
        "We call the top element of £, and X the bottom element of £, if .",
        "The bottom element,",
        ", is the grammar specialized from , such that the right-hand side of all grammar rules contains only preterminals.",
        "We have and .",
        "The grammars in have the following two properties (Muresan, 2006):",
        "For two grammars and , we have that is specialized from if and only if is generalized from , with .",
        "All grammars in preserve the parsing of the representative example set .",
        "Note that we have that for , if then .",
        "The system is a complete grammar lattice (see (Muresan, 2006) for the full formal proof).",
        "In Figure 2 the grammars , , , preserve the parsing of the representative examples and T h _L Due to space limitation we do not define here the least upper bound (lub),Y and the greatest lower bound (gib), X. operators, but in this example T = Gi Y G2, L = Gi X G2.",
        "In oder to give a learnability theorem we need to show that and elements of the lattice can be built.",
        "First, an assumption in our learning model is that the rules corresponding to the grammar preter-minals are given.",
        "Thus, for a given set of representative examples, , we can build the grammar using a bottom-up robust parser, which returns partial analyses (chunks) if it cannot return a full parse.",
        "In order to soundly build the T element of the grammar lattice from the grammar through generalization, we must give the definition of a grammar G conformal w.r.t.",
        "Definition 7.",
        "A LWFG G is conformal w.r.t.",
        "a sublanguage iff is normalized and unambiguous w.r.t.",
        "is^ and the rule specialization step guarantees that for all grammars specialized from .",
        "The only rule generalization steps allowed in the grammar induction process are those which guarantee the same relation , which ensures that all the generalized grammars belong to the grammar lattice.",
        "In Figure 2, is conformal to the given sublanguage .",
        "If the sublanguage were clear loud noise then would not be conformal to since and thus the specialization step would not satisfy the relation",
        ".",
        "During learning, the generalization step cannot generalize from grammar to .",
        "Theorem 1 (Learnability Theorem).",
        "If En is the set of representative examples associated with a LWFG G conformal w.r.t.",
        "a sublanguage Ea D En, then can always be learned from and as the grammar lattice top element (T = G).",
        "The proof is given in (Muresan, 2006).",
        "If the hypothesis of Theorem 1 holds, then any grammar induction algorithm that uses the complete lattice search space can converge to the lattice top element, using different search strategies.",
        "In the next section we present our new model of grammar learning which relies on the property of the search space as grammar lattice."
      ]
    },
    {
      "heading": "4. Grammar Induction Model",
      "text": [
        "Based on the theoretical foundation of the hypothesis search space for LWFG learning given in the previous section, we define our grammar induction model.",
        "First, we present the LWFG induction as an Inductive Logic Programming problem.",
        "Second, we present our new relational learning model for LWFG induction, called Grammar Approximation by Representative Sublanguage (GARS).",
        "Inductive Logic Programming (ILP) is a class of relational learning methods concerned with inducing first-order Horn clauses from examples and background knowledge.",
        "Kietz and Dzeroski (1994) have formally defined the ILP-learning problem as the tuple , where is the provability relation (also called the generalization model), is the language of the background knowledge, is the language of the (positive and negative) examples, and is the hypothesis language.",
        "The general ILP-learning problem is undecidable.",
        "Possible choices to restrict the ILP-problem are: the provability relation, , the background knowledge and the hypothesis language.",
        "Research in ILP has presented positive results only for very limited subclasses of first-order logic (Kietz and Dzeroski, 1994; Cohen, 1995), which are not appropriate to model natural language grammars.",
        "Our grammar induction problem can be formulated as an ILP-learning problem as follows:",
        "The provability relation, , is given by robust parsing, and we denote it by .",
        "We use the \"parsing as deduction\" technique (Shieber et al., 1995).",
        "For all syntagmas we can say in polynomial time whether they belong or not to the grammar language.",
        "Thus, using the as generalization model, our grammar induction problem is decidable.",
        "The language of background knowledge, , is the set of LWFG rules that are already learned together with elementary syntagmas (i.e., corresponding to the lexicon), which are ground atoms (the variables are made constants).",
        "The language of examples, are syntagmas of the representative sublanguage, which are ground atoms.",
        "We only have positive examples.",
        "The hypothesis language, , is a LWFG lattice whose top element is a conformal grammar, and which preserve the parsing of representative examples.",
        "Representative Sublanguage Model",
        "We have formulated the grammar induction problem in the ILP-setting.",
        "The theoretical learning model, called Grammar Approximation by Representative Sublanguage (GARS), can be formulated as follows: Given:",
        "a representative example set , lexically consistent (i.e., it allows the construction of the grammar lattice element) • a finite sublanguage Ea, conformal and thus unambiguous, which includes the representative example set, .",
        "We called this sublanguage, the representative sublanguage Learn a grammar , using the above ILP-learning setting, such that is unique and .",
        "The hypothesis space is a complete grammar lattice, and thus the uniqueness property of the learned grammar is guaranteed by the learnability theorem (i.e., the learned grammar is the lattice top element).",
        "This learnability result extends significantly the class of problems learnable by ILP methods.",
        "The GARS model uses two polynomial algorithms for LWFG learning.",
        "In the first algorithm, the learner is presented with an ordered set of representative examples (syntagmas), i.e., the examples are ordered from the simplest to the most complex.",
        "The reader should remember that for a LWFG , there exists a partial ordering among the grammar nonterminals, which allows a total ordering of the representative examples of the grammar G. Thus, in this algorithm, the learner has access to the ordered representative syntagmas when learning the grammar.",
        "However, in practice it might be difficult to provide the learner with the \"true\" order of examples, especially when modeling complex language phenomena.",
        "The second algorithm is an iterative algorithm that learns starting from a random order of the representative example set.",
        "Due to the property of the search space, both algorithms converge to the same target grammar.",
        "Using ILP and theory revision terminology (Greiner, 1999), we can establish the following analogy: syntagmas (examples) are \"labeled queries\", the LWFG lattice is the \"space of theories\", and a LWFG in the lattice is \"a theory.\"",
        "The first algorithm learns from an \"empty theory\", while the second algorithm is an instance of \"theory revision\", since the grammar (\"theory\") learned during the first iteration, is then revised, by deleting and adding rules.",
        "Both of these algorithms are cover set algorithms.",
        "In the first step the most specific grammar rule is generated from the current representative example.",
        "The category name annotated in the representative example gives the name of the lhs nonterminal (predicate invention in ILP terminology), while the robust parser returns the minimum number of chunks that cover the representative example.",
        "In the second step this most specific rule is generalized using as performance criterion the number of the examples in that can be parsed using the candidate grammar rule (hypothesis) together with the previous learned rules.",
        "For the full details for these two algorithms, and the proof of their polynomial efficiency, we refer the reader to (Muresan, 2006)."
      ]
    },
    {
      "heading": "5. Discussion",
      "text": [
        "A practical advantage of our GARS model is that instead of writing syntactic-semantic grammars by hand (both rules and constraints), we construct just a small annotated treebank - utterances and their semantic molecules.",
        "If the grammar needs to be refined, or enhanced, we only refine, or enhance the representative examples/sublanguage, and not the grammar rules and constraints, which would be a more difficult task.",
        "We have built a framework to test whether our GARS model can learn diverse and complex linguistic phenomena.",
        "We have primarily analyzed a set of definitional-type sentences in the medical domain.",
        "The phenomena covered by our learned grammar includes complex noun phrases (including noun compounds, nominalization), prepositional phrases, relative clauses and reduced relative clauses, finite and non-finite verbal constructions (including, tense, aspect, negation, and subject-verb agreement), copula to be, and raising and control constructions.",
        "We also learned rules for wh-questions (including longdistance dependencies).",
        "In Figure 3 we show the ontology-level representation of a definition-type sentence obtained using our learned grammar.",
        "It includes the treatment of reduced relative clauses, raising construction (tends to persist, where virus is not the argument of tends but the argument of persist), and noun compounds.",
        "The learned grammar together with a semantic interpreter targeted to terminological knowledge has been used in an acquisition-query experiment, where the answers are at the concept level (the querying is a graph",
        "Hepatitis B is an acute viral hepatitis caused by a virus that tends to persist in the blood serum.",
        "Figure 3: A definition-type sentence and its ontology-based representation obtained using our learned LWFG matching problem where the \"wh-word\" matches the answer concept).",
        "A detailed discussion of the linguistic phenomena covered by our learned grammar using the GARS model, as well as the use ofthis grammar for terminological knowledge acquisition, is given in (Muresan, 2006).",
        "To learn the grammar used in these experiments we annotated 151 representative examples and 448 examples used as a representative sublanguage for generalization.",
        "Annotating these examples requires knowledge about categories and their attributes.",
        "We used 31 categories (nonterminals) and 37 attributes (e.g., category, head, number, person).",
        "In this experiment, we chose the representative examples guided by the type ofphenomena we wanted to modeled and which occurred in our corpus.",
        "We also used 13 lexical categories (i.e., parts ofspeech).",
        "The learned grammar contains 151 rules and 151 constraints."
      ]
    },
    {
      "heading": "6. Conclusion",
      "text": [
        "We have presented Lexicalized Well-Founded Grammars, a type of constraint-based grammars for natural language specifically designed to enable learning from representative examples annotated with semantics.",
        "We have presented a new grammar learning model and showed that the search space is a complete grammar lattice that guarantees the uniqueness of the learned grammar.",
        "Starting from these fundamental theoretical results, there are several directions into which to take this research.",
        "A first obvious extension is to have probabilistic-LWFGs.",
        "For example, the ontology constraints might not be \"hard\" constraints, but \"soft\" ones (because language expressions are more or less likely to be used in a certain context).",
        "Investigating where to add probabilities (ontology, grammar rules, or both) is part of our planned future work.",
        "Another future extension of this work is to investigate how to automatically select the representative examples from an existing treebank.",
        "#hepatitis",
        "#cause",
        "#tend",
        "#acute",
        "#viral",
        "#virus",
        "#serum"
      ]
    }
  ]
}
