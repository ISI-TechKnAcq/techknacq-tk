{
  "info": {
    "authors": [
      "Harry C. Bunt"
    ],
    "book": "Proceedings of the Ninth International Conference on Computational Semantics (IWCS 2011)",
    "id": "acl-W11-0101",
    "title": "The Semantics of Dialogue Acts",
    "url": "https://aclweb.org/anthology/W11-0101",
    "year": 2011
  },
  "references": [
    "acl-N09-2050"
  ],
  "sections": [
    {
      "text": [
        "Harry Bunt",
        "TiCC, Tilburg Center for Cognition and Communication Tilburg University, The Netherlands",
        "harry.bunt@uvt.nl",
        "This paper presents an update semantic for dialogue acts, defined in terms of combinations of very simple 'elementary update functions'.",
        "This approach allows fine-grained distinctions to be made between related types of dialogue acts, and relations like entailment and exclusion between dialogue acts to be established.",
        "The approach is applied to dialogue act representations as defined in the Dialogue Act Markup Language (DiAML), part of the recently proposed ISO standard 24617-2 for dialogue act annotation."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "The notion of a dialogue act plays a key role in studies of dialogue, in particular in the interpretation of the behaviour of dialogue participants and in the design of spoken dialogue systems.",
        "But in spite of their popularity, their status is nearly always reduced to that of informal, intuitive concepts which lack proper definitions (see Poesio and Traum, 1998 for one of the few attempts at formalization).",
        "A wide range of alternative dialogue act taxonomies and inventories have been proposed, causing considerable terminological and conceptual confusion, and problems for reusing annotated corpora.",
        "This has motivated the International Organisation for Standards ISO to develop a standard for interoperable dialogue act annotation, ISO 24617-2 (see ISO 2010).",
        "This proposed standard is partly based on the comprehensive DIT++ taxonomy, which has added to the earlier DIT taxonomy (Bunt, 1994) a number of concepts from other proposals and studies.",
        "Semantically, the DIT++ taxonomy is based on the dynamic approach to utterance meaning taken in Dynamic Interpretation Theory (DIT), which views dialogue acts as corresponding to update operations on the information states of participants in the dialogue; an approach commonly known as the 'information-state update approach' to meaning in dialogue - see e.g. Bunt (2000); Traum & Larsson (2003).",
        "A dialogue act, on this approach, has two main components: a semantic content, which describes the objects, properties, relations, or actions that the dialogue act is about, and a communicative function, which specifies how an addressee should update his information state with the semantic content.",
        "Utterances in dialogue are often multifunctional, i.e., they have more than one communicative function.",
        "Dialogue analysis and annotation frameworks are therefore often 'multidimensional' in the sense of allowing the assignment of multiple functions to functional segments.",
        "The DAMSL annotation scheme for example (DAMSL = Dialogue Act Markup using Several Layers) distinguishes nine 'dimensions' as mutually exclusive groups of function tags.",
        "Bunt (2006) introduces a notion of dimension based on the observation that participation in a dialogue involves, beyond activities strictly related to performing the underlying task, sharing information about the processing of utterances, managing the use of time, taking turns, and various other types of communicative activity, and defines dimensions as corresponding to such aspects of communication.",
        "Each dimension in this sense constitutes a category of communicative activity, and the dialogue acts involved in these activities are concerned with different types of information: feedback acts with the success of processing previous utterances; turn management acts with the allocation of the speaker role, task-related acts with the dialogue task; and so on.",
        "Dimensions thus classify semantic content.",
        "Petukhova & Bunt (2009a; 2009b) formulate criteria for distinguishing dimensions, and apply these in the analysis of the dimensions that occur in 18 existing annotation schemes, showing that the 10 dimensions of DIT++ form a well-founded set of dimensions.",
        "These are the following:",
        "(1) 1.",
        "Task/Activity: dialogue acts for performing the task or activity underlying the dialogue 2.",
        "Auto-Feedback: providing information about the speaker's processing of previous utterances.",
        "3.",
        "Allo-Feedback: the speaker expresses opinions or elicits information about the addressee's processing of previous utterances; 4.",
        "Contact Management: dialogue acts for establishing and maintaining contact; 5.",
        "Turn Management: concerned with grabbing, keeping, giving, or accepting the speaker role; 6.",
        "Time Management: the speaker indicates to need some extra time to formulate his contribution; 7.",
        "Discourse Structuring: dialogue acts for explicitly structuring the conversation; 8.",
        "Own Communication Management: dialogue acts for editing the speaker's current utterance; 9.",
        "Partner Communication Management: dialogue acts to assists or correct the current speaker;",
        "10.",
        "Social Obligations Management: dialogue acts that take care of social conventions such as greetings, apologies, and expressions of gratitude.",
        "Some communicative functions are specific for a particular dimension; for instance Turn Accept and Turn Release are specific for turn management; Stalling and Pausing for time management.",
        "Other functions can be applied in any dimension; for instance a Check Question can be used with task-related semantic content, but also for checking correct understanding (feedback).",
        "Similarly for commissive and directive functions.",
        "These functions are therefore called general-purpose functions, as opposed to dimension-specific functions.",
        "The DIT++ taxonomy therefore consists of two parts: a taxonomy of general-purpose functions and one of dimension-specific functions - see Appendix A and http: / /dit.",
        "uvt.",
        "ni."
      ]
    },
    {
      "heading": "2. Di AML: Dialogue Act Markup Language",
      "text": [
        "The Dialogue Act Markup Language (DiAML) which is part of the ISO standard under development for dialogue act annotation (see Bunt et al., 2010, and http://semantic-annotation.uvt.nl) has been designed in accordance with the ISO Linguistic Annotation Framework (Ide & Romary, 2004), which makes a distinction between annotation and representation; 'annotation' refers to the linguistic information that is added to segments of language data, independent of format; 'representation' refers to the format in which an annotation is rendered, independent of content.",
        "This distinction is implemented in the DiAML definition by a syntax that specifies, besides a class of XML-based representation structures, also a class of more abstract annotation structures.",
        "These two components are called the concrete and abstract syntax, respectively.",
        "The abstract syntax defines a class of set-theoretical structures, called 'annotation structures'.",
        "It consists of: (a) a specification of the elements from which annotation structures are built up, called a 'conceptual inventory', and (b) a specification of the possible ways of combining these elements.",
        "The conceptual inventory consists of finite sets of elements called 'functional segments', 'dimensions', 'communicative functions', 'qualifiers', and 'rhetorical relations'.",
        "An annotation structure consists of a set of entity structures and a set of link structures.",
        "Entity structures contain semantic information about a functional segment; link structures describe semantic relations between segments.",
        "The most important kind of entity structure is a so-called 'dialogue act structure', which is a quadruple (S, A, d, f) where S and A are the sender and addressee of a dialogue act; d is a dimension; and / is a communicative function or a pair (/, q), where q is a list of qualifiers.",
        "The concrete syntax defines a rendering of annotation structures in XML.",
        "It is defined in accordance with the methodology for defining semantic annotation languages described in Bunt (2010), which introduces the notion of an ideal representation format, defined as one where every representation represents a uniquely determined annotation structureThe semantics of the language is then defined for the structures defined by the abstract syntax.",
        "This has the effect that any two 'ideal' representation formats are semantically equivalent; every representation in one such format can be converted by a meaning-preserving mapping into any other such format.",
        "The concrete syntax of DiAML is illustrated in (3) and (2).",
        "P2's utterance is segmented into two overlapping functional segments: one (fs2.1) in the Auto-Feedback dimension and one (fs2.2) in the Task dimension, with value 'answer' qualified as 'uncertain'.",
        "(#-prefixed elements are assumed to be identified in the metadata of the source material or in another layer of annotation.)",
        "sender=\"#p1\" addressee=\"#p2\" communicativeFunction=\"setQuestion\" dimension=\"task\"",
        "conditionality=\"conditional\"/> <dialogueAct xml:id=\"da2\" target=\"#fs2\"",
        "communicativeFunction=\"autoPositive\" dimension=\"autoFeedback\"/> <feedbackDependence dact=\"#da2.1\" fbSegment=\"#fs1\"/> <dialogueAct xml:id=\"da3\" target=\"#fs2.2\" communicativeFunction=\"answer\" certainty=\"uncertain\"",
        "dimension=\"task\" /> <functionalDependence dact=\"#da3\" functAntecedent=\"#da1\"/> </diaml>"
      ]
    },
    {
      "heading": "3. Context Model Structure and Content",
      "text": [
        "As the proposed semantics of dialogue acts is in terms of information-state updates, the question arises as to what exactly is an information state in this context; what information does it contain, and how is it structured.",
        "An information state will be assumed to have a number of components, an assumption which is shared between all proposals for information states (e.g. Poesio & Traum, 1998; Bunt, 2000; Ahn, 2001; Cooper, 2004); moreover, certain types of information can be argued to be required in information states.",
        "The details of an information-state update semantics also depend on whether only the information state of an addressee is considered to be updated by dialogue acts, or also that of the sender, and on whether these updates involve mutual beliefs, as e.g. argued in Bunt (2000).",
        "We consider here only the updates of a single addressee's information state, disregarding mutual beliefs; this is anyway the basis for more complex approaches involving multiple information states and mutual beliefs.",
        "In DIT, it is customary to speak of 'contexts' or context models', rather than 'information states', and we will use this terminology in the rest of this paper.",
        "A fundamental requirement for an adequate context model is that, for a given range of dialogue act types, the model contains the kinds of information that are updated by a dialogue act.",
        "Bunt (forthc.)",
        "argues that an agent's context model does not necessarily have a separate component for each DIT dimension, but that it is convenient to distinguish the following five components:",
        "(4) 1.",
        "Linguistic Context, which contains a record of the dialogue history, information about discourse plans (if any), and wishes concerning the occupation of the speaker role;",
        "2.",
        "Semantic Context, which contains the agent's information and goals relating to the dialogue task, as well as his assumptions about the dialogue partner's task-related goals and beliefs;",
        "3.",
        "Cognitive Context, which contains information about the agent's cognitive processes concerned with the processing and production of dialogue utterances, including time estimates for these processes;",
        "1.",
        "P1:",
        "What time does the next train to Utrecht leave?",
        "TA:",
        "fsl:",
        "What time does the next train to Utrecht leave?",
        "2.",
        "P2:",
        "The next train to Utrecht leaves I think at 8:32.",
        "AuFB",
        "fs2.1:",
        "The next train to Utrecht",
        "TA",
        "fs2.2:",
        "The next train to Utrecht leaves I think at 8:32.",
        "4.",
        "Physical/Perceptual Context, which contains information about physical and perceptual properties of the interactive situation;",
        "5.",
        "Social Context, which contains information relevant for interpreting and generating 'social' acts like greetings, apologies, expressions of gratitude.",
        "Versions of such a 5-component context model have been implemented in the PARADIME dialogue manager (Keizer and Bunt, 2006; 2007) and for experimentation by Petukhova et al.",
        "(2010).",
        "An update semantics has to take into account that update operations should not undermine the consistency of the context model.",
        "A dialogue participant may change his mind during the dialogue, as an effect of receiving some unexpected information, which can have the effect that the participant brings in new information which contradicts something that was already grounded, and hence cannot simply be added without making the context model inconsistent.",
        "Rather then building consistency checks into the semantics of each dialogue act, we exploit the DIT distinction of five levels of utterance processing: (1) attention, (2) perception, (3) understanding, (4) evaluation, and (5) execution.",
        "The level of understanding determines the meaning of a dialogue segment in terms of dialogue acts.",
        "The evaluation level checks whether the corresponding updates would keep the current context model consistent.",
        "If so, it performs the updates.",
        "One way to implement this approach is to add to a context model a part called the pending context, which serves as a buffer for items to be inserted in the main context once their consistency with the current content of the main context has been established.",
        "Updating the pending context is a matter of simply adding items to it.",
        "For convenience we will assume the pending context A' of an agent A's context model to be structured in the same way as the main context.",
        "We will use the notation (5 a) to specify the update consisting of adding the information z to component A\\ i of A's pending context.",
        "If / is the update (5a) and g the update A =+u, then (5b) designates the combination of the two updates.",
        "An analysis of the definitions of the DIT++ communicative functions shows that a formal description of the update effects of dialogue acts with a general-purpose function requires the basic concepts listed in Table 1.",
        "For convenience, we also introduce the following abbreviations: Bel(S,p) abbreviates BelS,p, firm); Wk-Bel(5, p) abbreviates BeiS,p, weak); Assumes(S,p) abbreviates Bel(S,p) V Wk-Bel(S,p).",
        "In all action-related attitude operators we suppress the argument T representing the 'empty' condition, hence WilDo(5, a) abbreviates WilDo(S*, a, T), and so on.",
        "Table 1 : Basic semantic concepts for general-purpose communicative function interpretation Dimension Primitives",
        "description",
        "notation",
        "meaning",
        "believes that",
        "Bel(S>,cr)",
        "S believes that p; a indicates whether this is a firm belief",
        "or an uncertain belief (a can have the values 'firm' and 'weak')",
        "knows value of",
        "Know-va^S*, z",
        ")",
        "S possesses the information z",
        "has goal",
        "Wantl(S»",
        "S has the goal that p",
        "is able to do",
        "CanDo(S; a)",
        "S is able to perform the action a.",
        "is willing to do",
        "WilDo(S; a, C,",
        "S is willing to perform the action a. if the condition Ca is fulfilled; Ca may be the universally true statement T",
        "is committed to do",
        "CommitDo(S',",
        "a, Ca)",
        "S is committed to perform the action a. if the condition Ca is fulfilled; the condition Ca may be 'empty' (T)",
        "is committed to",
        "RefrainDo(S', a,Ca)",
        "S is committed to refrain from performing the action a.",
        "refrain from doing",
        "if the condition Ca is fulfilled Ca may be 'empty' (T)",
        "is considering",
        "ConsidDo (X,",
        "a,Y,Ca)",
        "X is considering the action a, to be performed by Y,",
        "to be done",
        "if the condition Ca is fulfilled Ca may be 'empty' (T)",
        "is in the interest of",
        "Interest(Y, a)",
        "action a is of interest to agent Y.",
        "Auto- and Allo-feedback Attended, Perceived, Understood, Accepted, Executed, Attention-Problem, Perception-Problem, Interpretation-Problem, Evaluation-Problem, Execution-Problem Current-Speaker, Next-Speaker Time-Need, small, substantial Present Ready, Available, Start-Dialogue, Close-Dialogue Delete, Replace, Append Available, Thankful, Regretful, Knows-id, Final",
        "Turn Management",
        "Time Mangement",
        "Contact Management",
        "Discourse Structuring",
        "Own and Partner Communication Man.",
        "Social Obligations Man.",
        "Dimension-specific communicative functions are always concerned with a specific category of semantic content, which requires certain specific semantic primitives for its representation.",
        "Table 2 lists the basic concepts for describing their update semantics.",
        "For expressing the semantics of a feedback act which is underspecified for the level of processing, we introduce in (6) the predicates Succes-Processing, defined as successful at least at the level of understanding, and Unsuccessful-Processing, defined as unsuccessful at the level of understanding or lower.",
        "(6) a. Succes-Processing = Understood V Accepted V Executed b. Unsuccessful-Processing = Interpretation-Problem V Perception-Problem V Attention-Problem"
      ]
    },
    {
      "heading": "4. Dialogue Act Semantics",
      "text": [
        "In this section we outline a semantics of dialogue acts in the form of an update semantics for the 'dialogue act structures' defined by the DiAML abstract syntax.",
        "A dialogue act structure does not correspond to a full-blown dialogue act representation, since it does not include the full semantic content, but only the dimension which classifies the semantic content.",
        "The semantics of a dialogue act structure should therefore be something which can be combined with a semantic content in order to form the interpretation of a full-blown dialogue act.",
        "This is precisely the case, for the recursive interpretation of a dialogue act structure (S, A, d, f) is defined through the recursive valuation function V as specified in (7).",
        "Of the four arguments of V in the left-hand side of (7), S, A, and d are elements of the categories of the DiAML conceptual inventory, so there is no recursion in their interpretation; for such elements, the valuation function is defined by a value assignment function F, playing the same role as that of a 'model assignment' function in model-theoretic semantics; F for example assigns to a sender and an addressee certain individuals, identified in the metadata of an annotated dialogue (cf. and in (3)).",
        "To the dimension argument d, F assigns that component of an information state that should be updated.",
        "A communicative function will be interpreted as a function which, applied to a given speaker, addressee, and dimension, results in a function which can be applied to a semantic content in order to obtain a context-update specification.",
        "Since related communicative functions often share parts of their defining preconditions, we will construct such interpretations as combinations of elementary update functions, each of which takes care of the update corresponding to a single dialogue act precondition; see Table 3 and Table 4 for illustration: Table 3 lists the definitions of the update semantics of the communicative functions of the information-providing class, while Table 4 lists the elementary elementary update functions used in these definitions.",
        "The class of general-purpose communicative functions in the DIT++ taxonomy falls apart into the information-transfer functions and action-discussion functions, further subdivided into information-providing and information-seeking functions, and commissives and directives, respectively.",
        "a.",
        "Information-Providing and Information-Seeking Functions The class of information-providing functions has a hierarchical structure, with the communicative function Inform as the mother of all information-providing functions; all other functions are specializations of this function.",
        "These functions all have in common that (1) the speaker wants the addressee to possess certain information which (2) the speaker assumes to be correct.",
        "Using the epistemic operators introduced in Section 5, these preconditions are formalized as follows:",
        "The semantics of the Inform function, specified in Table 3, binds the variable a, representing the belief strength for both the elementary update functions involved.",
        "(See further below, section 4.2.)",
        "The update semantics in terms of combinations of elementary update functions often brings out immediately that some communicative functions are specializations of others (as visualized in Appendix A), for instance, the update semantics of the Answer function shares with the Inform function the updates defined by the elementary update functions U\\ and U2, and adds to that the effects of U7 and Ug; the semantic of the Confirm function adds to that the update defined by Us-Hence Confirm is a specialization of Answer, which is a specialization of Inform, or in other words Confirm entails Answer entails Inform.",
        "F (Inform) F(Agreement) f (Disagreement) ^Correction) F(Answer) fXConnrm) ^(Disconnrm)",
        "As.AX.Ay.AL» As.AX.Ay.AL» As.AX.Ay.AL» As.AX.Ay.AL» As.AX.Ay.AL UUr(X,Y,Di As.AX.Ay.AL",
        "As.AX.Ay.AL UUg(X,Y,Di",
        "L(Question)",
        "L(Prop.Question)",
        "L(CheckQuestion)",
        "L(SetQuestion)",
        "L(ChoiceQuestion)",
        "As an illustration of the update semantics of information-providing functions, consider the case of the answer in (9.2).",
        "(9) 1.",
        "D: twenty-five euros, how much is that in pounds?",
        "2.",
        "C: twenty-five euros is something like 20 pounds",
        "Applying the semantics of the Answer function (see Table 3) to the participants C and D and the semantic content of (9.2), we obtain:",
        "Hence the following beliefs are added to D's pending Semantic Context: (1) C wants D to know that EU25=BP20; (2) C believes that EU25=BP20; (3) C believes that D wants to know whether EU25=BP20; and (4) C believes that D assumes C to know whether EU25=BP20.",
        "b. Commissive and Directive Functions For the classes of commissive and directive communicative functions, we provide for reasons of space the semantics of only a small selection of functions; see Bunt (2011a) for more.",
        "F(Offer)",
        "F(AddressRequest)",
        "F(AcceptRequest) ^(DeclmeRequest) = XCa.XX.XYXD.",
        "=XCa.XX.XYXDi =XCa.XX.XYXDi =XC„.XX.XYXDi f (Request) f (Instruct) F(AddressOffer) F(AcceptOffer) : XCa.XX.XYXD.",
        ": As.AX.Ay.AL.",
        ": As.AX.Ay.AL.",
        ": ACa.AX.Ay.AL.",
        "As an example of the interpretation of a directive dialogue act, consider the request in (11.2):",
        "4.1.2.1 Feedback Functions The communicative functions for providing and eliciting feedback in DIT++ fall apart in those concerned with the speaker's own processing of previous utterances (Auto-Feedback) and those concerned with the addressee's processing, as perceived by the speaker (Allo-Feedback).",
        "The elementary update functions for both dimensions are nearly identical, only differing in whose processing is concerned.",
        "Tables 7 and 8 show the update semantics of a small, representative subset of the (25) DIT++ communicative functions for providing and eliciting feedback.",
        "Y[ =+ Bel",
        "Y, Want(X,Bel(y,p, s)))",
        "U2(X,Y,Di,P,8)",
        "Y[ =+ Bel",
        "Y,Bel(X,p,s))",
        "U3(X,Y,DuP)",
        "Y[ =+ Bel",
        "Y, Assume(X,p))",
        "UA{X,Y,Di,p)",
        "Y[ =+ Bel",
        "Y, Wk-Bel(X,p))",
        "U5(X,Y,Di,p)",
        "Y!",
        "=+ Bel",
        "Y, Bel(X, Assume^)))",
        "U6{X,Y,Di,p)",
        "Y[ =+ Bel",
        "Y, Assume(X, Assume(Y,p)))",
        "Ur(X,Y,Di,p)",
        "Y[ =+ Bel",
        "Y, Bel(X, Assume(y, Know-val(X, P))))",
        "iMX,YDhP)",
        "Y[ =+ Bel",
        "Y, Assume(X, Wk-Bel(y,p))",
        "UQ(X,Y,Di,p)",
        "Y[ =+ Bel",
        "Y, Bel(X, Want(y, Know-val(y,p))))",
        "U10(X,Y,Di,p)",
        "Y!",
        "=+ Bel",
        "Y, Want(X, Know-val(X, )))",
        "Uu(X,Y,Di,p)",
        "Y[ =+ Bel",
        "Y, Assume(X, Know-val(Y\",p))",
        "U12(X,Y,Di,p)",
        "Y[ =+ Bel",
        "Y, Bel(X,pV-.p))",
        "U15(X,Y,Di,p)",
        "Y[ =+ Bel",
        "Y, Assume(X,pi xor p2))",
        "U15a(X,Y,Di,p)",
        "Y[ =+ Bel",
        "Y, Want(X, Bel(X,Pl) V Bel(X,p2))))",
        "U16(X,Y,Di,p)",
        "Y[ =+ Bel",
        "Y, Assume(X, Bel(Y,Pl) V Bel(Y,p2))))",
        "Table 7: Elementary update schemes for the semantics of auto-and allo-feedback functions (selection).",
        "F(AlloPerceptionNegative) = XX.XY.XDi.Xp.U33{X, y Dup) U U62(X, y A)",
        "F(AutoEvaluationPositive) = XX.XY.XDi.Xp.U3z{X, y A,p) U U64(X, y A)",
        "The communicative functions for turn management serve to decide who has or will have the speaker role.",
        "Hence the various functions for taking, accepting, grabbing, keeping, releasing, or assigning the turn are all defined in terms in who currently occupies the speaker and who wants or should have it next.",
        "For example, assigning the turn to somebody (Turn Assign) means that the participant A, who currently occupies the speaker role, wants the indicated other participant, B, to occupy the speaker role next.",
        "This is expressed in the form of a combination of elementary update functions as shown in (13):",
        "= B'LiC =+ Bel(A Current-Speaker(A)); B'LiC =+ Want(A Next-Speaker(B))",
        "In other words, the Linguistic Context component of B's pending context is updated to contain the beliefs that A is the current speaker and wants B to be the next speaker.",
        "U17{X,Y,Di,a,Ca)",
        "Y!",
        "=+ Bei",
        "y, CommitDo(X, a,Ca))",
        "U17a(X,Y,Di,a,Ca)",
        "Y( =+ Bei",
        "y, ConsidDo(X,a,X,Ca))",
        "Ui7b{X,Y,Di,a,Ca)",
        "Y!",
        "=+ Bei",
        "y, ConsidDo(X, a, y Ca))",
        "U18(X,Y,Di,a)",
        "Y!",
        "=+ Bei",
        "y, Bel(X,Want(yCommitDo(X, a, Ca)))",
        "[/20(x,y,A,«,ca)",
        "Y!",
        "=+ Bei",
        "y WilDo(X,a,Ca))",
        "U21(X,Y,Di,a)",
        "Y!",
        "=+ Bei",
        "y, Bel(X, Interest(a,y)))",
        "U23(X,Y,Di,a)",
        "Y{ =+ Bei",
        "y, Want(X, [WilDo(y a, Ca) ->• CommitDo(y a, Ca)}))",
        "U2i(X,Y,Di,a)",
        "Y!",
        "=+ Bei",
        "Y, Want(X, CommitDo(y a)))",
        "U25(X,Y,Di,a,Ca)",
        "y/ =+ Bei",
        "y, Bel(X,WilDo(y a, Ca)))",
        "UzUXiYD^a^Ca)",
        "y/ =+ Bei",
        "Y, Want(X, Bel(y WilDo(X, a,Ca))))",
        "C/2S6(X,y,A,a,Ca)",
        "y/ =+ Bei",
        "Y, Bel(X, Want(y Bel(X, WilDo(y a,Ca)))))",
        "U26(X,Y,Di,a)",
        "y/ =+ Bei",
        "Y, Assume(X, CanDo(y a)))",
        "U26b(X,Y,Di,a)",
        "y/ =+ Bei",
        "Y, Bel(X, Assume(y CanDo(X, a)))",
        "U27(X,Y,Di,a,Ca)",
        "y/ =+ Bei",
        "Y, CommitRefrain(X, a, Ca))",
        "U31(X,YDi",
        "[/35(x,yA",
        "z) z)",
        "*cc=t *oc=t",
        "Bel(y, Want(X, Bel(Y, Succes-Processing(X, z Bel(y, Want(X, Bel(Y, Accepted(X, z)))",
        ")))",
        "U79(X,Y,Di U76(X,Y,Di",
        "z) z)",
        "*cc=* *cc=*",
        "Bel(y, Want(X, Bel(Y, Perception-Problem(y Bel(y, Want(X, Bel(Y, Execution-Problem(y",
        "z)))",
        "m",
        "U6i(X,Y,Di U6i(X,Y,Di",
        "z) z)",
        "*oc=t *cc=*",
        "Bel(y, Bel(X, Success-Processing(X, z))) - Bel(y, Bel(X, Accepted(X, z)))",
        "U&7{X,Y,Di",
        "[/85(x,yA",
        "z) z)",
        "*cc=t *cc=t",
        "Bel(y, Bel(X, Perception-Problem(X, z))) Bel(y, Bel(X, Execution-Problem(y z)))",
        "TurnM) TurnM) TurnM) TurnM) TurnM) TurnM) TurnM) TurnM) Bel(X, Current-Speaker(X)) Want(X, Next-Speaker(y)) Bel(X, Current-Speaker(y)) Wants(X, Current-Speaker(X)) Wants(X, Next-Speaker(X)) _F(TurnAccept) _F(TurnAssign) _F(TurnGrab) _F(TurnKeep) _F(TurnRelease) _F(TurnTake)",
        "AX.Ay.A_D.",
        "AX.Ay.AL».",
        "AX.Ay.AL».",
        "AX.Ay.AL».",
        "AX.Ay.A_D.",
        "AX.Ay.AD».",
        "4.1.2.3 Time Management Functions Time management acts are used by a speaker to indicate that he needs some time to compose his utterance, as signalled for instance by protracting (decreasing his speech tempo) or filled pauses; or that he needs so much time that he suspends the dialogue as in Just a moment.",
        "The semantics of such acts requires a context model to contain beliefs about the amount of time needed by cetain cognitive processes; the DIT context model therefore assumes the representation of estimates of amount of time to be represented in the Cognitive Context component, which also contains other information about the speaker's cognitive processing.",
        "Consider for example consider the update semantics of a Stalling act:",
        "= Usr'cc =+ TimeNeed(S'ys, small)",
        "This update operation adds to the pending cognitive context of Usr the information that Sys needs a small amount of time.",
        "4.1.2.4 Other Communicative Functions",
        "The semantics of the dimension-specific communicative functions for Contact Management, Discourse Structuring, Own Communication Management, Partner Communication Management, and Social Obligations Management is quite similar to that of the dimension-specific communicative functions that considered above, the main difference being the use of other, dimension-specific predicates."
      ]
    },
    {
      "heading": "2.. B: Could you please repeat that?",
      "text": [
        "Applied to the participants A and B and the semantic content Repeat(ul), which situates the Request act in the Auto-Feedback dimension, the definition of the Request semantics in Table 5 leads to:",
        "where 'CC stands for Cognitive Context.",
        "Communicative function qualifiers come in two varieties, 'q-specifiers' and 'q-additives'.",
        "Q-specifiers make preconditions of the communicative function that they qualify more specific, for instance specifying for an answer that there is some uncertainty about the correctness of its content.",
        "Q-additives enrich a communicative function, for instance adding that an offer is accepted happily.",
        "Currently DIT distinguishes two classes of q-specifiers, the 'certainty' and 'conditionality' qualifiers, and one type of q-additive, for 'sentiment' representation.Qualifiers can apply only to general-purpose communicative functions; certainty qualifiers to information-providing functions, and conditionality qualifiers to action-discussion functions.",
        "Sentiment qualifiers can be attached in principle to every communicative function.",
        "Um{x,y ce) un2(x,Y,cc)",
        "Y'cc =+ Ycc =+",
        "TimeNeed(X, small) TimeNeed(X, substantial)",
        "Um(x,y CC)",
        "Ull2{X,Y,CC)",
        "YCC =+ YCC =+",
        "TimeNeed(X, small) TimeNeed(X, substantial)",
        "For the semantics of qualified communicative functions we thus have three possible cases to consider, where fi is an unqualified communicative function: (a) (fi, qsj) where qsj is a q-specifier; (b) (fi, qak) where qctk is a q-additive; and (c) (fi, qsj, ask) where qsj is a q-specifier and qak is a q-additive.",
        "The following clauses in the definition of the recursive valuation function V for DiAML specify the semantic interpretation in each of these cases:",
        "The semantics of each of the individual qualifiers is defined as follows:",
        "We consider two examples.",
        "The first illustrates the semantics of an answer, qualified as uncertain, as in (17) ('p5' abbreviates the proposition that the train to Tilburg leaves from platform 5):",
        "(17) 1.",
        "A: Does the train to Tilburg leave from platform 5?",
        "2.",
        "B: I think so, probably yes.",
        "This means that A's pending semantic context is extended with the following pieces of information:",
        "2.",
        "Want(B, Wk-Bel(A,p5)), i.e. B has the goal that A also holds this uncertain belief; 3.",
        "Bel(B, Want(A, Know-val(A,p))), i.e. B believes that A wants to know whether p5.",
        "4.",
        "Bel(B,Assume(A, Know-val(B,p))): B believes that A assumes that B knows whether p5.",
        "Second, example (20) illustrates the semantics of an unconditional Accept Offer with a happy sentiment (as in A: How about a cup of coffee?",
        "B: Oh yes, that would be wonderful!",
        "), using (15c).",
        "^((AcceptOffer, unconditional, happy)) =",
        "Applied to the participants A and B and the action 'coffee', we obtain:",
        "= ATask=+ Bel(A Want(B, CommitDo(a, coffee))); nu A'Task =+ Bel(A, Bel(B, WilDo(A coffee)));",
        "incertain) =",
        "= 'firm'",
        "F(uncertain) =",
        "= 'weak'",
        "F(conditional) =",
        "= 'cond'",
        "^unconditional) =",
        "= t (the 'empty' condition)",
        "F(sentimentfc) =",
        "= AX.Am.",
        "sentiment-predicate^(X, u)",
        "In other words, the Task component of A's pending context is extended with the beliefs that B wants A to commit himself to arrange coffee; that A is willing to do s o; and that A wants B to believe that.",
        "Moreover, the understanding that B is happy to get some coffee is represented in the cognitive component of A's pending context.",
        "Concerning the certainty regarding the correctness of provided information, as represented through certainty qualifiers, the unmarked case in natural language is certain.",
        "A speaker who is quite certain about something may indicate this by expressions like definitely, most certainly, but this tends to occur only when doubt or disbelief has expressed about something that was claimed.",
        "When there is no expression of uncertainty, the speaker's utterance is therefore interpreted as expressing certainty.",
        "For conditionality, the unmarked case is unconditional; an unconditional commitment or willingness to perform a certain action can be expressed explicitly, but this tends to occur only if some doubt has been expressed about someone's commitment or willingness.",
        "When no conditions for performing an action are expressed, we therefore interpret the utterance as unconditional."
      ]
    },
    {
      "heading": "5. Conclusion and Future Work",
      "text": [
        "This paper has outlined an update semantics of dialogue acts, associated with annotation structures defined by the abstract syntax of the DIAML language for semantic annotation, which forms part of ISO standard (24617-2) under development for dialogue act annotation.",
        "Future work that's crying to be done includes further implementation, testing and evaluation beyond what has already been done (see Petukhova, Bunt and Malchanau, 2010; Keizer, Bunt and Petukhova, 2010), and supplementing the approach with an interpretation of the relations between dialogue acts and other units in dialogue (see Petukhova, Prévot and Bunt, 2011)."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "I thank the members of the Tilburg Dialogue Club, who over the years have contributed to shaping Dynamic Interpretation Theory, as well as PhD students and colleagues in related projects.",
        "This includes Volha Petukhova, Jeroen Geertzen, Simon Keizer, Roser Morante, Amanda Schiffrin, Ielka van der Sluis, Hans van Dam, Yann Girard, Rintse van der Werff, Elyon Dekoven, Paul Piwek, Robbert-Jan Beun, Rene Ahn, and Leen Kievit.",
        "Important contributions have also come from collaborative work in ISO project 24617-2 \"Semantic Annotation Framework, Part 2: Dialogue Acts\", in particular with David Traum.",
        "General-purpose functions",
        "Information-transfer functions",
        "Information-seeking functions",
        "Action-discussion functions",
        "Information-providing functions",
        "Commissives",
        "Directives",
        "Question",
        "Offer Address Suggestion Request Suggestion",
        "Disconfirm",
        "Confirm Correction",
        "Posi-Check Nega-Check",
        "Suggestion",
        "Address Address Request Offer",
        "Accept Decline Decline Accept",
        "Request Request Offer Offer",
        "Auto-Feedback Allo-Feedback Time Contact",
        "Positive Pos.",
        "Attention Pos.",
        "Perception (...)",
        "Pos.",
        "Execution Negative Neg.",
        "Attention",
        "Neg.",
        "Execution",
        "Positive Stalling Negative Pausing Elicitation",
        "C-Indication C-Check misspeaking i\\",
        "Turn-initial",
        "Turn Accept Turn Take Turn Grab",
        "Opening I-Greeting",
        "\\\\nTurn-final",
        "Turn Assign Turn Release Turn Keep",
        "Pre-closing",
        "R-Greeting",
        "Self-Intro",
        "R-Self-Intro",
        "Accept-Ap.",
        "Thanking Acc.-Thanking I-Goodbye R-Goodbye",
        "Question i\\ reement Promise Accept Decline Instruct",
        "Error sign.",
        "Completion",
        "Correct-"
      ]
    }
  ]
}
