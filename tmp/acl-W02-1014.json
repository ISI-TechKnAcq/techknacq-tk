{
  "info": {
    "authors": [
      "Carlos A. Prolo"
    ],
    "book": "Conference on Empirical Methods in Natural Language Processing",
    "id": "acl-W02-1014",
    "title": "Fast LR Parsing Using Rich (Tree Adjoining) Grammars",
    "url": "https://aclweb.org/anthology/W02-1014",
    "year": 2002
  },
  "references": [
    "acl-C00-2098",
    "acl-H91-1060",
    "acl-H94-1020",
    "acl-J93-1002",
    "acl-J95-4002",
    "acl-P00-1008",
    "acl-P00-1058",
    "acl-P83-1017",
    "acl-P90-1035",
    "acl-P97-1003",
    "acl-P98-2156",
    "acl-P99-1070",
    "acl-W96-0209"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We describe an LR parser of parts-of-speech (and punctuation labels) for Tree Adjoining Grammars (TAGs), that solves table conflicts in a greedy way, with limited amount of backtracking.",
        "We evaluate the parser using the Penn Treebank showing that the method yield very fast parsers with at least reasonable accuracy, confirming the intuition that LR parsing benefits from the use of rich grammars."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The LR approach for parsing has long been considered for natural language parsing (Lang, 1974; Tomita, 1985; Wright and Wrigley, 1991; Shieber, 1983; Pereira, 1985; Merlo, 1996), but it was not until a more recent past, with the advent of corpus-based techniques made possible by the availability of large treebanks, that parsing results and evaluation started being reported (Briscoe and Carroll, 1993; Inui et al., 1997; Carroll and Briscoe, 1996; Ruland, 2000).",
        "The appeal of LR parsing (Knuth, 1965) derives from its high capacity of postponement of structural decisions, therefore allowing for much of the spurious local ambiguity to be automatically discarded.",
        "But it is still the case that conflicts arise in the LR table for natural language grammars, and in large quantity.",
        "The key question is how one can use the contextual information contained in the parsing stack to cope with the remaining (local) ambiguity manifested as conflicts in the LR tables.",
        "The aforementioned work has concentrated on LR parsing for CFGs which has a clear deficiency in making available sufficient context in the LR states.",
        "(Shieber and Johnson, 1993) hints at the relevance of rich grammars on this respect.",
        "They use Tree Adjoining Grammars (TAGs) (Joshi and Schabes, 1997; Joshi et al., 1975) to defend the possibility of granular incremental computations in LR parsing.",
        "Incidentally or not, they make use of disambiguation contexts that are only possible in a state of a conceptual LR parser for a rich grammar formalism such as TAG, but not for a CFG.",
        "Concrete LR-like algorithms for TAGs have only recently been proposed (Prolo, 2000; Nederhof, 1998), though their evaluation was restricted to the quality of the parsing table (see also (Schabes and Vijay-Shanker, 1990; Kinyon, 1997) for earlier attempts).",
        "In this paper, we revisit the LR parsing technique, applied to a rich grammar formalism: TAG.",
        "Following (Briscoe and Carroll, 1993), conflict resolution is based on contextual information extracted from the so called Instantaneous Description or Configuration: a stack, representing the control memory of the LR parser, and a lookahead sequence, here limited to one symbol.' However, while Briscoe and Carroll invested on massive parallel computation of the possible parsing paths, with pruning and posterior ranking, we ex-'Unlike (Wright and Wrigley, 1991)’s approach who tries to transpose PCFG probabilities to LR tables, facing difficulties which, to the best of our knowledge, have not been yet solved to content (cf. also (Ng and Tomita, 1991; Wright et al., 1991; Abney et al., 1999)).",
        "periment with a simple greedy depth-first technique with limited amount of backtracking, that resembles to a certain extent the commitment/recovery models from the psycholinguistic research on human language processing, supported by the occurrence of “garden paths”.2 We use the Penn Treebank WSJ corpus, release 2 (Marcus et al., 1994), to evaluate the approach."
      ]
    },
    {
      "heading": "2 The architecture of the parser",
      "text": [
        "Table 1 shows the architecture of our parsing application.",
        "We extract a TAG from a piece of the Penn Treebank, the training corpus, and submit it to an LR parser generator.",
        "The same training corpus is used again to extract statistical information that is used by the driver as follows.",
        "The grammar generation process generates as a subproduct the TAG derivation trees for the annotated sentences compatible with the extracted grammar trees.",
        "This derivation tree is then converted into the sequence of LR parsing actions that would have to be used by the parser to generate exactly that analysis.",
        "A parser execution simulation is then performed, guided by the obtained sequence of parsing actions, collecting the statistical information defined in Section 3.",
        "In possession of the LR table, grammar and statistical information, the parser is then able to parse fast natural language sentences annotated for parts-of-speech."
      ]
    },
    {
      "heading": "2.1 The extracted grammar",
      "text": [
        "Our target grammar is extracted with a customized version of the extractor defined in (Xia, 2001), which we will not describe here.",
        "However, a key aspect to mention is that grammar trees are extracted by factoring of recursion.",
        "Even constituents annotated flat in the Treebank are first given a more hierarchical, recursive structure.",
        "Therefore the trees generated during parsing will be richer than those in the Treebank.",
        "We will return to this point later.",
        "Before grammar extraction, Treebank labels are merged to allow for the generation of a more compact grammar and parsing table, and to concentrate statistical information (e.g., NN and NNS; NNP and NNPS; all labels for finite verb forms).",
        "The gram",
        "mar extractor assigns a plausibility judgment to each extracted tree.",
        "When a tree is judged implausible, it is discarded from the grammar, and so are the sentences in the training corpus in which the tree is used.",
        "This reduced our training corpus by about 15 %."
      ]
    },
    {
      "heading": "2.2 The LR parser generator",
      "text": [
        "We used the grammar generator in (Prolo, 2000).",
        "In this section we only present a parsing example, to illustrate the kinds of action inserted in the generated tables; details concerning how the table is generated are omitted.",
        "Consider the TAG fragment in Figure 2 for simple sentences with modal and adverb adjunc-tion.",
        "Figure 3 contains a derivation for the sentence “John will leave soon”.",
        "We sketch in Figure 4 the sequence of actions executed by the parser.",
        "Technically, each element of the stack would be a pair: the second element being",
        "an LR state; the first can be either a grammar symbol or an embedded stack.",
        "Although the state is the only relevant component of the pair for parsing, in the figure, for presentational purposes, we omit the state and instead show only the symbol/embedded stack component (despite the misleading presence of embedded stacks, actions are executed in constant time).",
        "Stacks are surrounded by square brackets.",
        "Only the parts of speech have been represented.",
        "The bpack action is not standard in LR parsing.",
        "It represents an earlier partial commitment for structure.",
        "In its first appearance, it acknowledges that some material will be adjoined to a VP that dominates the element at the top of the stack (in fact it dominates the topmost elements, where is the second parameter of bpack).",
        "The material is then enclosed in a substack (the subscript VP at the left bracket is for presentation purposes only; that information is in fact in the LR state that would pair with the substack).",
        "The next line contains another bpack with , that proposes another adjunction, dominating the VB and the RB.",
        "Reductions for auxiliary trees leave no visible trace in the stack after they are executed.",
        "The parser executes reductions in a bottom up order with respect to the derivation tree"
      ]
    },
    {
      "heading": "3 Conflict Resolution",
      "text": [
        "In this session we focus on how to resolve conflicts in the generated parsing table to obtain a single 3Notice that the notion of top-down/bottom-up parsing cannot be defined on the derived tree for TAGs, unless one wants to break the actions into independent subatomic units, e.g., single-level context-free-like expansions.",
        "“best” parse for each input sentence.",
        "At each step of the parsing process the driver is faced with the task of choosing among a certain number of available actions.",
        "At the end, the sequence of actions taken will uniquely define one derivation tree that represents the chosen syntactic analysis.",
        "In our approach, the parser proceeds greedily trying to compute a single successful sequence of actions.",
        "Whenever it fails, a backtracking strategy is employed to re-conduce the parser to an alternative path, up to a certain limited number of attempts provided as a parameter to the parser.",
        "Choices are made locally.",
        "We have not tried to maximize any global measure, such as the probability of the sentence, the probability of a parse given a string, etc.",
        "An instantaneous description (or “configuration”) can be characterized by two components:",
        "1.",
        "The current content of the stack, which includes the current (automaton) state; 2.",
        "The suffix of the input not yet shifted into the stack.",
        "The basic parsing approach has two main components: 1.",
        "A strategy for ranking the actions available at any given instantaneous description; 2.",
        "A greedy strategy for computing the sequence of parsing actions.",
        "At each instantaneous description: Choose the highest-ranked action that has not been tried yet and execute it.",
        "If there is no action available, then backtrack: move back to one of the instantaneous descriptions previously entered and choose an alternative action."
      ]
    },
    {
      "heading": "3.1 Strategies for ranking conflicting actions",
      "text": [
        "Let be the number of positions in the stack and be the sequence of states in the positions.4 is the current state.",
        "Let be the lookahead symbol, the leftmost symbol in the not yet shifted suffix.",
        "Let be the (finite) set of possible actions given by the grammar.",
        "We use two basic ranking functions: and .",
        "The first, naive one considers only the current automaton state (the state at the top of the stack, ) and the lookahead symbol, .",
        "It is a poor statistic but it does not suffer of sparse data problems in our training corpus, and hence is used for smoothing.",
        "For any instantaneous description as described above, we trivially define the , for any action , as a probability estimate for , given the current state and lookahead symbol : where is the number of times occurs in an instantaneous description when parsing the annotated corpus.",
        "It can be observed that individual actions tend to depend on different additional states in the stack.",
        "For a shift action there is no reason to assume that the previous state is particularly relevant, or that state, say, , is not.",
        "But for a or action we should suspect that the state from where the action is taken is highly relevant.",
        "So, for instance, the action reduce , where the number of non-empty leaves of is , would have strong dependency on the state .",
        "An approximation of its rank would be: .",
        "This observation is certainly not new.",
        "A similar ranking function is in fact used by Briscoe and Carroll.",
        "However, an inconsistency immediately arises: we cannot compare probabilities of events drawn on distinct sample spaces.",
        "For instance, if we have two",
        "competing actions , an reduce , and , a shift, and we affirm that depends on , then, it cannot be true that the shift does not depend on .",
        "In fact, it has to be the case that it depends on as much as .",
        "One could suggest calculating the probabilities for all actions conditional to the same set of states, .",
        "But, in general, we have many more than two actions to decide among.",
        "And they are likely to stress their dependencies on different past states.",
        "We see that this is not going to work; the number of dependencies, and hence the number of parameters, will grow too big.",
        "A striking solution arises from a notable fact from LR parsing theory for CFGs: If state contains an action reduce p, where is a production with symbols on its right side, then, the pair ( ), from the instantaneous description, uniquely identifies the entire sequence .",
        "Although this property does not hold for the parser generation algorithm we are using, it is still a good approximation to the true statistical dependencies.5 We can use this “approximately correct” property in our benefit: “if state contains an action reduce or bpack for a number of leaves , then the dependency on the sequence can be approximated by a dependency on the pair ( )”.",
        "So a natural candidate for the second state to be considered is the state , where = max has an action bpack(X,l) for some X or has some action reduce for a tree with non-empty leaves .",
        "We define our second ranking function based on that.",
        "5 That the property does not hold in the algorithm we are using is a consequence of the way the goto function for adjunction is defined in (Prolo, 2000), as a function of two states (instead of just a simple transition in the automaton).",
        "A detailed argument is beyond the scope of this paper and can be found in (Prolo, 2002), available upon request to the author.",
        "That the statement is a good approximation to the true statistical dependencies follows from: (1) adjuncts (that can cause distinct states to intervene between the considered pair), are generally regarded as not restricting the syntactic possibilities of the clause they adjoin to; and (2) in practice, the intermediate states at positions that could be distinct for theoretically different sequences most often have exactly the same characteristics, i.e., they are likely to “accidentally” collapse to the same state."
      ]
    },
    {
      "heading": "3.2 The backtracking strategy",
      "text": [
        "We have a (quite narrow) notion of confidence for parsing paths: as long as our sequence of decisions allows the parser to proceed we trust the sequence, and if it has taken us to an acceptance state, we believe we have the correct parse.",
        "On the other hand, a crash is our other binary value for confidence, an untrustworthy parsing sequence.",
        "In these cases, we know we have made a bad decision somewhere in the path and that we have to start again from that point by following another alternative.",
        "This is a backtracking strategy, although not in the common sense of a depth-first walk, (i.e., exploring all the possibilities left before undoing some earlier action).",
        "We want to explore strategies of intelligently guessing the restart point.",
        "We use a simple strategy of returning to the decision point that left the highest amount of probability mass unexplored.",
        "In order to implement it, we maintain a tree with the entire parsing attempts’ history.",
        "There will be one path from the root corresponding to the current parsing attempt, the leaf being the current instantaneous description.",
        "All other leaves correspond to instantaneous descriptions that have been abandoned (crashing points).",
        "If the current leaf crashes, all nodes in the tree (except for the leaves) compete to be the restart point.",
        "Keeping all nodes in the tree alive is a direct consequence of the fact that we do not intend to do exhaustive backtracking.",
        "We trade space (a tree instead ofjust a sequence) for time: presumably, by doing smart backtracking we can find a successful path by trying only a fraction of the possible ones.",
        "Moreover, we want to find the best (or approximately best) successful path, and a crashing point is a good point to re-evaluate the process.",
        "Limits may be added through parameters, so that the parser may give up after a certain amount of attempts or time.",
        "In addition to the instantaneous description, each node contains a record of the alternatives previously tried (the edges to its child nodes in the tree) with their corresponding probabilities, plus a ranked list of the alternatives not yet tried.",
        "In particular we maintain the probability mass left unexplored in a node: the sum of the probabilities of the actions not yet tried.",
        "Notice that alternatives already tried are indirectly kept alive through their corresponding child nodes.",
        "Let be the set of actions not yet tried at node .",
        "The probability mass left is .6 The backtracking process chooses for which is maximum (efficiently maintained using a priority queue).",
        "Then we update and start another branch in the tree by executing ."
      ]
    },
    {
      "heading": "4 Evaluation",
      "text": [
        "We evaluated the approach using the Penn Treebank WSJ Corpus, release 2 (Marcus et al., 1994), using Sections 2 to 21 for grammar extraction and training, section 0 for development and 23 for testing.",
        "Only parts-of-speech were used as input.7 8 A smoothed ranking function is defined as follows: The best was experimentally determined to be 1.",
        "That is: in general, even if there is minimal evidence of the context including the second state, the statistics using this context lead to a better result than using only one state.",
        "For each sentence there is an initial parsing attempt using only as the ranking function with an a maximum of 500 backtracking occurrences.",
        "If it fails, then the sentence is parsed using , with a maximum of 3,000 backtracking occurrences.",
        "In table 1 we report the following figures for the development set (Section 0) and test set (Section 23): %failed is the percentage of sentences for which the parser failed (in the two attempts)."
      ]
    },
    {
      "heading": "6Where can be any of the ranking functions, at",
      "text": [
        "the state , applied to .",
        "Elsewhere in the paper we have omitted the explicit reference to the state.",
        "7However, two new categories were defined: one for time nouns, namely those that appear in the Penn Treebank as heads of constituents marked “TMP” (for temporal); another for the word “that”.",
        "This is similar to (Collins, 1997)’s and Char-niak97’s definition of a separate category for auxiliary verbs.",
        "recall and prec.",
        "are the labeled parsing recall and precision, respectively, as defined in (Collins, 1997) (slightly different from (Black et al., 1991)).",
        "is their harmonic average.",
        "tput is the average number of sentences parsed per second.",
        "To obtain the average, the number of sentences submitted as input (not only those that parsed successfully) is divided by the total time (excluded the time overhead before it starts parsing the first sentence).",
        "The programs were run under Linux, in a PC with a Pentium III 930MHz processor.",
        "The first two lines report the measures for the parsed sentences as originally generated by the parser.",
        "We purposefully do not report precision.",
        "As we mentioned in the beginning of the paper, the parser assigns to the sentences a much richer hierarchical structure than the Penn Treebank does, which is penalized by the precision measure.",
        "The reason for such increase in structure is not quite a particular decision of ours, but a consequence of using a sound grammar under the TAG grammatical formalism.9 However, having concluded our manifesto, we understand that algorithms that try to keep precision as high as the recall necessarily have losses in recall compared to if they ignored the precision, and therefore in order to have fair comparison with them and to improve the credibility of our results, we flattened the parse trees in a post-processing step, using a simple rule-based technique on top of some frequency measures for individual grammar trees gathered by (Xia, 2001) and the result is presented in the bottom lines of the table.",
        "9By sound we mean a grammar that properly factors recursion in one way or another.",
        "Grammars have been extracted where the right side of a rule reflects exactly each single-level expansion found in the Penn Treebank.",
        "We are also aware of a few alternatives in grammatical formalisms that could capture such flatness, e.g., sister adjunction (Chiang, 2000).",
        "The most salient positive result is that the parser is able to parse sentences at a rate of about 20 sentences per second.",
        "Most of the medium-to-high accuracy parsers take at least a few seconds per sentence under the same conditions.",
        "10 This is an enormous speed-up.",
        "As for the accuracy, it is not far from the top performing parser for parts-of-speech that we are aware of, reported by (Sima’an, 2000): recall/precision = Perhaps the most similar work to ours is Briscoe and Carroll’s (1993; 1995; 1992; 1996).",
        "They implemented a standard LR parser for CFGs, and a probabilistic method for conflict resolution similar to ours in that the decisions are conditioned to the LR states but with different methods.",
        "In particular, they proceed in a parallel way accumulating probabilities along the paths and using a Viterbi decoder at the end.",
        "Their best published result is of unlabeled bracket recall and precision of 74 % and 73 %, parsing the Susanne corpus.",
        "Since the unlabeled bracket measures are much easier than the ones we are reporting, on labeled brackets, our results are clearly superior to theirs.",
        "Also the Susanne corpus is easier than the Penn Treebank.",
        "There are two additional points we want to make.",
        "One is with respect to the ranking function , based on two states.",
        "It is a very rich statistic, but suffers from sparse data problems.",
        "Parsing section 0 with only this statistics (no form of smoothing), with backtracking limit of 3,000 attempts, we could parse only 31 % of the sentences but the non-flattened recall was 88.33 %, which is quite high for using only parts-of-speech.",
        "The second observation is that when parsing with the smoothed function most of the sentences use very few number of backtracking attempts.",
        "In fact a graph relating number of backtracking attempts with number of sentences that parse using attempts shows an relation characteristic of Zipf’s law.",
        "Most of the time spent with computation is spent with sentences that either fail parsing or parse with difficulty, showing low bracketing accuracy."
      ]
    },
    {
      "heading": "5 Conclusions",
      "text": [
        "The results presented here suggest that: (1) the use of a rich grammar as the underlying formalism for the LR techniques makes available enough information to the driver so as to allow for a greedy strategy to achieve reasonable parsing accuracy.",
        "(2) LR parsing allows for very fast parsing with at least reasonable accuracy.",
        "The approach seems to have much yet to be explored, mostly to improve the accuracy side.",
        "In particular we have not yet come with a solid approach to lexicalization.",
        "Using words (as opposed to pos tags) as the terminals of the grammar to be pre-compiled leads to an explosion in the size of the table: not only the average number of transitions per state grows, but also the number of states itself grows wildly.",
        "One very promising approach for a partial solution is to expand the set of terminals by adding some selected syntactic subcategories that have distinguished syntactic behavior, as we reported in this paper for time nouns, or by individuating frequent words with peculiar behavior, as we did for the word “that”.",
        "Although we have also done some initial work on a more general approach to clustering words according to their syntactic distribution, they are not still adequate for our purposes.",
        "Finally, an earlier simple experiment of adding a dependency on the lookahead’s word (recall that in and was the pos tag only), gave us a small improvement of about a couple of percents in the accuracy measures.",
        "A limited amount of parallelism is an important topic to be considered, perhaps together with a better notion (non-binary) of confidence.",
        "The high reliability of , suggests that we should look for a way to enrich the parsing table.",
        "LR parser for the full class of TAGs is problematic.",
        "The bpack action of early structural commitment is involved in most of the decision points where the wrong action is taken.",
        "We are currently working on a version of the LR parser for a subclass of TAGs, the Tree Insertion Grammars (Schabes and Waters, 1995), for which efficient true LR parsers can be obtained."
      ]
    }
  ]
}
