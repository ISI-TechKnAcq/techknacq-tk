{
  "info": {
    "authors": [
      "Jyrki Niemi",
      "Kimmo Koskenniemi"
    ],
    "book": "COLING â€“ Posters",
    "id": "acl-C08-2018",
    "title": "Quantification and Implication in Semantic Calendar Expressions Represented with Finite-State Transducers",
    "url": "https://aclweb.org/anthology/C08-2018",
    "year": 2008
  },
  "references": [],
  "sections": [
    {
      "text": [
        "This paper elaborates a model for representing semantic calendar expressions (SCEs), which correspond to the inten-sional meanings of natural-language calendar phrases.",
        "The model uses finite-state transducers (FSTs) to mark denoted periods of time on a set of timelines represented as a finite-state automaton (FSA).",
        "We present a treatment of SCEs corresponding to quantified phrases {any Monday; every May) and an implication operation for requiring the denotation of one SCE to contain completely that of another."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "This paper elaborates the temporal representation model proposed in Niemi and Koskenniemi (2007) and developed in Niemi and Koskenniemi (2008).",
        "This bracketing FST model covers temporal information ranging from simple dates to such meanings as 6-8 pm on every Monday in April, except on Easter Monday.",
        "The model represents semantic calendar expressions (SCEs) using finite-state transducers (FSTs) that bracket periods of time on timelines represented as a finite-state automaton (FSA).",
        "Motivations for a finite-state representation include an efficient treatment of periodicity and certain kinds of sparse sets of sets common in calendar information, as well as a well-known theory.",
        "In this paper, we treat SCEs corresponding to quantified calendar phrases, such as any Monday and every May.",
        "We also present implication for representing such cases as a course with compulsory attendance, whose all class times should coincide with the free slots of time of a student.",
        "2 Semantic Calendar Expressions (SCEs) and the Bracketing FST Model",
        "We use the semi-formal SCEs as the basic representation.",
        "An SCE typically corresponds to the disambiguated intensional meaning of a natural-language calendar phrase.",
        "An SCE may denote either a specific period of time or a set of periods.",
        "An SCE is compiled to a sequence of bracketing FSTs through regular (relation) expressions.",
        "Table 1 lists some implemented SCE constructs and the corresponding calendar phrases.",
        "Most constructs can be combined with each other.",
        "The bracketing FST model represents the denotations of an SCE as an acyclic timeline FSA defining a finite timeline string for each alternative denotation.",
        "A basic timeline FSA defines a single timeline consisting of brackets and labels for calendar periods, with no denotations marked.",
        "The following is a (simplified) timeline for the year 2008 at month level (spaces separate symbols):",
        "Construct",
        "SCE example; calendar phrase",
        "calendar period",
        "may; fri; calday",
        "May; Friday; (calendar) day",
        "list (union)",
        "union (mon, fri, sun)",
        "Monday, Friday and Sunday",
        "common part",
        "intersect (aug, y2008)",
        "(intersection)",
        "August 2008",
        "interval",
        "interval (may, jun)",
        "May to June",
        "anchored",
        "nth_following (3, mon, easter)",
        "the third Monday after Easter",
        "quantified",
        "any_n (1, mon)",
        "any (single) Monday",
        "[y y2008 [m Jan ]m [m Feb ]m ... [m Dec ]m ]y To represent the denotation of an SCE s, a basic timeline FSA is composed with a bracketing FST (sequence) representing s. The result is a timeline FSA with the denotation marked with marker brackets {in ... }in.",
        "The following timeline corresponds to union (jan, mar) (January andMarch): [y y2008 {i3 {i1 [m Jan ]m }i1 }i3 [m Feb ]m {i3 {i2 [m Mar ]m }i2 }i3 [m Apr ]m ... [m Dec ]m ]y First, January is marked with i1 and March with i2.",
        "Then the bracketing FST for union marks each period i1 and i2 with i3, the denotation of the whole."
      ]
    },
    {
      "heading": "3. Representing Quantified SCEs",
      "text": [
        "A natural-language calendar phrase may be unquantified, such as Monday, or it may contain different kinds of quantification, such as all Mondays, any Monday, three Mondays and all Mondays in some May We treat any Monday, some Monday and one Monday as meaning any single Monday, and we equate all Mondays, each Monday and every Monday.",
        "Numerical quantification can be generalized to intervals, possibly open-ended, such as two to five Mondays and at most four Mondays.",
        "The meaning all Mondays is represented simply as the SCE mon, which is represented as a timeline FSA with each Monday marked on the same timeline, as illustrated in Fig. 1 (simplified).",
        "We call this the collective representation of an SCE.",
        "The denotation can be interpreted in several ways: as the union of all Mondays, as all the parts of a timeline that are part of a Monday, as the recurring \"event\" of Monday, or as a disconnected (non-convex) interval of all Mondays.",
        "The meaning any Monday is represented as the SCE any_n (1, mon) and as a timeline FSA with each Monday marked on a separate, alternative timeline of its own, as illustrated in Fig. 2.",
        "We call this the distributive representation of an SCE.",
        "V{Mo| vMO^ mmo",
        "For numerical quantification, we combine collective and distributive representation.",
        "For example, any_n (3, mon) (threeMondays) is represented as a timeline FSA defining a set of timelines, each with three Mondays marked, so that the set covers all possible combinations.",
        "A collective representation alone would not sufice: a single timeline with all periods of three Mondays marked would in effect represent all Mondays.",
        "In natural language, an unquantified calendar phrase, such as Monday, is typically underspeci-ied and refers to the closest preceding or following Monday relevant in the context.",
        "In the bracketing FST model, however, we represent unquanti-ied expressions collectively: the SCE mon represents both Monday and all Mondays.",
        "A major practical reason for preferring the collective representation is that it is easy to construct a bracketing FST that splits a single timeline with each Monday marked to a set of alternative timelines, each with only one of the Mondays marked, whereas the converse operation is not possible.",
        "In effect, a bracketing FST can only refer to symbols on a single timeline at a time.",
        "A single timeline with all Mondays marked can also be used as a basis for such an SCE as nth_following (3, mon, easter) (the third Monday after Easter).",
        "The bracketing FST corresponding to nth_following gets as its input a timeline with each Monday and each Easter marked.",
        "It then counts the third Monday after each Easter and marks it.",
        "This would be much more dificult with each Monday marked on a timeline ofits own.",
        "Multiple SCEs with quantiication can be combined appropriately.",
        "For example, all Mondays in any (single) May is represented by a timeline FSA deining a set of timelines, each with all Mondays of a single May marked, and any (single) Monday in every May by one with a single Monday marked in each May, covering all possible combinations.",
        "Combinations of quantiied SCEs can often be represented compositionally with intersection.",
        "For example, all Mondays in every May is represented as intersect (mon, may), all Mondays in any May as intersect (mon, any_n (1, may)) and any Monday in any May as intersect (any_n (1, mon), any_n",
        "(1, may)).",
        "However, any Monday in every May cannot be represented simply with intersection, since intersecting a set of timelines, each with only one Monday marked, and a timeline with every May marked would result in timelines with one Monday marked in (at most) one May.",
        "For this case, we have deined the SCE operation n_within_each (n, period, frame), which marks n periods within each frame.",
        "Any Monday in every May is then represented as n_within_each (1, mon, may).",
        "A distributive representation is obligatory for an SCE denoting possibly overlapping periods of time, although each alternative timeline may contain several non-overlapping periods.",
        "For example, we represent n_consecutive (3, calday) (three consecutive days) as a set of timelines, each with one possible combination of non-overlapping periods of three consecutive days marked.",
        "If each timeline had only a single period marked, it would complicate representing such an SCE as union (intersect (n_consecutive (3, cal-day), may), intersect (n_consecutive (3, calday), jun)) (three consecutive days in May and in June) so that the periods of consecutive days in May and June are marked on the same timeline.",
        "In contrast, a single timeline with all possible non-overlapping periods marked would not cover the periods overlapping with the marked ones.",
        "A distributive representation is also used for SCEs containing a distributive union operation to represent a disjunctive meaning.",
        "For example, distr_union (union (mon, fri), union (tue, sun)) (Monday and Friday or Tuesday and Sunday) is represented as a timeline FSA deining two timelines, one with every Monday and Friday marked and the other with every Tuesday and Sunday.",
        "Distributive representation requires special considerations in conjunction with some SCE operations, most notably nth_within (n, period, frame), which marks the nth period within each longer period frame.",
        "Although a period might be the nth marked one within a frame on one timeline, alternative timelines might contain earlier occurrences.",
        "As an example, we consider nth_within (1, n_consecutive (3, workday), jun) (the first period of three consecutive working days in June) For a June beginning on a Sunday, we have alternative timelines with the irst period ofthree working days beginning on Monday, Tuesday and Wednesday, but we would like to mark only the one beginning on Monday.",
        "However, a bracketing FST cannot refer to the alternative timelines to test if any of them contains an earlier applicable period.",
        "As a solution, we have such operations as n_consecutive insert an alternative marker bracket (denoted by [... ] below) on each timeline into each position in which it adds a marker bracket ({...}) on another timeline.",
        "The following simpliied alternative timelines illustrate the example above: Su { Mo [ Tu [ We} Th ] Fr ] Sa Su [ Mo {Tu [ We ] Th } Fr ] Sa",
        "Su [ Mo [ Tu { We ] Th ] Fr } Sa The operation nth_within seeks the first marked period in June with no opening alternative marker bracket between it and the beginning of June."
      ]
    },
    {
      "heading": "4. Implication: All or Nothing",
      "text": [
        "In some applications, an SCE may denote a set of periods of times all of which should be contained in those denoted by another SCE, or if impossible, none of them should be.",
        "For example, all the class times of a course with compulsory attendance should coincide with the free slots of time in the calendar of a student wishing to attend the course.",
        "An intersection of the class times and the student's free slots of time would also contain partial results if he or she could attend only some of the classes.",
        "(the first period of three consecutive (calendar) days in June) denotes the same as first_n_within (3, calday, jun) (the first three days in June).",
        "A similar rephrasing would not be correct for working days, however.",
        "To obtain the desired result, we use the operation impl (a, b) to mark all the periods a if and only if they all are fully contained in the periods b.",
        "If a point of time is in a, it must also be in b for a to be marked, so the operation can be regarded of as a kind of an implication a â€“ > b.",
        "Above, we would compute impl (course, student_free).",
        "A course with alternative instances would be represented with a timeline FSA defining an alternative timeline for each instance.",
        "The bracketing FST corresponding to the above implication would then mark the class times of each instance that is completely within the student's free slots of time."
      ]
    },
    {
      "heading": "5. Related Work",
      "text": [
        "We briefly mention the approaches to quantification of some research related to the bracketing FST model in purpose or coverage.",
        "TEL (En-driss, 1998) represents universally quantified expressions like unqualified ones.",
        "TEL has numerical quantification and quantifier negation.",
        "TCNL (Han and Lavie, 2004) represents universal quantification as an enumeration.",
        "An unqualified expression denotes an underspecified time.",
        "Like TEL, TCNL has no explicit existential quantification.",
        "Ohlbach and Gabbay (1998) represent universal quantification with a parametrized modal operator \"always within a period\" and existential with \"sometime within a period\".",
        "Cukierman and Delgrande (1998) represent quantified expressions in a way resembling that of ours but unqualified expressions effectively as existentially quantified.",
        "TimeML (Sauri et al., 2006) represents quantification by quantifier and frequency attributes.",
        "OWL-Time (Pan and Hobbs, 2005) uses temporal aggregates for universal and numerical quantification."
      ]
    },
    {
      "heading": "6. Discussion and Further Work",
      "text": [
        "In our view, SCEs corresponding to typical quantified calendar phrases can be represented in the bracketing FST model fairly naturally, although the naturalness of representing unqualified, underspecified phrases collectively can be disputed, and the representation of anyMonday in every May is not compositional.",
        "Implication, in turn, would seem useful for representing a set of periods of time fully contained in another set of periods.",
        "Although some types of calendar information are impossible to represent exactly or naturally with finite-state methods, we find the bracketing FST model a promising representation for many common types.",
        "However, to be usable in practice, the model needs further work in both coverage and efficiency.",
        "Moreover, applications would benefit from a component to parse a (restricted) natural-language calendar phrase to an SCE and another one to generate the former from the latter."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "This paper represents independent work by the first author based on the suggestions of the second author and funded by the Graduate School of Language Technology in Finland.",
        "We thank the anonymous reviewers for their valuable comments."
      ]
    }
  ]
}
