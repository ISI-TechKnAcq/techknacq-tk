{
  "info": {
    "authors": [
      "Guy Perrier"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C00-2087",
    "title": "Interaction Grammars",
    "url": "https://aclweb.org/anthology/C00-2087",
    "year": 2000
  },
  "references": [
    "acl-J92-4004",
    "acl-P95-1021",
    "acl-P98-1058"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Interaction Grammars (IG) are a new linguistic formalism which is based on descriptions of underspecified trees in the framework of intuitionistic linear logic (ILL).",
        "Syntactic composition, which is expressed by deduction in linear logic, is controlled by a system of polarized features.",
        "In this way, parsing amounts to generating models of tree descriptions and it is implemented as a constraint satisfaction problem."
      ]
    },
    {
      "heading": "Introduction",
      "text": [
        "IG can be presented as an attempt to bring together fundamental ideas, sonic coming from Tree Adjoining Grammars (TAG) and others from Categorial Grammars (CG), in order to overcome the specific limitations of each of these formalisms.",
        "The computational and linguistic relevance of TAG lies in its adjunction operation (Joshi et al., 1975; Kroch and Joshi, 1985) but the simplicity of its mechanism has a counterpart in the inflation of the lexicons that arc required for expressing all grammatical phenomena of a language.",
        "Every time that a word is used in a new syntactic context, which can differ only by word order for example, a new elementary tree, which encodes this context, must be added to the lexicon in a direct manner or by means of a lexical rule.",
        "In this way, lexicons quickly become colossal, very awkward to use and very hard to maintain.",
        "Recent works aim to solve this problem by factorizing linguistic information with the notions of underspecified trees and tree descriptions.",
        "These notions were introduced for TAG by Vijay-Shanker with the motivation of making adjunction monotone (Vijay-Shanker, 1992).",
        "Now, they are exploited fruitfully in various directions: for structuring TAG lexicons in hierarchical systems of modules (Candito, 1999) or for expressing semantic ambiguity (Muskens and Krahmer, 1998; Egg et al., 1998) for instance.",
        "At the same time, these notions are a way of relaxing the primitive adjunction operation in order to capture linguistic phenomena: such a possibility is exploited by (Rainbow et al., 1995) within D-Tree Grammars and by (Kallmeyer, 1999) within Tree Description Grammars.",
        "Unfortunately, the counterpart of a more flexible framework is often over-generation and a loss of computational efficiency in the absence of principles for controlling syntactic composition.",
        "By looking at CG, we can find some answers to this preoccupation: a fundamental idea of CG is that grammatical constituents are viewed as consumable resources (Retore, 2000); these resources are divided into positive and negative resources which are complementary and search to neutralize themselves mutually.",
        "The core of CG is the Lambek Calculus (Lambek, 1958): by combining resource sensitivity and order sensitivity, this logic is a good candidate for representing the syntax of natural languages but at the same time, this combination entails a rigidity which limits its expressive power greatly.",
        "An appropriate way of relaxing this rigidity constitutes an important research area in CG (Moortgart, 1996).",
        "The principle of IG is to combine the powerful notion of underspecified tree description linked to the TAG philosophy with control of syntactic composition by a system of polarities in accordance with the CG philosophy.",
        "More precisely, the basic objects of IC are syntactic descriptions which express dependencies between syntactic constituents in the shape of underspecified trees.",
        "Word order is referred to the same level as morphological information, which is represented by a system of features which are linked to the nodes of syntactic descriptions.",
        "Whereas a feature is usually a pair (attribute, value), an IG feature is a triplet (attribute, polarity, value) where polarity can take one of the three values -1, 0 or +1 and behaves like an electrostatic charge: for instance, a noun phrase which is waiting to receive a syntactic function in a sentence, carries a negative feature of type funct while a finite verb which is searching for its subject, carries a positive feature funct with value sufj.",
        "Attraction between these dual features will make possible the fact that the verb finds its subject and, simultaneously, the noun phrase finds its function in the sentence.",
        "(Muskens and Krahmer, 1998) also recognized the necessity of introducing the notion of polarity in tree descriptions as a mechanism for controlling syntactic composition; the difference with respect to IG lies in the granularity of the polarization which is finer in IG: in their proposal, the polarized objects are constituents, that is description nodes, whereas in IG one constituent can include several features with opposite polarities.",
        "The framework which is chosen for representing syntactic descriptions in this paper is that of linear logic (Girard, 1.987), more precisely a fragment of ILL (Lincoln, 1992).",
        "The resource sensitivity of linear logic allows one to express the fact that polarized features behave as consumable resources in IG: a positive feature has to find its dual feature once and only once .",
        "If we try to use classical or intuitionistic logic for modelling IG, the contraction and weakening rules, which are inherent in these logics, entail a loss of resource-sensitivity: for instance, a verb could take two subjects by appealing to the contraction rule and some noun phrases would not need to find their syntactic role in a sentence by appealing to the weakening rule.",
        "By discarding these two rules, linear logic provides a framework that exactly corresponds to the \"electrostatic\" laws that control polarized features.",
        "In this framework, parsing takes the shape of logical deduction of closed syntactic descriptions from any syntactic descriptions: a description is said to be closed when it represents a completely specified syntactic tree where all features are neutralized.",
        "If linear logic provides an elegant framework for representing 1G, it gives no method for parsing efficiently and avoiding the combinatory explosion that may follow from the flexibility of the formalism.",
        "An answer to this problem is given by the paradigm of constraint solving.",
        "Parsing a phrase can be regarded as generating models of the partial description which is provided by a lexicon for the words of this phrase.",
        "The process is monotone and can be expressed as a constraint satisfaction problem.",
        "This constraint-based approach was inspired by the work of (Duchier and C., 1999; Duchier and Thater, 1999) on dominance constraints.",
        "(Blache, 1999) shows the advantages of such an approach both from a linguistic and computational viewpoint with the formalism that he proposes and he calls Property Grammars."
      ]
    },
    {
      "heading": "1 Syntactic descriptions as linear logic formulas",
      "text": [
        "IG are formally defined as an ILL theory.",
        "Basic objects are syntactic descriptions which are represented by linear logic formulas in the following form: Deser ::= D07114,11 I Feat I Deser Deser"
      ]
    },
    {
      "heading": "Deser Deser",
      "text": [
        "If a syntactic description concerns the dominance relation between syntactic constituents, it has the type Do7nin; if it concerns the features which are used for characterizing syntactic or semantic properties of constituents, it has the type Feat.",
        "Finally, a description can be built recursively from two descriptions in two ways, winch are expressed by the two linear logic conjunctions: the multiplicative tensor (0) and the additive with (&)."
      ]
    },
    {
      "heading": "1.1 Multiplicative and additive conjunction of resources in descriptions",
      "text": [
        "A description D1 0 D2 requires all resources of both descriptions Di and D2 while a description Di&D2 requires either the resources of Di or the resources of D2 but not both.",
        "This use of the two linear logic conjunctions is consistent with their left introduction rules in the linear sequent calculus:",
        "In tins way, it is possible to describe all syntactic configurations of a word with a single lexical entry under the form of a syntactic description: common parts of these configurations are factorized whereas specific parts are distributed into alternations linked together with the connective with.",
        "For instance, a possible lexical entry for the finite verb voit in French has the shape Awn, = Dr 0 (D2&D3) 0 (Di&D5): Di contains information related to the subject which is common to all uses of the verb voit; D2 expresses the canonical order subject-verb in the sentence that is headed by the verb voit whereas D3 expresses the reverse order for winch the subject must be realized under sonic conditions, such as in the phrase Marie (pie voit Jean; 12 expresses that the verb has an explicit object whereas D5 corresponds to circumstances where this object is not present, such as in the sentence Jean voit."
      ]
    },
    {
      "heading": "1.2 Underspecification of dominance between constituents",
      "text": [
        "A description of type DOnlirl, has the following form: D 071Lin ::= Node > [LNodes] I Node > Node I Node Node LNodes ::= c I Node LNodes A predicate N > [N1,..., Np] states that the constituent N is decomposed into the sub-constituents , Nr.",
        "The order between these sub-constituents is only used for identifying each one without any linguistic meaning; word order is dealt with at the same level as morphological information by means of features.",
        "A predicate N1 > N2 expresses that N2 is an immediate sub-constituent of Such a predicate is used when only partial information on the sub-constituents of a phrase is available.",
        "A predicate Ni >* N.2 expresses that N2 is embedded in N1 at an undetermined depth.",
        "For instance, if we continue with description Di related to the verb voit, we can assume that it contains the formula",
        "(N3 > [N4, N5]) 0 (N4 >* Ns) which is interpreted as follows: the verb phrase N3 is constituted of the verb N4 and its object N5; N6 represents the bare verb whereas N4 represents the verb which has been possibly modified by a clitic, a negation or an adverb.",
        "Underspecification of the dominance relation N4 >* N6 leaves all these modifications open.",
        "Underspecification of dominance between constituents goes beyond TAG adjunction in that the nodes winch are in a dominance relation do not necessarily have the same grammatical category and thus linguistic phenomena like wh-extraction can be expressed easily in this way."
      ]
    },
    {
      "heading": "1.3 Polarized and underspecified features",
      "text": [
        "Descriptions of type Feat, related to features, have the following form:",
        "A feature Node : Attr Pol Val is a triplet composed of an attribute Attr, a polarity Poi and a value Val associated with a syntactic node Node.",
        "Usually, a feature is defined as a pair (attribute, value).",
        "In IG, we add a polarity to this pair so that features behave like electrostatic charges: a positive feature Attr -+ Val seeks a negative feature Attr Val to neutralize it and conversely while a neutral feature Attr Val only acts as a filter through constraints on its value Val when it meets another feature of type Attr at the same node.",
        "In all cases, Val is either a constant which is selected from an infinite countable set Coast of feature values or a variable winch is selected from an infinite countable set Var of feature variables; then, its definition domain can be constrained by two kinds of predicates: Val E Dorn and Val V Dom; Dorn is a finite set of elements taken from Coast.",
        "Let us illustrate this presentation with a possible lexical entry for the proper noun Jean:",
        "Some features are neutral by nature like agreement features: gen=m (gender=male), num=sg (num-ber=singular), pers=3 (person=3).",
        "Others are polarized by nature too: for instance, features of type funet which express syntactic functions.",
        "In the example above, the feature of type fund; is negative because the noun phrase represented by N is waiting to receive a syntactic function (subject, object...); this function is not determined yet and thus it is represented by a variable The phonological form of a constituent is determined by a system of two features: piton which gives the effective phonological form of the constituent and ord which gives the order in which its immediate sub-constituents must be concatened to build this phonological form.",
        "For instance, we find the formula (N1 : ord V2) 0 (V2 E {12, 21}) in the description Dvoit to express that the clause which has the verb voit as its head and is represented by node .Arl is a concatenation subject-verb phrase (V2 = 12) or verb phrase-subject (V2 = 21).",
        "When a node has no children, two cases occur: the node has an empty phonological form and the value of the feature ord is 0 or the node is a lexical anchor and the value of the feature ord is I.",
        "In tins case, the feature piton is used for retrieving the effective phonological form, which can be verified in the description DJ„„.",
        "Polarization of phonological forms expresses that some constituents are capable of giving a phonological form while others are waiting for one.",
        "As the previous examples shows, this polarity is not carried by the feature phon but by the feature ord.",
        "The interest of giving privilege to the feature ord with respect to the feature piton, is twofold: we can determine its value for a given node without being aware of the phonological form of the children, the effective phonological form will be rebuilt step by step from the leaves to the root of the final syntactic tree as soon as possible; another interest is that features of type ord can be dealt with like all other features; in particular, we can apply to them the same type of constraints.",
        "Finally, it is interesting to mention that value sharing by different features is represented in an easy way by using a unique variable for the values of the concerned features.",
        "2 •Syntactic composition as deduction in a linear theory By choosing a logical framework for a formal definition of IG, we find a natural way of expressing syntactic composition by means of deduction in linear logic according to the paradigm \"parsing as de-duction\" of CG (for a broad survey of CG see (Retore, 2000)).",
        "An interaction grammar is lexicalized in the sense that; all linguistic resources are stored in a lexicon and these resources will be combined by using inference rules of the ILL deductive system for building the acceptable sentences of the corresponding language.",
        "Since syntactic descriptions use only a fragment of this logic and if we choose the framework of the sequent calculus, only seven ILL rules are useful:",
        "vx in G ri, r2 G",
        "With respect to the usual presentation of the ILL sequent calculus (Lincoln, 1992), axiom id is defined a bit differently but this definition is equivalent to the original one for the logical fragment used by IC.",
        "Rule Vi; is a first order rule which is used here for instantiating a node variable with a concrete node or a feature variable with a concrete feature value.",
        "Beside these general rules, we need proper axioms to express properties related to dominance relations, feature polarities, feature values and phonological forms.",
        "Concerning dominance relations, we have the following proper axiom schemes:",
        "Axiom scheme d1 expresses that immediate dominance is realized by a parent-children relation whereas axiom schemes (19 and d3 express that dominance is realized by finite sequences of parent-children relations (L and L' represent sequences of node variables).",
        "The behaviour of polarities is represented by the following proper axiom schemes:",
        "Properties related to feature domains and values are expressed by the following axiom schemes:",
        "In both axiom schemes, D represents a concrete finite set of feature values taken from Coast and U and \\ represent the usual operations of union and difference of sets.",
        "Finally, three axiom schemes are used for deducing the effective phonological form of a constituent from the order of the phonological forms of its children:",
        "Schemes phi and plat respectively correspond to empty categories and lexical anchors.",
        "In scheme phi, 0 is an abbreviation for (N : ord = c(a)); a is a permutation on [[1, which expresses an order for concatenating the phonological forms , v1, of the children nodes ,• of N and c(a) is a bi.jective encoding of this permutation with an integer.",
        "PI is an abbreviation for (N, : phon, = v1), ... , (N1, : ikon = v,,) and P2 an abbreviation for the product",
        "A particular interaction grammar G is defined by its vocabulary VocG and by a lexicon EcxG; the vocabulary Voca includes the words used for building the language CG generated by this grammar and the lexicon re:rG associates a syntactic description to each word of Voce.",
        "Now, we have to combine the resources provided by ,Cca:G by means of the inference rules and proper axioms of the linear theory T which has just been defined to compose well-formed and complete syntactic structures of G under the shape of closed syntactic descriptions.",
        "As a preliminary, we have to give a precise definition of a closed syntactic description: A closed syntactic description is a particular syntactic description in the shape S OF where S and F, respectively, represent the structural and feature parts of the description ?pith the following conditions:",
        "1.",
        "S is a product of predicates in the form (a > ... ,app, where a, ap represent concrete syntactic nodes, and the structure defined by all these parent-children relations is a tree; 2.",
        "F is a product of predicates in the form (a : attr -= v), 'where a, Off and v represent concrete atoms, and for each pair (a, attr) present in F, there is exactly one feature (a : attr = v) in F. 3.",
        "For every syntactic node a in S, there is a feature (n : phon = v) in F.",
        "Condition 1 guarantees that a closed syntactic description represents a completely specified tree.",
        "Condition 2 guarantees coherence and neutrality of the feature system which is attached at each syntactic node.",
        "Condition 3 guarantees the phonological well-formedness of the whole syntactic structure.",
        "Now, let us explain how G generates closed syntactic descriptions from a lexical entries D„,„ corresponding to a words w1, , iv„ taken from VocG.",
        "For this, we need an additional description D,.0„1, to represent the root of the final syntactic tree which has the form: (No >* Nl ) 0 • • • 0 (No >* Np) 0 (No : ord 10).",
        "Node No represents the root of the syntactic tree and , N1, are the nodes present in descriptions D,„,..., D„,,,.",
        "Then: A closed syntactic description D is said to be generated from the words , w„ by grammar G if the sequent V NV (Drooto D„,, 0 MD,„„) D is provable in the theory T (f and V represent all node variables and feature variables that are free in",
        "D describes a tree which represents the syntax of a phrase given by the feature pion of its root.",
        "If we add the predicate (N0 : ikon = w„) to Droot, we transform the generation of closed syntactic descriptions into parsing of the phrase iv] ...w„.",
        "By continuing with the verb voit, let us give a very simple illustration of tins mechanism.",
        "We assume that a lexicon provides us with three descriptions Dvait, Dit and DJea„ which respectively correspond to the finite verb voit, the personal pronoun i/ and the proper noun Jean.",
        "As it was described in subsection 1.1, Ruoff has the shape D1 ® (D2&,03) 0 (D4&D5) and it is schematized by the following diagram:",
        "To remain readable, the diagram includes only the most significant features of every node.",
        "The notation ord 12121 is an abbreviation for ord V with V E {12, 21} and ord < – means that the value of the feature ord is undetermined.",
        "The first additive component of description D7&D8 represents a choice between the absence of an explicit subject in the sentence beside the personal pronoun i/ such as in the sentence i/ voit Jean and the presence of tins subject such as in the sentence Jean voit-il ?.",
        "The second alternative entails that the sentence is interrogative if we ignore topi-calization, which explains description D8.",
        "The second additive component of description Dm D9SzDio, represents a choice between the declarative type and the interrogative type of the sentence which depends on the relative order between the verb and the clitic.",
        "Description DJea„ is reduced to the following single node: From the description V g V (Droot 0 Dvoit DJea)1 DO, it is possible to deduce three closed syntactic descriptions Da, Db and Dc, which respectively represent the syntax of the grammatical sentences :il voit Jean, voit-il Jean ?",
        "and Jean voit-il ?.",
        "In concrete terms, the deduction process that leads to these three solutions consists in plugging nodes of the initial descriptions with the aim of neutralizing all polarized features while respecting dominance and feature constrains.",
        "Let us detail the resulting description DI, by means of the syntactic tree it specifies:",
        "The closed syntactic description that specifies the tree above represents the syntactic structure of the sentence voit-il Jean ?.",
        "The numbers that label its nodes are the traces of the nodes of the descriptions that have been plugged ill the parsing process."
      ]
    },
    {
      "heading": "3 A constraint-based implementation",
      "text": [
        "From the viewpoint of a computer scientist, a linguistic model has to show not only expressive power but also computational tractability.",
        "In the previous section, we have shown that IG computations reduce to ILL proofs.",
        "For the logical fragment that we consider here, three logical rules are a source of non",
        "determinism in proof search: km, L2 and VL.",
        "This takes the shape of three kinds of choice points in the parsing process: selecting the pertinent branch for every additive conjunction, identifying some node variables and instantiating feature variables in an appropriate manner.",
        "The NP-completeness of the implicative fragment of ILL (Kanovich, 1992) shows that it is hopeless to find a general parsing algorithm for ICI that works in polynomial time in the worst cases.",
        "Experience has shown that, fortunately, these worst cases rarely occur in parsing natural languages.",
        "Nevertheless, the flexibility of IG entails a combinatory explosion of the parsing process if we use a \"generate and test\" method and leads us to choose a more appropriate method.",
        "The specification of our problem prompts us in a natural way to a constraint-based approach as it was suggested by some proposals for similar problems (Duchier and C., 1999; Duchier and Thater, 1999).",
        "The problem can be formulated as follows: Given a syntactic description Do, find all closed syntactic descriptions D such that V N vi7 Do D is provable in the theory (N and V respectively represent the node variables and the features variables VI , of Do).",
        "A. fundamental property of the deduction process that leads to a solution is monotonicity so that the problem can be expressed as a constraint satisfaction problem (CSP).",
        "A CSP is specified from a set of variables to which constraints are applied.",
        "Here, we consider three sets of variables, which correspond to the three kinds of choice points in the parsing process:",
        "1. the set {N1, , N„.}",
        "of syntactic node variables; 2. the set {y, ,..., yin} of feature variables; 3. the set {S1, , Sp} of selection variables; ev",
        "ery selection variable Si is an integer variable which is associated with a connective & of Do and which is used for indicating the rank of the component of the correspondent additive conjunction that is selected in the deduction.",
        "Selection and feature variables are considered as finite domain variables, which imply that all feature values are encoded as integers (one exception is that features of type phon remain strings).",
        "Node variables are encoded indirectly via finite set variables by using the method proposed in (Duchier and C., 1999).",
        "Every node variable Ni is associated with five finite set variables eq(i), up(i), down(i), side(i) and alt(i) which are used for locating the node i with respect; to the others in the system of dominance relations.",
        "Because of the presence of additive conjunctions, a node i which is present in the description Do may be absent from a solution.",
        "In this case, eq(i) = alt(i) = 1[1, nn{i}, up(i) = down(i) = side(i) = 0; in the case that i is present in a solution, alt(i) represents the nodes that arc not selected in the solution whereas the selected nodes are distributed into the four sets eq(i), up(i), down(i) and side(i) according to their relative position with respect to i.",
        "Constraints on the variables of the problem are divided into two parts:",
        "• general constraints guarantee that the solutions D are effective closed syntactic descriptions; • specific constraints guarantee that the solutions D are models of the initial description Do."
      ]
    },
    {
      "heading": "3.1 General constraints",
      "text": [
        "Treeness constraints For every node i, the partition of [1, nil between eq(i), up(i), down(i), side(i) and alt(i) guarantees that the solution is a directed acyclic graph (DAG).",
        "For expressing that all dominance relations winch structure a solution must only be realized by parent-children relations, we must introduce constraints in which variables of type eq(i) and selection variables appear for expressing that every selected node variable must be identified with a node variable which is the parent in a selected parent-children relation.",
        "In order to express that a solution is more than a DAG, that is a tree, we must add the following constraint: for every selected parent-children relation, the sets down(j) for the children j present in tins relation must be disjoint.",
        "Such a condition can be dropped if we want to extend the formalism to take into account; resource sharing like coordination for instance; in tins case, syntactic structures are no longer trees but DAGs.",
        "Neutrality constraints Feature neutrality of a solution is guaranteed by constraints which also appeal to variables of type eq(i) and selection variables: for each attribute Attr, we consider two sets of sets in the shape eq(i): the first corresponds to all selected predicates in the form (Ni : Attr 17) and flue second to all selected predicates in the form (Ni : Attr – > V).",
        "The elements of each of these sets must be disjoint sets and every element of the first set must be identified with one element of the second and conversely.",
        "Other general constraints related to features and phonological forms are trivial."
      ]
    },
    {
      "heading": "3.2 Specific constraints",
      "text": [
        "Such constraints are determined by Do.",
        "Dominance constraints are easily implemented by combining selection variables and variables of type eq(i), up(i), down(i), side(i) (Duchier and Thater, 1999).",
        "Feature constraints concern both feature variables and selection variables which are all finite domain variables so that their implementation appeals to classical tools in the domain of constraint programming."
      ]
    },
    {
      "heading": "3.3 A prototype parser for French",
      "text": [
        "We have implemented a prototype parser for French.",
        "It is written in the language Oz (Smolka, 1995) which combines various aspects and modules, including constraint programming.",
        "Though the linguistic coverage of the lexicon is still limited, we have learnt lessons from the first experiments: in particular, neutrality constraints play a central role for restricting the search space, which confirms the importance of polarities for the computational efficiency."
      ]
    },
    {
      "heading": "Conclusion",
      "text": [
        "Starting from TAG and CG, we have presented a linguistic formalism which aims at better capturing the flexibility of natural language by using two notions as its basis: underspecification and polarities.",
        "In some sense, they correspond to two important properties of natural language: ambiguity and resource sensitivity.",
        "To regard parsing as a constraint satisfaction problem fits in with the flexibility of the formalism in terms of computational efficiency but, at the same time, it allows to go towards robustness beyond a. traditional view of parsing in which only grammatical and completely specified structures are taken into account.",
        "The success of IG does not essentially depend on the formal properties that are usually exhibited for grammatical formalisms: the characterization of the class of languages that are generated by these grammars or the complexity of general parsing algorithms.",
        "Formal properties matter but with respect to an essential goal: to extend the linguistic coverage of IG from toy lexicons to massive lexical databases.",
        "For this, IG have some advantages by making it easily to factorize and modularize information: such properties are decisive when one wants to extract information from a lexical database efficiently or to update data while maintaining the coherence of the whole base.",
        "The success of IG will also depend on their capacity to integrate other linguistic levels than the syntactic level, the semantic level especially."
      ]
    }
  ]
}
