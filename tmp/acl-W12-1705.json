{
  "info": {
    "authors": [
      "Marten van Schijndel",
      "Andy Exley",
      "William Schuler"
    ],
    "book": "Proceedings of the 3rd Workshop on Cognitive Modeling and Computational Linguistics (CMCL 2012)",
    "id": "acl-W12-1705",
    "title": "Connectionist-Inspired Incremental PCFG Parsing",
    "url": "https://aclweb.org/anthology/W12-1705",
    "year": 2012
  },
  "references": [
    "acl-J01-2004",
    "acl-J10-1001",
    "acl-J93-2004",
    "acl-N01-1021",
    "acl-N07-1051",
    "acl-P06-1055"
  ],
  "sections": [
    {
      "text": [
        "In: R. Levy & D. Reitter (Eds.",
        "), Proceedings of the 3rd Workshop on Cognitive Modeling and Computational Linguistics (CMCL 2012), pages 51?60, Montre?al, Canada, June 7, 2012. c?2012 Association for Computational Linguistics"
      ]
    },
    {
      "heading": "Abstract",
      "text": [
        "Probabilistic context-free grammars (PCFGs) are a popular cognitive model of syntax (Ju-rafsky, 1996).",
        "These can be formulated to be sensitive to human working memory constraints by application of a right-corner transform (Schuler, 2009).",
        "One side-effect of the transform is that it guarantees at most a single expansion (push) and at most a single reduction (pop) during a syntactic parse.",
        "The primary finding of this paper is that this property of right-corner parsing can be exploited to obtain a dramatic reduction in the number of random variables in a probabilistic sequence model parser.",
        "This yields a simpler structure that more closely resembles existing simple recurrent network models of sentence comprehension."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "There may be a benefit to using insights from human cognitive modelling in parsing.",
        "Evidence for incremental processing can be seen in garden pathing (Bever, 1970), close shadowing (Marslen-Wilson, 1975), and eyetracking studies (Tanenhaus et al., 1995; Allopenna et al., 1998; Altmann and Kamide, 1999), which show humans begin attempting to process a sentence immediately upon receiving linguistic input.",
        "In the cognitive science community, this incremental interaction has often been modelled using recurrent neural networks (Elman, 1991; Mayberry and Miikkulainen, 2003), which utilize a hidden context with a severely bounded representational capacity (a fixed number of continuous units or dimensions), similar to models of activation-based memory in the prefrontal cortex (Botvinick, 2007), with the interesting possibility that the distributed behavior of neural columns (Horton and Adams, 2005) may directly implement continuous dimensions of recurrent hidden units.",
        "This paper presents a refinement of a factored probabilistic sequence model of comprehension (Schuler, 2009) in the direction of a recurrent neural network model and presents some observed efficiencies due to this refinement.",
        "This paper will adopt an incremental probabilistic context-free grammar (PCFG) parser (Schuler, 2009) that uses a right-corner variant of the left-corner parsing strategy (Aho and Ullman, 1972) coupled with strict memory bounds, as a model of human-like parsing.",
        "Syntax can readily be approximated using simple PCFGs (Hale, 2001; Levy, 2008; Demberg and Keller, 2008), which can be easily tuned (Petrov and Klein, 2007).",
        "This paper will show that this representation can be streamlined to exploit the fact that a right-corner parse guarantees at most one expansion and at most one reduction can take place after each word is seen (see Section 2.2).",
        "The primary finding of this paper is that this property of right-corner parsing can be exploited to obtain a dramatic reduction in the number of random variables in a probabilistic sequence model parser (Schuler, 2009) yielding a simpler structure that more closely resembles connectionist models such as TRACE (McClelland and Elman, 1986), Short-list (Norris, 1994; Norris and McQueen, 2008), or recurrent models (Elman, 1991; Mayberry and Miikkulainen, 2003) which posit functional units only for cognitively-motivated entities.",
        "The rest of this paper is structured as follows: Section 2 gives the formal background of the right-corner parser transform and probabilistic sequence",
        "model parsing.",
        "The simplification of this model is described in Section 3.",
        "A discussion of the interplay between cognitive theory and computational modelling in the resulting model may be found in Section 4.",
        "Finally, Section 5 demonstrates that such factoring also yields large benefits in the speed of probabilistic sequence model parsing."
      ]
    },
    {
      "heading": "2 Background 2.1 Notation",
      "text": [
        "Throughout this paper, PCFG rules are defined over syntactic categories subscripted with abstract tree addresses (c??).",
        "These addresses describe a node's location as a path from a given ancestor node.",
        "A 0 on this path represents a leftward branch and a 1 a rightward branch.",
        "Positions within a tree are represented by subscripted ?",
        "and ?",
        "so that c?0 is the left child of c?",
        "and c?1 is the right child of c?.",
        "The set of syntactic categories in the grammar is denoted by C. Finally, J?K denotes an indicator probability which is 1 if ?",
        "and 0 otherwise."
      ]
    },
    {
      "heading": "2.2 Right-Corner Parsing",
      "text": [
        "Parsers such as that of Schuler (2009) model hierarchically deferred processes in working memory using a coarse analogy to a pushdown store indexed by an embedding depth d (to a maximum depth D).",
        "To make efficient use of this store, a CFG G must be transformed using a right-corner transform into another CFG G?",
        "with no right recursion.",
        "Given an optionally arc-eager attachment strategy, this allows the parser to clear completed parse constituents from the set of incomplete constituents in working memory much earlier than with a conventional syntactic structure.",
        "The right-corner transform operates deterministically over a CFG following three mapping rules:",
        "(2) c??",
        "?",
        "x??",
        "?",
        "G, c?",
        "?",
        "C c?",
        "?",
        "c?/c??",
        "c??",
        "?",
        "G?",
        "(3)",
        "A bottom-up incremental parsing strategy combined with the way the right-corner transform pulls each subtree into a left-expanding hierarchy ensures at most a single expansion (push) will occur at any given observation.",
        "That is, each new observation will be the leftmost leaf of a right-expanding subtree.",
        "Additionally, by reducing multiply right-branching subtrees to single rightward branches, the transform also ensures that at most a single reduction (pop) will take place at any given observation.",
        "Schuler et al. (2010) show near complete coverage of the Wall Street Journal portion of the Penn Treebank (Marcus et al., 1993) can be achieved with a right-corner incremental parsing strategy using no more than four incomplete contituents (deferred processes), in line with recent estimates of human working memory capacity (Cowan, 2001).",
        "Section 3 will show that, in addition to being desirable for bounded working memory restrictions, the single expansion/reduction guarantee reduces the search space between words to only two decision points ?",
        "whether to expand and whether to reduce.",
        "This allows rapid processing of each candidate parse within a sequence modelling framework."
      ]
    },
    {
      "heading": "2.3 Model Formulation",
      "text": [
        "This transform is then extended to PCFGs and integrated into a sequence model parser.",
        "Training on an annotated corpus yields the probability of any given syntactic state executing an expansion (creating a syntactic subtree) or a reduction (completing a syntactic subtree) to transition from every sufficiently probable (in this sense active) hypothesis in the working memory store.",
        "The probability of the most likely sequence of store states q?1..D1..T can then be defined as the product of nonterminal ?Q, preterminal ?P,d, and termi",
        "where all incomplete constituents qdt are factored into active adt and awaited bdt components: qdt def= adt /bdt (5) and d?",
        "determines the deepest non-empty incomplete constituent of q1..Dt :",
        "d?",
        "def= max{d |qdt 6= ???}",
        "(6) The preterminal model ?P,d denotes the expectation of a subtree containing a given preterminal, expressed in terms of side-and depth-specific grammar rules P?Gs,d(c?",
        "?",
        "c?0 c?1) and expected counts of left progeny categories E?G?,d(c?",
        "and the terminal model ?X is simply:",
        "The Schuler (2009) nonterminal model ?Q is computed from a depth-specific store element model ?Q,d and a large final state model ?F,d:",
        "After each time step t and depth d, ?Q generates a set of final states to generate a new incomplete constituent qdt .",
        "These final states fdt are factored into categories cfdt and boolean variables (0 or 1) encoding whether a reduction has taken place at depth d and time step t. The depth-specific final state model ?F,d gives the probability of generating a final state fdt from the preceding qdt and qd?1t which is the probability of executing a reduction or consolidation of those incomplete constituents:",
        "With these depth-specific fdt in hand, the model can calculate the probabilities of each possible qdt for each d and t based largely on the probability of transitions (?Q,d,T ) and expansions (?Q,d,E) from the incomplete constituents at the previous time step:",
        "if fd+1t = ??",
        "?, fdt = ???",
        ": Jqdt = qdt?1K if fd+1t 6= ??",
        "?, fdt = ???",
        ": P?Q,d,T (qdt |fd+1t fdt qdt?1 qd?1t ) if fd+1t 6= ??",
        "?, fdt 6= ???",
        ": P?Q,d,E (qdt |qd?1t ) (11) This model is shown graphically in Figure 1.",
        "The probability distributions over reductions (?F,d,R), transitions (?Q,d,T ) and expansions (?Q,d,E) are then defined, also in terms of side-and depth-specific grammar rules P?Gs,d(c?",
        "?",
        "c?0 c?1) and expected counts of left progeny categories E?G?,d(c?",
        "The subcomponent models are obtained by applying the transform rules to all possible trees proportionately to their probabilities and marginalizing over all constituents that are not used in the models: ?",
        "for active transitions (from Transform Rule 1):",
        "?",
        "for awaited transitions (Transform Rule 2):"
      ]
    },
    {
      "heading": "3 Simplified Model",
      "text": [
        "As seen in the previous section, the right-corner parser of Schuler (2009) makes the center embedding depth explicit and each memory store element is modelled as a combination of an active and an awaited component.",
        "Each input can therefore either increase (during an expansion) or decrease (during a reduction) the store of incomplete constituents or it can alter the active or awaited component of the deepest incomplete constituent (the affectable element).",
        "Alterations of the awaited component of the affectable element can be thought of as the expansion and immediate reduction of a syntactic constituent.",
        "The grammar models transitions in the active component implicitly, so these are conceptualized as consisting of neither an expansion nor a reduction.",
        "Removing some of the variables in this model results in one that looks much more like a neural network (McClelland and Elman, 1986; Elman, 1991; Norris, 1994; Norris and McQueen, 2008) in that all remaining variables have cognitive correllates ?",
        "in particular, they correspond to incomplete constituents in working memory ?",
        "while still maintaining the ability to explicitly represent phrase structure.",
        "This section will demonstrate how it is possible to exploit this to obtain a large reduction in the number of modelled random variables.",
        "In the Schuler (2009) sequence model, eight random variables are used to model the hidden states at each time step (see Figure 1).",
        "Half of these variables are joint consisting of two further (active and awaited) constituent variables, while the other half are merely over intermediate final states.",
        "Although the entire store is carried from time step to time step, only one memory element is affectable at any one time, and this element may be reduced zero or",
        "one times (using an intermediate final state), and expanded zero or one times (using an incomplete constituent state), yielding four possible combinations.",
        "This means the model only actually needs one of its intermediate final states.",
        "The transition model ?Q can therefore be simplified with terms ?F,d for the probability of expanding the incomplete constituent at d, and terms ?A,d and ?B,d for reducing the resulting constituent (defining the active and awaited components of a new incomplete constituent), along with terms for copying incomplete constituents above this affectable element, and for emptying the elements be",
        "The first element of the sum in Equation 19 computes the probability of a reduction with no expansion (decreasing d?).",
        "The second corresponds to the probability of a store undergoing neither an expansion nor a reduction (a transition to a new active constituent at the same embedding depth).",
        "In the third is the probability of an expansion and a reduction (a transition among awaited constituents at the same embedding depth).",
        "Finally, the last term yields the probability of an expansion without a reduction (increasing d?).",
        "From Equation 19 it may be seen that the unaffected store elements of each time step are maintained sans change as guaranteed by the single-reduction feature of the right-corner parser.",
        "This results in a large representational economy by making the majority of store state decisions deterministic.",
        "This representational economy will later translate into computational efficiencies (see section 5).",
        "In this sense, cognitive modelling contributes to a practical speed increase.",
        "Since the bulk of the state remains the same, the recognizer can access the affectable variable and operate solely over the transition possibilities from that variable to calculate the distribution over store states for the next time step to explore.",
        "Reflecting this change, the hidden states now model a single final-state variable (f) for results of the expansion decision, and the affectable variable resulting from the reduction decision (both its active (a) and awaited (b) categories), as well as the preterminal state (p) defined in the previous section.",
        "These models are again expressed in terms of side-and depth-specific grammar rules P?Gs,d(c?",
        "?",
        "c?0 c?1) and expected counts of left progeny categories E?G?,d(c?",
        "??",
        "c??",
        "...) (see Appendix A).",
        "Expansion probabilities are modelled as a binary decision depending on whether or not the awaited component of the affectable variable c?",
        "is likely to expand immediately into an anticipated preterminal c??",
        "(resulting in a non-empty final state: ?+?)",
        "or if intervening embeddings are necessary given the affectable active component (yielding no final state: ???",
        "):",
        "The active component category c??",
        "is defined as depending on the category of the awaited component above it c?",
        "and its left-hand child c?",
        "?0:",
        "The awaited component category c?1 is defined as",
        "depending on the category of its parent c?",
        "and the preceding sibling c?0:",
        "Both of these make sense given the manner in which the right-corner parser shifts dependencies to the left down the tree in order to obtain incremental information about upcoming constituents."
      ]
    },
    {
      "heading": "3.1 Graphical Representation",
      "text": [
        "In order to be represented graphically, the working memory store ?Q is factored into a single expansion term ?F and a product of depth-specific reduction",
        "and the depth-specific reduction model ?Q,d is factored into individual decisions over each random",
        "This dependency structure is represented graphically in Figure 2.",
        "The first conditional in Equation 24 checks whether the input causes a reduction but no expansion (completing a subtree parse).",
        "In this case, d?",
        "is reduced from the previous t, and the relevant qdt?1 is copied to qdt except the awaited constituent is altered to reflect the completion of its preceding awaited subtree.",
        "In the second case, the parser makes an active transition as it completes a left subtree and begins exploring the right subtree.",
        "The third case is similar to the first except it transitions between two like depths (awaited transition), and depends on the preterminal just seen to contrive a new subtree to explore.",
        "In the fourth case, d?",
        "is incremented as another incomplete constituent opens up in working memory.",
        "The final two cases simply update the unaffected store states to reflect their previous states at time t?",
        "1."
      ]
    },
    {
      "heading": "4 Discussion",
      "text": [
        "This factoring of redundant hidden states out of the Schuler (2009) probabilistic sequence model shows that cognitive modelling can more closely approximate a simple recurrent network model of language processing (Elman, 1991).",
        "Probabilistic sequence model parsers have previously been modelled with random variables over incomplete constituents (Schuler, 2009).",
        "In the current implementation, each variable can be thought of as a bank of artificial neurons.",
        "These artificial neurons inhibit one another through the process of normalization.",
        "Conversely, they activate artificial neurons at subsequent time steps by contributing probability mass through the transformed grammar.",
        "This point was made by Norris and McQueen (2008) with respect to lexical access; this model extends it to parsing.",
        "Recurrent networks can parse simple sentences but run into problems when running over more complex datasets.",
        "This limitation comes from the unsupervised methods typically used to train them, which have difficulty scaling to sufficiently large training sets for more complex constructions.",
        "The approach described in this paper uses a hidden context similar to that of a recurrent network to inform the progression of the parse, except that the context is in terms of random variables with distributions over a set of explicit syntactic categories.",
        "By framing the variable domains in a linguistically-motivated fashion, the problem of acquisition can be divested from the problem of processing.",
        "This paper then uses the semi-supervised grammar training of Petrov et al. (2006) in order to develop a simple, accurate model for broad-coverage parsing independent of scale.",
        "Like Schuler (2009), the incremental parser discussed here operates in O(n) time where n is the length of the input.",
        "Further, by its incremental nature, this parser is able to run continuously on a stream of input, which allows any other processes dependent on the input (such as discourse integration) to run in parallel regardless of the length of the input."
      ]
    },
    {
      "heading": "5 Computational Benefit",
      "text": [
        "Due to the decreased number of decisions required by this simplified model, it is substantially faster than previous similar models.",
        "To test this speed increase, the simplified model was compared with that of Schuler (2009).",
        "Both parsers used a grammar that had undergone 5 iterations of the Petrov et al. (2006) split-merge-smooth algorithm as found to be optimal by Petrov and Klein (2007), and both used a beam-width of 500 elements.",
        "Sections 02-21 of the Wall Street Journal Treebank were used in training the grammar induction for both parsers according to Petrov et al. (2006), and Section 23 was used for evaluation.",
        "No tuning was done as part of the transform to a sequence model.",
        "Speed results can be seen in Table 1.",
        "While the speed is not state-of-the-art in the field of parsing at large, it does break new ground for factored sequence model parsers.",
        "To test the accuracy of this parser, it was compared using varying beam-widths to the Petrov and Klein (2007) and Roark (2001) parsers.",
        "With the exception of the Roark (2001) parser, all parsers used 5 iterations of the Petrov et al. (2006) split",
        "els.",
        "Numbers in parentheses are number of parallel activated hypotheses merge-smooth algorithm, and the training and testing datasets remained the same.",
        "These results may be seen in Table 2.",
        "Note that the Petrov and Klein (2007) parser allows unary branching within the phrase structure, which is not well-defined under the right-corner transform.",
        "To obtain a fair comparison, it was also run with strict binarization.",
        "The current approach achieves comparable accuracy to the Petrov and Klein (2007) parser assuming a strictly binary-branching phrase structure."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "The primary goal of this paper was to demonstrate that a cognitively-motivated factoring of an existing probabilistic sequence model parser (Schuler, 2009) is not only more attractive from a modelling perspective but also more efficient.",
        "Such factoring yields a much slimmer model where every variable has cognitive correlates to working memory elements.",
        "This also renders several transition probabilities deterministic and the ensuing representational economy leads to a 5-fold increase in parsing speed.",
        "The results shown here suggest cognitive modelling can lead to computational benefits."
      ]
    },
    {
      "heading": "References",
      "text": []
    },
    {
      "heading": "A Grammar Formulation",
      "text": [
        "Given D memory elements indexed by d (see Section 2.2) and a PCFG ?G, the probability ?",
        "(k)Ts,d of a tree rooted at a left or right sibling s ?",
        "{L,R} of category c?",
        "?",
        "C requiring d ?",
        "1..D memory elements is defined recursively over paths of increasing",
        "Note that the center embedding depth d increases only for left children of right children.",
        "This is because in a binary branching structure, center embeddings manifest as zigzags.",
        "Since the model is also sensitive to the depth d of each decomposition, the side-and depth-specific probabilities of ?GL,d and ?GR,d are defined as follows:",
        "The model will also need an expected count E?G?,d(c?",
        "??",
        "c??",
        "...) of the given child constituent c??",
        "dominating a prefix of constituent c?.",
        "Expected versions of these counts may later be used to derive probabilities of memory store state transitions (see Sections 2.3, 3).",
        "Equation 32 gives the probability of a constituent appearing as an observation, and Equation 33 gives the probability of a constituent appearing as a left",
        "child.",
        "Equation 34 extends the previous two equations to account for a constituent appearing at an arbitrarily deep embedded path of length k. Taking the sum of all k path lengths (as in Equation 35) allows the model to account for constituents anywhere in the left progeny of the dominated subtree.",
        "Similarly, Equation 36 gives the expectation that the constituent is non-immediately dominated by c?.",
        "In practice the infinite sum is estimated to some constant K using value iteration (Bellman, 1957)."
      ]
    }
  ]
}
