{
  "info": {
    "authors": [
      "Sebastian Riedel",
      "James Clarke"
    ],
    "book": "Conference on Empirical Methods in Natural Language Processing",
    "id": "acl-W06-1616",
    "title": "Incremental Integer Linear Programming for Non-Projective Dependency Parsing",
    "url": "https://aclweb.org/anthology/W06-1616",
    "year": 2006
  },
  "references": [
    "acl-E06-1011",
    "acl-H05-1066",
    "acl-P01-1030",
    "acl-P04-1054",
    "acl-P05-1012",
    "acl-P05-1067",
    "acl-W04-2401",
    "acl-W04-2407",
    "acl-W06-2932",
    "acl-W96-0102"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Integer Linear Programming has recently been used for decoding in a number of probabilistic models in order to enforce global constraints.",
        "However, in certain applications, such as non-projective dependency parsing and machine translation, the complete formulation of the decoding problem as an integer linear program renders solving intractable.",
        "We present an approach which solves the problem incrementally, thus we avoid creating intractable integer linear programs.",
        "This approach is applied to Dutch dependency parsing and we show how the addition of linguistically motivated constraints can yield a significant improvement over state-of-the-art."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Many inference algorithms require models to make strong assumptions of conditional independence between variables.",
        "For example, the Viterbi algorithm used for decoding in conditional random fields requires the model to be Markovian.",
        "Strong assumptions are also made in the case of McDonald et al.’s (2005b) non-projective dependency parsing model.",
        "Here attachment decisions are made independently of one another'.",
        "However, often such assumptions can not be justified.",
        "For example in dependency parsing, if a subject has already been identified for a given verb, then the probability of attaching a second subject to the verb is zero.",
        "Similarly, if we find that one coordination argument is a noun, then the other argu' If we ignore the constraint that dependency trees must be cycle-free (see sections 2 and 3 for details).",
        "ment cannot be a verb.",
        "Thus decisions are often codependent.",
        "Integer Linear Programming (ILP) has recently been applied to inference in sequential conditional random fields (Roth and Yih, 2004), this has allowed the use of truly global constraints during inference.",
        "However, it is not possible to use this approach directly for a complex task like non-projective dependency parsing due to the exponential number of constraints required to prevent cycles occurring in the dependency graph.",
        "To model all these constraints explicitly would result in an ILP formulation too large to solve efficiently (Williams, 2002).",
        "A similar problem also occurs in an ILP formulation for machine translation which treats decoding as the Travelling Salesman Problem (Germann et al., 2001).",
        "In this paper we present a method which extends the applicability of ILP to a more complex set of problems.",
        "Instead of adding all the constraints we wish to capture to the formulation, we first solve the program with a fraction of the constraints.",
        "The solution is then examined and, if required, additional constraints are added.",
        "This procedure is repeated until all constraints are satisfied.",
        "We apply this dependency parsing approach to Dutch due to the language’s non-projective nature, and take the parser of McDonald et al.",
        "(2005b) as a starting point for our model.",
        "In the following section we introduce dependency parsing and review previous work.",
        "In Section 3 we present our model and formulate it as an ILP problem with a set of linguistically motivated constraints.",
        "We include details of an incremental algorithm used to solve this formulation.",
        "Our experimental set-up is provided in Section 4 and is followed by results in Section 5 along with runtime experiments.",
        "We finally discuss fu",
        "ture research and potential improvements to our approach."
      ]
    },
    {
      "heading": "2 Dependency Parsing",
      "text": [
        "Dependency parsing is the task of attaching words to their arguments.",
        "Figure 1 shows a dependency graph for the Dutch sentence “I’ll come at twelve and then you’ll get what you deserve” (taken from the Alpino Corpus (van der Beek et al., 2002)).",
        "In this dependency graph the verb “kom” is attached to its subject “ik”.",
        "“kom” is referred to as the head of the dependency and “ik” as its child.",
        "In labelled dependency parsing edges between words are labelled with the relation captured.",
        "In the case of the dependency between “kom” and “ik” the label would be “subject”.",
        "In a dependency tree every token must be the child of exactly one other node, either another token or the dummy root node.",
        "By definition, a dependency tree is free of cycles.",
        "For example, it must not contain dependency chains such as “en” __+ “kom” __+ “ik” – * “en”.",
        "For a more formal definition see previous work (Nivre et al., 2004).",
        "An important distinction between dependency trees is whether they are projective or non-projective.",
        "Figure 1 is an example of a projective dependency tree, in such trees dependencies do not cross.",
        "In Dutch and other flexible word order languages such as German and Czech we also encounter non-projective trees, in these cases the trees contain crossing dependencies.",
        "Dependency parsing is useful for applications such as relation extraction (Culotta and Sorensen, 2004) and machine translation (Ding and Palmer, 2005).",
        "Although less informative than lexicalised phrase structures, dependency structures still capture most of the predicate-argument information needed for applications.",
        "It has the advantage of being more efficient to learn and parse.",
        "McDonald et al.",
        "(2005a) introduce a dependency parsing framework which treats the task as searching for the projective tree that maximises the sum of local dependency scores.",
        "This frame-Figure 2: An incorrect partial dependency tree.",
        "The verb “krijg” is incorrectly coordinated with the preposition “om”.",
        "work is efficient and has also been extended to non-projective trees (McDonald et al., 2005b).",
        "It provides a discriminative online learning algorithm which when combined with a rich feature set reaches state-of-the-art performance across multiple languages.",
        "However, within this framework one can only define features over single attachment decisions.",
        "This leads to cases where basic linguistic constraints are not satisfied (e.g. verbs with two subjects or incompatible coordination arguments).",
        "An example of this for Dutch is illustrated in Figure 2 which was produced by the parser of McDonald et al.",
        "(2005b).",
        "Here the parse contains a coordination of incompatible word classes (a preposition and a verb).",
        "Our approach is able to include additional constraints which forbid configurations such as those in Figure 2.",
        "While McDonald and Pereira (2006) address the issue of local attachment decisions by defining scores over attachment pairs, our solution is more general.",
        "Furthermore, it is complementary in the sense that we could formulate their model using ILP and then add constraints.",
        "The method we present is not the only one that can take global constraints into account.",
        "Deterministic dependency parsing (Nivre et al., 2004; Yamada and Matsumoto, 2003) can apply global constraints by conditioning attachment decisions on the intermediate parse built.",
        "However, for efficiency a greedy search is used which may produce suboptimal solutions.",
        "This is not the case when using ILP."
      ]
    },
    {
      "heading": "3 Model",
      "text": [
        "Our underlying model is a modified labelled version2 of McDonald et al.",
        "(2005b):",
        "where x is a sentence, y is a set of labelled dependencies, f (i, j, l) is a multidimensional feature vector representation of the edge from token i to token j with label l and w the corresponding weight vector.",
        "For example, a feature f101 in f could be:",
        "where t(i) is the word at token i and p(j) the part-of-speech tag at token j. Decoding in this model amounts to finding the y for a given x that maximises s(x, y):",
        "while fulfilling the following constraints: T1 For every non-root token in x there exists exactly one head; the root token has no head.",
        "T2 There are no cycles.",
        "Thus far, the formulation follows McDonald et al.",
        "(2005b) and corresponds to the Maximum Spanning Tree (MST) problem.",
        "In addition to T1 and T2, we include a set of linguistically motivated constraints: A1 Heads are not allowed to have more than one outgoing edge labelled l for all l in a set of labels U. C1 In a symmetric coordination there is exactly one argument to the right of the conjunction and at least one argument to the left.",
        "C2 In an asymmetric coordination there are no arguments to the left of the conjunction and at least two arguments to the right.",
        "C3 There must be at least one comma between subsequent arguments to the left of a symmetric coordination.",
        "C4 Arguments of a coordination must have compatible word classes.",
        "P1 Two dependencies must not cross if one of their labels is in a set of labels P. A1 covers constraints such as “there can only be one subject” if U contains “subject” (see Section 4.4 for more details of U).",
        "C1 applies to configurations which contain conjunctions such as “en”,“of” or “maar” (“and”, “or” and “but”).",
        "C2 will rule-out settings where a conjunction such as “zowel” (translates as “both”) having arguments to its left.",
        "C3 forces coordination arguments to the left of a conjunction to have commas in between.",
        "C4 avoids parses in which incompatible word classes are coordinated, such as nouns and verbs.",
        "Finally, P1 allows selective projective parsing: we can, for instance, forbid the crossing of “Noun-Determiner” dependencies if we add the corresponding label type to P(see Section 4.4 for more details of P) .",
        "If we extend P to contain all labels we forbid any type of crossing dependencies.",
        "This corresponds to projective parsing."
      ]
    },
    {
      "heading": "3.1 Decoding",
      "text": [
        "McDonald et al.",
        "(2005b) use the Chu-LiuEdmonds (CLE) algorithm to solve the maximum spanning tree problem.",
        "However, global constraints cannot be incorporated into the CLE algorithm (McDonald et al., 2005b).",
        "We alleviate this problem by presenting an equivalent Integer Linear Programming formulation which allows us to incorporate global constraints naturally.",
        "Before giving full details of our formulation we first introduce some of the concepts of linear and integer linear programming (for a more thorough introduction see Winston and Venkatara-manan (2003)).",
        "Linear Programming (LP) is a tool for solving optimisation problems in which the aim is to maximise (or minimise) a given linear function with respect to a set of linear constraints.",
        "The function to be maximised (or minimised) is referred to as the objective function.",
        "A number of decision variables are under our control which exert influence on the objective function.",
        "Specifically, they have to be optimised in order to maximise (or min-imise) the objective function.",
        "Finally, a set of constraints restrict the values that the decision variables can take.",
        "Integer Linear Programming is an extension of linear programming where all decision variables must take integer values.",
        "There are several explicit formulations of the MST problem as an integer linear program in the literature (Williams, 2002).",
        "They are based on the concept of eliminating subtours (cycles), cuts (disconnections) or requiring intervertex flows (paths).",
        "However, in practice these formulations cause long solve times – as the first two meth",
        "Algorithm 1 Incremental Integer Linear Programming",
        "ods yield an exponential number of constraints.",
        "Although the latter scales cubically, it produces non-fractional solutions in its relaxed version; this causes long runtimes for the branch and bound algorithm (Williams, 2002) commonly used in integer linear programming.",
        "We found out experimentally that dependency parsing models of this form do not converge on a solution after multiple hours of solving, even for small sentences.",
        "As a workaround for this problem we follow an incremental approach akin to the work of Warme (1998).",
        "Instead of adding constraints which forbid all possible cycles in advance (this would result in an exponential number of constraints) we first solve the problem without any cycle constraints.",
        "The solution is then examined for cycles, and if cycles are found we add constraints to forbid these cycles; the solver is then run again.",
        "This process is repeated until no more violated constraints are found.",
        "The same procedure is used for other types of constraints which are too expensive to add in advance (e.g. the constraints of P1).",
        "Algorithm 1 outlines our approach.",
        "For a sentence x, BX is the set of constraints that we add in advance and IX are the constraints we add incrementally.",
        "OX is the objective function and VX is a set of variables including integer declarations.",
        "solve(C, O, V) maximises the objective function O with respect to the set of constraints C and variables V. violated(y, I) inspects the proposed solution (y) and returns all constraints in I which are violated.",
        "The number of iterations required in this approach is at most polynomial with respect to the number of variables (Gr¨otschel et al., 1981).",
        "In practice, this technique converges quickly (less than 20 iterations in 99% of approximately 12,000 sentences), yielding average solve times of less than 0.5 seconds.",
        "Our approach converges quickly due to the quality of the scoring function.",
        "Its weights have been trained on cycle free data, thus it is more likely to guide the search to a cycle free solution.",
        "In the following section we present the objective function OX, variables VX and linear constraints BX and IX needed for parsing x using Algorithm 1.",
        "where n is the number of tokens and the index 0 represents the root token.",
        "bestk(i, j) is the set of k labels with highest s(i, j, l).",
        "ei,j,l equals 1 if there is a edge (i.e., a dependency) with the label l between token i (head) and j (child), 0 otherwise.",
        "k depends on the type of constraints we want to add.",
        "For the plain MST problem it is sufficient to set k = 1 and only take the best scoring label for each token pair.",
        "However, if we want a constraint which forbids duplicate subjects we need to provide additional labels to fall back on.",
        "VX also contains a set of binary auxiliary variables:",
        "which represent the existence of a dependency between tokens i and j.",
        "We connect these to the ei,j,l variables by the constraint:",
        "Given the above variables our objective function OX can be represented as (using a suitable k):"
      ]
    },
    {
      "heading": "3.1.3 Base Constraints",
      "text": [
        "We first introduce a set of base constraints BX which we add in advance.",
        "Only One Head (T1) Every token has exactly one head:",
        "for non-root tokens j > 0 in x.",
        "An exception is made for the artificial root node:",
        "Label Uniqueness (A1) To enforce uniqueness of children with labels in U we augment our model with the constraint:",
        "for every token i in x and label l in U. Symmetric Coordination (C1) For each conjunction token i which forms a symmetric coordination we add:",
        "Asymmetric Coordination (C2) For each conjunction token i which forms an asymmetric coordination we add:"
      ]
    },
    {
      "heading": "3.1.4 Incremental Constraints",
      "text": [
        "Now we present the set of constraints IX we add incrementally.",
        "The constraints are chosen based on the two criteria: (1) adding them to the base constraints (those added in advance) would result in an extremely large program, and (2) it must be efficient to detect whether the constraint is violated in y.",
        "No Cycles (T2) For every possible cycle c for the sentence x we have a constraint which forbids the case where all edges in c are active simultaneously:",
        "Comma Coordination (C3) For each symmetric conjunction token i which forms a symmetric coordination and each set of tokens A in x to the left of i with no comma between each pair of successive tokens we add:",
        "which forbids configurations where i has the argument tokens A.",
        "Compatible Coordination Arguments (C4) For each conjunction token i and each set of tokens A in x with incompatible POS tags, we add a constraint to forbid configurations where i has the argument tokens A.",
        "Selective Projective Parsing (P1) For each pair of triplets (i, j, l1) and (m, n, l2) we add the constraint:"
      ]
    },
    {
      "heading": "3.2 Training",
      "text": [
        "For training we use single-best MIRA (McDonald et al., 2005a).",
        "This is an online algorithm that learns by parsing each sentence and comparing the result with a gold standard.",
        "Training is complete after multiple passes through the whole corpus.",
        "Thus we decode using the Chu-Liu-Edmonds (CLE) algorithm due to its speed advantage over ILP (see Section 5.2 for a detailed comparison of runtimes).",
        "The fact that we decode differently during training (using CLE) and testing (using ILP) may degrade performance.",
        "In the presence of additional constraints weights may be able to capture other aspects of the data."
      ]
    },
    {
      "heading": "4 Experimental Set-up",
      "text": [
        "Our experiments were designed to answer the following questions:",
        "1.",
        "How much do our additional constraints help improve accuracy?",
        "2.",
        "How fast is our generic inference method in comparison with the Chu-Liu-Edmonds algorithm?",
        "3.",
        "Can approximations be used to increase the speed of our method while remaining accurate?",
        "Before we try to answer these questions we briefly describe our data, features used, settings for U and P in our parametric constraints, our working environment and our implementation."
      ]
    },
    {
      "heading": "4.1 Data",
      "text": [
        "We use the Alpino treebank (van der Beek et al., 2002), taken from the CoNLL shared task of multilingual dependency parsing3.",
        "The CoNLL data differs slightly from the original Alpino treebank as the corpus has been part-of-speech tagged using a Memory-Based-Tagger (Daelemans et al., 1996).",
        "It consists of 13,300 sentences with an average length of 14.6 tokens.",
        "The data is non-projective, more specifically 5.4% of all dependencies are crossed by at least one other dependency.",
        "It contains approximately 6000 sentences more than the Alpino corpus used by Malouf and van Noord (2004).",
        "The training set was divided into a 10% development set (dev) while the remaining 90% is used as a training and cross-validation set (cross).",
        "Feature sets, constraints and training parameters were selected through training on cross and optimising against dev.",
        "Our final accuracy scores and runtime evaluations were acquired using a ninefold cross-validation on cross"
      ]
    },
    {
      "heading": "4.2 Environment and Implementation",
      "text": [
        "All our experiments were conducted on a Intel Xeon with 3.8 Ghz and 4Gb of RAM.",
        "We used the open source Mixed Integer Programming library lp solve4 to solve the Integer Linear Programs.",
        "Our code ran in Java and called the JNIwrapper around the lp solve library."
      ]
    },
    {
      "heading": "4.3 Feature Sets",
      "text": [
        "Our feature set was determined through experimentation with the development set.",
        "The features are based upon the data provided within the Alpino treebank.",
        "Along with POS tags the corpus contains several additional attributes such as gender, number and case.",
        "Our best results on the development set were achieved using the feature set of McDonald et al.",
        "(2005a) and a set of features based on the additional attributes.",
        "These features combine the attributes of the head with those of the child.",
        "For example, if token i has the attributes a1 and a2, and token j has the attribute a3 then we created the features (a1 A a3) and (a2 A a3)."
      ]
    },
    {
      "heading": "4.4 Constraints",
      "text": [
        "All the constraints presented in Section 3 were used in our model.",
        "The set U of unique labels constraints contained su, obj1, obj2, sup, ld, vc, predc, predm, pc, pobj1, obcomp and body.",
        "Here su stands for subject and obj1 for direct object (for full details see Moortgat et al.",
        "(2000)).",
        "The set of projective labels P contained cnj, for coordination dependencies; and det, for determiner dependencies.",
        "One exception was added for the coordination constraint: dependencies can cross when coordinated arguments are verbs.",
        "One drawback of hard deterministic constraints is the undesirable effect noisy data can cause.",
        "We see this most prominently with coordination argument compatibility.",
        "Words ending in “en” are typically wrongly tagged and cause our coordination argument constraint to discard correct coordinations.",
        "As a workaround we assigned words ending in “en” a wildcard POS tag which is compatible with all POS tags."
      ]
    },
    {
      "heading": "5 Results",
      "text": [
        "In this section we report our results.",
        "We not only present our accuracy but also provide an empirical evaluation of the runtime behaviour of this approach and show how parsing can be accelerated using a simple approximation."
      ]
    },
    {
      "heading": "5.1 Accuracy",
      "text": [
        "An important question to answer when using global constraints is: How much of a performance boost is gained when using global constraints?",
        "We ran the system without any linguistic constraints as a baseline (bl) and compared it to a system with the additional constraints (cnstr).",
        "To evaluate our systems we use the accuracy over labelled attachment decisions:",
        "where Nl is the number of tokens with correct head and label and Nt is the total number of tokens.",
        "For completeness we also report the unlabelled accuracy:",
        "where Nu is the number of tokens with correct head.",
        "curacy using ninefold cross-validation on cross for baseline (bl) and constraint-based (constr) system.",
        "LC and UC are the percentages of sentences with 100% labelled and unlabelled accuracy, respectively.",
        "Table 1 shows our results using ninefold cross-validation on the cross set.",
        "The baseline system (no additional constraints) gives an unlabelled accuracy of 84.6% and labelled accuracy of 88.9%.",
        "When we add our linguistic constraints the performance increases by 0.5% for both labelled and unlabelled accuracy.",
        "This increase is significant (p < 0.001) according to Dan Bikel’s parse comparison script and using the Sign test (p < 0.001).",
        "Now we give a little insight into how our results compare with the rest of the community.",
        "The reported state-of-the-art parser of Malouf and van Noord (2004) achieves 84.4% labelled accuracy which is very close numerically to our baseline.",
        "However, they use a subset of the CoNLL Alpino treebank with a higher average number of tokens per sentences and also evaluate control relations, thus results are not directly comparable.",
        "We have also run our parser on the relatively small (approximately 400 sentences) CoNNL test data.",
        "The best performing system (McDonald et al.",
        "2006; note: this system is different to our baseline) achieves 79.2% labelled accuracy while our baseline system achieves 78.6% and our constrained version 79.8%.",
        "However, a significant difference is only observed between our baseline and our constraint-based system.",
        "Examining the errors produced using the dev set highlight two key reasons why we do not see a greater improvement using our constraint-based system.",
        "Firstly, we cannot improve on coordinations that include words ending with “en” based on the workaround present in Section 4.4.",
        "This problem can only be solved by improving POS taggers for Dutch or by performing POS tagging within the dependency parsing framework.",
        "Secondly, our system suffers from poor next best solutions.",
        "That is, if the best solution violates some constraints, then we find the next best solution is typically worse than the best solution with violated constraints.",
        "This appears to be a consequence of inaccurate local score distributions (as opposed to inaccurate best local scores).",
        "For example, suppose we attach two subjects, t1 and t2, to a verb, where t1 is the actual subject while t2 is meant to be labelled as object.",
        "If we forbid this configuration (two subjects) and if the score of labelling t1 object is higher than that for t2 being labelled subject, then the next best solution will label t1 incorrectly as object and t2 incorrectly as subject.",
        "This is often the case, and thus results in a drop of accuracy."
      ]
    },
    {
      "heading": "5.2 Runtime Evaluation",
      "text": [
        "We now concentrate on the runtime of our method.",
        "While we expect a longer runtime than using the Chu-Liu-Edmonds as in previous work (McDonald et al., 2005b), we are interested in how large the increase is.",
        "Table 2 shows the average solve time (ST) for sentences with respect to the number of tokens in each sentence for our system with constraints (cnstr) and the Chu-Liu-Edmonds (CLE) algorithm.",
        "All solve times do not include feature extraction as this is identical for all systems.",
        "For cnstr we also show the number of sentences that could not be parsed after two minutes, the average number of iterations and the average duration of the first iteration.",
        "The results show that parsing using our generic approach is still reasonably fast although significantly slower than using the Chu-Liu-Edmonds algorithm.",
        "Also, only a small number of sentences take longer than two minutes to parse.",
        "Thus, in practice we would not see a significant degradation in performance if we were to fall back on the CLE algorithm after two minutes of solving.",
        "When we examine the average duration of the first iteration it appears that the majority of the solve time is spent within this iteration.",
        "This could be used to justify using the CLE algorithm to find a initial solution as starting point for the ILP solver (see Section 6)."
      ]
    },
    {
      "heading": "5.3 Approximation",
      "text": [
        "Despite the fact that our parser can parse all sentences in a reasonable amount of time, it is still significantly slower than the CLE algorithm.",
        "While this is not crucial during decoding, it does make discriminative online training difficult as training requires several iterations of parsing the whole corpus.",
        "time (ST) for the cross dataset using varying q values and the Chu-Liu-Edmonds algorithm (CLE) Thus we investigate if it is possible to speed up our inference using a simple approximation.",
        "For each token we now only consider the q variables in V. with the highest scoring edges.",
        "For example, if we set q = 2 the set of variables for a token j will contain two variables, either both for the same head i but with different labels (variables ei, ,l1 and ei, ,l2) or two distinct heads i1 and i2 (variables ei1 J,l1 and ei2J,l2) where labels l1 and l2 may be identical.",
        "Table 3 shows the effect of different q values on solve time for the full corpus cross (roughly 12,000 sentences) and overall accuracy.",
        "We see that solve time can be reduced by 80% while only losing a marginal amount of accuracy when we set q to 10.",
        "However, we are unable to reach the 20 seconds solve time of the CLE algorithm.",
        "Despite this, when we add the time for preprocessing and feature extraction, the CLE system parses a corpus in around 15 minutes whereas our system with q = 10 takes approximately 25 minutes'.",
        "When we view the total runtime of each system we see our system is more competitive."
      ]
    },
    {
      "heading": "6 Discussion",
      "text": [
        "While we have presented significant improvements using additional constraints, one may won5 Even when caching feature extraction during training McDonald et al.",
        "(2005a) still takes approximately 10 minutes to train.",
        "der whether the improvements are large enough to justify further research in this direction; especially since McDonald and Pereira (2006) present an approximate algorithm which also makes more global decisions.",
        "However, we believe that our approach is complementary to their model.",
        "We can model higher order features by using an extended set of variables and a modified objective function.",
        "Although this is likely to increase runtime, it may still be fast enough for real world applications.",
        "In addition, it will allow exact inference, even in the case of non-projective parsing.",
        "Also, we argue that this approach has potential for interesting extensions and applications.",
        "For example, during our runtime evaluations we find that a large fraction of solve time is spent in the first iteration of our incremental algorithm.",
        "After the first iteration the solver uses its last state to efficiently search for solutions in the presence of new constraints.",
        "Some solvers allow the specification of an initial solution as a starting point, thus it is expected that significant improvements in terms of speed can be made by using the CLE algorithm to provide an initial solution.",
        "Our approach uses a generic algorithm to solve a complex task.",
        "Thus other applications may benefit from it.",
        "For instance, Germann et al.",
        "(2001) present an ILP formulation of the Machine Translation (MT) decoding task in order to conduct exact inference.",
        "However, their model suffers from the same type of exponential blow-up we observe when we add all our cycle constraints in advance.",
        "In fact, the constraints which cause the exponential explosion in their graphically formulation are of the same nature as our cycle constraints.",
        "We hope that the incremental approach will allow exact MT decoding for longer sentences."
      ]
    },
    {
      "heading": "7 Conclusion",
      "text": [
        "In this paper we have presented a novel approach for inference using ILP.",
        "While previous approaches which use ILP for decoding have solved each integer linear program in one run, we incrementally add constraints and solve the resulting program until no more constraints are violated.",
        "This allows us to efficiently use ILP for dependency parsing and add constraints which provide a significant improvement over the current state-of-the-art parser (McDonald et al., 2005b) on the Dutch Alpino corpus (see bl row in Table 1).",
        "Although slower than the baseline approach, our method can still parse large sentences (more than 50 tokens) in a reasonable amount of time (less than a minute).",
        "We have shown that parsing time can be significantly reduced using a simple approximation which only marginally degrades performance.",
        "Furthermore, we believe that the method has potential for further extensions and applications."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "Thanks to Ivan Meza-Ruiz, Ruken C¸akıcı, Beata Kouchnir and Abhishek Arun for their contribution during the CoNLL shared task and to Mirella Lapata for helpful comments and suggestions."
      ]
    }
  ]
}
