{
  "info": {
    "authors": [
      "Colin Cherry",
      "Shane Bergsma"
    ],
    "book": "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies",
    "id": "acl-P11-2035",
    "title": "Joint Training of Dependency Parsing Filters through Latent Support Vector Machines",
    "url": "https://aclweb.org/anthology/P11-2035",
    "year": 2011
  },
  "references": [
    "acl-C08-1094",
    "acl-C10-1007",
    "acl-C10-2168",
    "acl-D07-1013",
    "acl-D10-1102",
    "acl-N10-1066",
    "acl-P05-1012",
    "acl-P07-1022",
    "acl-P10-1110",
    "acl-W02-1001",
    "acl-W05-1504"
  ],
  "sections": [
    {
      "text": [
        "Institute for Information Technology National Research Council Canada",
        "colin.cherry@nrc-cnrc.gc.ca",
        "Center for Language and Speech Processing Johns Hopkins University",
        "Graph-based dependency parsing can be sped up significantly if implausible arcs are eliminated from the search-space before parsing begins.",
        "State-of-the-art methods for arc filtering use separate classifiers to make point-wise decisions about the tree; they label tokens with roles such as root, leaf, or attaches-to-the-left, and then filter arcs accordingly.",
        "Because these classifiers overlap substantially in their filtering consequences, we propose to train them jointly, so that each classifier can focus on the gaps of the others.",
        "We integrate the various pointwise decisions as latent variables in a single arc-level SVM classifier.",
        "This novel framework allows us to combine nine pointwise filters, and adjust their sensitivity using a shared threshold based on arc length.",
        "Our system filters 32% more arcs than the independently-trained classifiers, without reducing filtering speed.",
        "This leads to faster parsing with no reduction in accuracy."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "A dependency tree represents syntactic relationships between words using directed arcs (Melcuk, 1987).",
        "Each token in the sentence is a node in the tree, and each arc connects a head to its modifier.",
        "There are two dominant approaches to dependency parsing: graph-based and transition-based, where graph-based parsing is understood to be slower, but often more accurate (McDonald and Nivre, 2007).",
        "In the graph-based setting, a complete search finds the highest-scoring tree under a model that decomposes over one or two arcs at a time.",
        "Much of the time for parsing is spent scoring each potential arc in the complete dependency graph (Johnson, 2007), one for each ordered word-pair in the sentence.",
        "Potential arcs are scored using rich linear models that are discriminatively trained to maximize parsing accuracy (McDonald et al., 2005).",
        "The vast majority of these arcs are bad; in an n-word sentence, only n of the n potential arcs are correct.",
        "If many arcs can be filtered before parsing begins, then the entire process can be sped up substantially.",
        "Previously, we proposed a cascade of filters to prune potential arcs (Bergsma and Cherry, 2010).",
        "One stage of this cascade operates one token at a time, labeling each token t according to various roles in the tree:",
        "• Not-a-head (NaH): t is not the head of any arc",
        "• Root (Root): t is the root node, which eliminates arcs according to projectivity",
        "Similar to Roark and Hollingshead (2008), each role has a corresponding binary classifier.",
        "These token-role classifiers were shown to be more effective than vine parsing (Eisner and Smith, 2005; Dreyer et al., 2006), a competing filtering scheme that filters arcs based on their length (leveraging the observation that most dependencies are short).",
        "In this work, we propose a novel filtering framework that integrates all the information used in token-role classification and vine parsing, but offers a number of advantages.",
        "In our previous work, classifier decisions would often overlap: different token-role classifiers would agree to filter the same arc.",
        "Based on this observation, we propose a joint training framework where only the most confident",
        "Bobj ate2 the3 pizza4 with5 his6 salad7 fork;",
        "Figure 1: The dotted arc can be filtered by labeling any of the boxed roles as True; i.e., predicting that the head the-i is not the head of any arc, or that the modifier hise attaches elsewhere.",
        "Role truth values, derived from the gold-standard tree (in grey), are listed adjacent to the boxes, in parentheses.",
        "classifier is given credit for eliminating an arc.",
        "The identity of the responsible classifier is modeled as a latent variable, which is filled in during training using a latent SVM (LSVM) formulation.",
        "Our use of an LSVM to assign credit during joint training differs substantially from previous LSVM applications, which have induced latent linguistic structures (Cherry and Quirk, 2008; Chang et al., 2010) or sentence labels (Yessenalina et al., 2010).",
        "In our framework, each classifier learns to focus on the cases where the other classifiers are less confident.",
        "Furthermore, the integrated approach directly optimizes for arc-filtering accuracy (rather than token-labeling fidelity).",
        "We trade-off filtering precision/recall using two hyperparameters, while the previous approach trained classifiers for eight different tasks resulting in sixteen hyperparameters.",
        "Ultimately, the biggest gains in filter quality are achieved when we jointly train the token-role classifiers together with a dynamic threshold that is based on arc length and shared across all classifiers."
      ]
    },
    {
      "heading": "2. Joint Training of Token Roles",
      "text": [
        "In our previous system, filtering is conducted by training a separate SVM classifier for each of the eight token-roles described in Section 1.",
        "Each classifier uses a training set with one example per treebank token, where each token is assigned a binary label derived from the gold-standard tree.",
        "Figure 1 depicts five of the eight token roles, along with their truth values.",
        "The role labelers can be tuned for high precision with label-specific cost parameters; these are tuned separately for each classifier.",
        "At test time, each of the eight classifiers assigns a binary label to each of the n tokens in the sentence.",
        "Potential arcs are then filtered from the complete dependency graph according to these token labels.",
        "In Figure 1, a positive assignment to any of the indicated token-roles is sufficient to filter the dotted arc.",
        "In the current work, we maintain almost the same test-time framework, but we alter training substantially, so that the various token-role classifiers are trained jointly.",
        "To do so, we propose a classification scheme focused on arcs.",
        "During training, each arc is assigned a filtering event as a latent variable.",
        "Events generalize the token-roles from our previous system (e.g. NaHs, HtR*e).",
        "Events are assigned binary labels during filtering; positive events are said to be detected.",
        "In general, events can correspond to any phenomenon, so long as the following holds: For each arc a, we must be able to deterministically construct the set Za of all events that would filter a if detected.",
        "Figure 1 shows that Zthe3^his6 = {NaHs, HtR*6, HtR56, HtRU, HtLl6}.",
        "To detect events, we maintain the eight token-role classifiers from the previous system, but they become subclassifiers of our joint system.",
        "For notational convenience, we pack them into a single weight vector w. Thus, the event z = NaHs is detected only if w ■ $(NaHs) > 0, where $(z) is z's feature vector.",
        "Given this notation, we can cast the filtering decision for an arc a as a maximum.",
        "We filter a only if:",
        "We have reformulated our problem, which previously involved a number of independent token classifiers, as a single arc classifier f() with an inner max over latent events.",
        "Note the asymmetry inherent in (1).",
        "To filter an arc, [w ■ $(z) > 0] must hold for at least one zeZ„; but to keep an arc, [w • ®(z) < 0] must hold for all z G Za.",
        "Also note that tokens have completely disappeared from our formalism: the classifier is framed only in terms of events and arcs; token-roles are encapsulated inside events.",
        "To provide a large-margin training objective for our joint classifier, we adapt the latent SVM (Felzenszwalb et al., 2010; Yu and Joachims, 2009) to our problem.",
        "Given a training set A of (a,y) pairs, where a is an arc in context and y is the correct filter label for a (1 to filter, 0 otherwise), LSVM training selects w to minimize:",
        "IN",
        "POS",
        "NN",
        "HtR*6",
        "(T)",
        "HtR56",
        "(T)",
        "HtRlg",
        "(F)",
        "HtLlg",
        "(F)",
        "where Cy is a label-specific regularization parameter, and the event set Z is now conditioned on the label y: Za\\x = Za, and Za\\0 = {Nonea}.",
        "Noneais a rejection event, which indicates that a is not filtered.",
        "The rejection event slightly alters our decision rule; rather than thresholding at 0, we now filter a only if f(Za) > w ■ $(Nonea).",
        "One can set $(Nonea) < – 0 for all a to fix the threshold at 0.",
        "Though not convex, (2) can be solved to a local minimum with an EM-like alternating minimization procedure (Felzenszwalb et al., 2010; Yu and Joachims, 2009).",
        "The learner alternates between picking the highest-scoring latent event za G Za\\yfor each example (a, y), and training a multiclass SVM to solve an approximation to (2) where Za\\y is replaced with {za}.",
        "Intuitively, the first step assigns the event za to a, making za responsible for a's observed label.",
        "The second step optimizes the model to ensure that each za is detected, leading to the desired arc-filtering decisions.",
        "As the process iterates, event assignment becomes increasingly refined, leading to a more accurate joint filter.",
        "The resulting joint filter has only two hyperparameters: the label-specific cost parameters C\\ and C0.",
        "These allow us to tune our system for high precision by increasing the cost of misclassifying an arc that should not be filtered (C\\ ^ C0).",
        "Joint training also implicitly affects the relative costs of subclassifier decisions.",
        "By minimizing an arc-level hinge loss with latent events (which in turn correspond to token-roles), we assign costs to token-roles based on arc accuracy.",
        "Consequently, 1) A token-level decision that affects multiple arcs impacts multiple instances of hinge loss, and 2) No extra credit (penalty) is given for multiple decisions that (in)correctly filter the same arc.",
        "Therefore, an NaH decision that filters thirty arcs is given more weight than an HtLh decision that filters only one (Item 1), unless those thirty arcs are already filtered",
        "Thej big2 dog3 chased4 the5 cat6",
        "Figure 2: A hypothetical example of dynamic thresholding, where a weak assertion that dog3 should not be a head (w ■ ^{NaHi) = 0.5) is sufficient to rule out two arcs.",
        "Each arc's threshold (w ■ #(iVonea)) is shown next to its arrow.",
        "by higher-scoring subclassifiers (Item 2)."
      ]
    },
    {
      "heading": "3. Accounting for Arc Length",
      "text": [
        "We can extend our system by expanding our event set Z.",
        "By adding an arc-level event Vinea to each Za, we can introduce a vine filter to prune long arcs.",
        "Similarly, we have already introduced another arc-level event, the rejection event Nonea.",
        "By assigning features to Nonea, we learn a dynamic threshold on all filters, which considers properties of the arc before acting on any other event.",
        "We parameterize both Vinea and Nonea with the same two features, inspired by tag-specific vine parsing (Eisner and Smith, 2005):",
        "where HeadTag_ModTag_Dir(a) concatenates the part-of-speech tags of a's head and modifier tokens to its direction (left or right), and Len(a) gives the unsigned distance between a's head and modifier.",
        "In the context of Vinea, these two features allow the system to learn tag-pair-specific limits on arc length.",
        "In the context of Nonea, these features protect short arcs and arcs that connect frequently-linked tag-pairs, allowing our token-role filters to be more aggressive on arcs that do not have these characteristics.",
        "The dynamic threshold also alters our interpretation of filtering events: where before they were either active or inactive, events are now assigned scores, which are compared with the threshold to make final filtering decisions (Figure 2)."
      ]
    },
    {
      "heading": "4. Experiments",
      "text": [
        "We extract dependency structures from the Penn Treebank using the head rules of Yamada and Matsumoto (2003).",
        "We divide the Treebank into train (sections 2-21), development (22) and test (23).",
        "We part-of-speech tag our data using a perceptron tagger similar to the one described by Collins (2002).",
        "The training set is tagged with jack-knifing: the data is split into 10 folds and each fold is tagged by a system trained on the other 9 folds.",
        "Development and test sets are tagged using the entire training set.",
        "We train our joint filter using an in-house latent SVM framework, which repeatedly calls a multi-class exponentiated gradient SVM (Collins et al., 2008).",
        "LSVM training was stopped after 4 iterations, as determined during development.",
        "For the token-role classifiers, we reimplement the Bergsma and Cherry (2010) feature set, initializing w with high-precision subclassifiers trained independently for each token-role.",
        "Vine and None subclassifiers are initialized with a zero vector.",
        "At test time, we extract subclassifiers from the joint weight vector, and use them as parameters in the filtering tools of Bergsma and Cherry (2010).",
        "Parsing experiments are carried out using the MST parser (McDonald et al., 2005), which we have modified to filter arcs before carrying out feature extraction.",
        "It is trained using 5-best MIRA (Crammer and Singer, 2003).",
        "Following Bergsma and Cherry (2010), we measure intrinsic filter quality with reduction, the proportion of total arcs removed, and coverage, the proportion of true arcs retained.",
        "For parsing results, we present dependency accuracy, the percentage of tokens that are assigned the correct head.",
        "Our technical contribution consists of our proposed joint training scheme for token-role filters, along",
        "Table 1: Ablation analysis of intrinsic filter quality.",
        "with two extensions: the addition of vine filters ( Vine) and a dynamic threshold (None).",
        "Using parameters determined to perform well during development, we examine test-set performance as we incorporate each of these components.",
        "For the token-role and vine subclassifiers, we compare against an independently-trained ensemble of the same classifiers.",
        "Note that None cannot be trained independently, as its shared dynamic threshold considers arc and token views of the data simultaneously.",
        "Results are shown in Table 1.",
        "Our complete system outperforms all variants in terms of both coverage and reduction.",
        "However, one can see that neither joint system is able to outperform its independently-trained counterpart without the dynamic threshold provided by None.",
        "This is because the desirable credit-assignment properties of our joint training procedure are achieved through duplication (Zadrozny et al., 2003).",
        "That is, the LSVM knows that a specific event is important because it appears in event sets Za for many arcs from the same sentence.",
        "Without None, the filtering decisions implied by each copy of an event are identical.",
        "Because these replicated events are associated with arcs that are presented to the LSVM as independent examples, they appear to be not only important, but also low-variance, and therefore easy.",
        "This leads to overfitting.",
        "We had hoped that the benefits of joint training would outweigh this drawback, but our results show that they do not.",
        "However, in addition to its other desirable properties (protecting short arcs), the dynamic threshold imposed by None restores independence between arcs that share a common event (Figure 2).",
        "This alleviates overfitting and enables strong performance.",
        "System",
        "Indep.",
        "Cov.",
        "Red.",
        "Joint Cov.",
        "Red.",
        "Token + Vine + None",
        "99.73 60.5 99.62 68.6 N/A",
        "99.71 59.0 99.69 63.3 99.76 71.6",
        "Table 2: Parsing with jointly-trained filters outperforms independently-trained filters (R+L), as well as a more complex cascade (R+L+Q).",
        "*Accounts for total time spent parsing and applying filters, averaged over five runs.",
        "We directly compare our filters to those of Bergsma and Cherry (2010) in terms of both intrinsic filter quality and impact on the MST parser.",
        "The B&C system consists of three stages: rules (R), linear token-role filters (L) and quadratic arc filters (Q).",
        "The Q stage uses rich arc-level features similar to those of the MST parser.",
        "We compare against independently-trained token-role filters (R+L), as well as the complete cascade (R+L+Q), using the models provided online.",
        "Our comparison points, Joint P1 and P2 were built by tuning our complete joint system to roughly match the coverage values of R+L and R+L+Q on development data.",
        "Results are shown in Table 2.",
        "Comparing Joint P1 to R+L, we can see that for a fixed set of pointwise filters, joint training with a dynamic threshold outperforms independent training substantially.",
        "We achieve a 32% improvement in reduction with no impact on coverage and no increase in filtering overhead (time).",
        "Comparing Joint P2 to R+L+Q, we see that Joint P2 achieves similar levels of reduction with far less filtering overhead; our filters take only 7 seconds to apply instead of 19.",
        "This increases the speed of the (already fast) filtered MST-1 parser from 35 sentences per second to 44, resulting in a total speedup of 2.75 with respect to the unfiltered parser.",
        "The improvement is less impressive for MST-2, where the overhead for filter application is a less substantial fraction of parsing time; however, our training framework also has other benefits with respect to R+L+Q, including a single unified training algorithm, fewer hyper-parameters and a smaller testtime memory footprint.",
        "Finally, the jointly trained filters have no impact on parsing accuracy, where both B&C filters have a small negative effect.",
        "The performance of Joint-P2+MST-2 is comparable to the system of Huang and Sagae (2010), who report a parsing speed of 25 sentences per second and an accuracy of 92.1 on the same test set, using a transition-based parser enhanced with dynamic-programming state combination.",
        "Graph-based and transition-based systems tend to make different types of errors (McDonald and Nivre, 2007).",
        "Therefore, having fast, accurate parsers for both approaches presents an opportunity for large-scale, robust parser combination."
      ]
    },
    {
      "heading": "5. Conclusion",
      "text": [
        "We have presented a novel use of latent SVM technology to train a number of filters jointly, with a shared dynamic threshold.",
        "By training a family of dependency filters in this manner, each subclassifier focuses on the examples where it is most needed, with our dynamic threshold adjusting filter sensitivity based on arc length.",
        "This allows us to outperform a 3-stage filter cascade in terms of speed-up, while also reducing the impact of filtering on parsing accuracy.",
        "Our filtering code and trained models are available online at http://code.google.com/p/arcfilter.",
        "In the future, we plan to apply our joint training technique to other rich filtering regimes (Zhang et al., 2010), and to other NLP problems that combine the predictions of overlapping classifiers.",
        "Filter Intrinsic",
        "MST-1",
        "MST-2",
        "Filter",
        "Cov.",
        "Red.",
        "Time",
        "Acc.",
        "Sent/sec*",
        "Acc.",
        "Sent/sec*",
        "None",
        "100.00 00.0",
        "0s",
        "91.28",
        "16",
        "92.05 10",
        "B&C R+L",
        "99.70 54.1",
        "7s",
        "91.24",
        "29",
        "92.00 17",
        "Joint P1",
        "99.76 71.6",
        "7s",
        "91.28",
        "38",
        "92.06 22",
        "B&C R+L+Q",
        "99.43 78.3",
        "19s",
        "91.23",
        "35",
        "91.98 22",
        "Joint P2",
        "99.56 77.9",
        "7s",
        "91.29",
        "44",
        "92.05 25"
      ]
    }
  ]
}
