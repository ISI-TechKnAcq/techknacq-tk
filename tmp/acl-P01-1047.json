{
  "info": {
    "authors": [
      "Alain Lecomte",
      "Christian Retore"
    ],
    "book": "Annual Meeting of the Association for Computational Linguistics",
    "id": "acl-P01-1047",
    "title": "Extending Lambek Grammars: A Logical Account of Minimalist Grammars",
    "url": "https://aclweb.org/anthology/P01-1047",
    "year": 2001
  },
  "references": [],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We provide a logical definition of Minimalist grammars, that are Stablers formalization of Chomskys minimalist program.",
        "Our logical definition leads to a neat relation to catego-rial grammar, (yielding a treatment of Montague semantics), a parsing-as-deduction in a resource sensitive logic, and a learning algorithm from structured data (based on a typing-algorithm and type-unification).",
        "Here we emphasize the connection to Montague semantics which can be viewed as a formal computation of the logical form."
      ]
    },
    {
      "heading": "1 Presentation",
      "text": [
        "The connection between categorial grammars (especially in their logical setting) and minimalist grammars, which has already been observed and discussed (Retore and Stabler, 1999), deserve a further study: although they both are lexicalized, and resource consumption (or feature checking) is their common base, they differ in various respects.",
        "On the one hand, traditional categorial grammar has no move operation, and usually have a poor generative capacity unless the good properties of a logical system are damaged, and on the other hand minimalist grammars even though they were provided with a precise formal definition (Stabler, 1997), still lack some computational properties that are crucial both from a theoretical and a practical viewpoint.",
        "Regarding applications, one needs parsing, generation or learning algorithms, and, considering more conceptual aspects, such algorithms are needed too to validate or invalidate linguistic claims regarding economy or efficiency.",
        "Our claim is that a logical treatment of these grammars leads to a simpler description and well defined computational properties.",
        "Of course among these aspects the relation to semantics or logical form is quite important; it is claimed to be a central notion in minimalism, but logical forms are rather obscure, and no computational process from syntax to semantics is suggested.",
        "Our logical presentation of minimalist grammar is a first step in this direction: to provide a description of minimalist grammar in a logical setting immediately set up the computational framework regarding parsing, generation and even learning, but also yields some good hints on the computational connection with logical forms.",
        "The logical system we use, a slight extension of (de Groote, 1996), is quite similar to the famous Lambek calculus (Lambek, 1958), which is known to be a neat logical system.",
        "This logic has recently shown to have good logical properties like the subformula property which are relevant both to linguistics and computing theory (e.g. for modeling concurrent processes).",
        "The logic under consideration is a superimposition of the Lam-bek calculus (a non commutative logic) and of intuitionistic multiplicative logic (also known as Lambek calculus with permutation).",
        "The context, that is the set of current hypotheses, are endowed with an order, and this order is crucial for obtaining the expected order on pronounced and interpreted features but it can also be relaxed when necessary: that is when its effects have already been recorded (in the labels) and the corresponding hypotheses can therefore be discharged.",
        "Having this logical description of syntactic analyses allows to reduce parsing (and production) to deduction, and to extract logical forms from the proof; we thus obtain a close connection between syntax and semantics as the one between Lambek-style analyses and Montague semantics."
      ]
    },
    {
      "heading": "2 The grammatical architecture",
      "text": [
        "The general picture of these logical grammars is as follows.",
        "A lexicon maps words (or, more generally, items) onto a logical formula, called the (syntactic) type of the word.",
        "Types are defined from syntactic of formal features P (which are propositional variables from the logical viewpoint): categorial features (categories) involved in merge: BASE = {c, t, v, d, n.... } functional features involved in move:",
        "The connectives in the logic for constructing formulae are the Lambek implications (or slashes) \\, / together with the commutative product of linear logic .",
        "1 Once an array of items has been selected, a sentence (or any phrase) is a deduction of IP (or of the phrasal category) under the assumptions provided by the syntactic types of the involved items.",
        "This first step works exactly as Lambek grammars, except that the logic and the formulae are richer.",
        "Now, in order to compute word order, we proceed by labeling each formula in the proof.",
        "These labels, that are called phonological and semantic features in the transformational tradition, are computed from the proofs and consist of two parts that can be superimposed: a phonological label, denoted by /word/, and a semantic label2 denoted by (word) the superimposition of both 1 The logical system also contains a commutative implication, o, and a non commutative product but they do not appear in the lexicon, and because of the subformula property, they are not needed for the proofs we use.",
        "2W e prefer semantic label to logical form not to confuse logicalforms with the logical formulae present at each node of the proof.",
        "label being denoted by word.",
        "The reason for having such a double labeling, is that, as usual in minimalism, semantic and phonological features can move separately.",
        "It should be observed that the labels are not some extraneous information; indeed the whole information is encoded in the proof, and the labeling is just a way to extract the phonological form and the logical form from the proof.",
        "We rather use chains or copy theory than movements and traces: once a label or one aspect (semantic or phonological) has been met it should be ignored when it is met again.",
        "For instance a label Peter (Mary) loves Mary corresponds to a semantic label (Peter) (Mary) (love) and to the phonological form /Peter/ /loves/ /Mary/."
      ]
    },
    {
      "heading": "3 Logico-grammatical rules for merge",
      "text": [
        "and phrasal movement Because of the sub-formula property we need not present all the rules of the system, but only the ones that can be used according to the types that appear in the lexicon.",
        "Further more, up to now there is no need to use introduction rules (called hypothetical reasoning in the Lambek calculus): so our system looks more like Com-binatory Categorial Grammars or classical AB-grammars.",
        "Nevertheless some hypotheses can be cancelled during the derivation by the product-elimination rule.",
        "This is essential since this rule is the one representing chains or movements.",
        "We also have to specify how the labels are carried out by the rules.",
        "At this point some non logical properties can be taken into account, for instance the strength of the features, if we wish to take them into account.",
        "They are denoted by lower-case variables.",
        "The rules of this system in a Natural Deduction format are:",
        "This later rule encodes movement and deserves special attention.",
        "The label -y[a/{x, y}] means the substitution of a to the unordered set {x, y} that is the simultaneous substitution of a for both x and y, no matter the order between x and y is.",
        "Here some non logical but linguistically motivated distinction can be made.",
        "For instance according to the strength of a feature (e.g. weak case k versus strong case K), it is possible to decide that only the semantic part that is (a) is substituted with x.",
        "In the figure 1, the reader is provided with an example of a lexicon and of a derivation.",
        "The resulting label is (a book) reads a book phonological form is /reads/ /a book/ while the resulting logical form is (a book) (reads).",
        "Notice that language variation from SVO to SOV does not change the analysis.",
        "To obtain the SOV word order, one should simply use K (strong case feature) instead of k (weak case feature) in the lexicon, and use the same analysis.",
        "The resulting label would be a book reads a book which yields the phonological from /a book/ /reads/ and the logical form remains the same (a book) (reads).",
        "Observe that although entropy which suppresses some order has been used, the labels consist in ordered sequences of phonological and logical forms.",
        "It is so because when using [/ E] and [\\ E], we necessarily order the labels, and this order is then recorded inside the label and is never suppressed, even when using the entropy rule: at this moment, it is only the order on hypotheses which is relaxed.",
        "In order to represent the minimalist grammars of (Stabler, 1997), the above subsystem of partially commutative intuitionistic linear logic (de Groote, 1996) is enough and the types appearing in the lexicon also are a strict subset of all possible types: Definition 1 M9 proofs contain only three kinds of steps: implication steps (elimination rules for /and ) tensor steps (elimination rule for (9)",
        "A is the resulting category type Derivations in this system can be seen as T-markers in the Chomskyan sense.",
        "[/E] and [\\E] steps are merge steps.",
        "[E] gives a co-indexation of two nodes that we can see as a move step.",
        "For instance in a tree presentation of natural deduction, we shall only keep the coindexation (corresponding to the cancellation of A and B: this is harmless since the conclusion is not modified, and makes our natural deduction T-markers).",
        "Such lexical entries, when processed with"
      ]
    },
    {
      "heading": ",Mg-rules encompass Stabler minimalist grammars;",
      "text": [
        "this system nevertheless overgenerates, because some minimalist principles are not yet satisfied: they correspond to constraints on derivations."
      ]
    },
    {
      "heading": "3.1 Conditions on derivations",
      "text": [
        "The restriction which is still lacking concerns the way the proofs are built.",
        "Observe that this is an algorithmic advantage, since it reduces the search space.",
        "The simplest of these restriction is the following: the attractor F in the label L of the target ~ locates the closest F in its domain.",
        "This simply corresponds to the following restriction.",
        "Definition 3 (Shortest Move) : A ,M9 proof is said to respect the shortest move condition if it is such that: the sameformula never occurs twice as a hypothesis of any sequent every active hypothesis during the proofpro-cess is discharged as soon as possible The consequences of this definition are the following:",
        "~- (a book) reads a book : vp 1.",
        "Ti ... Ti ... T2 ... ~- C is forbidden 2. if there is a sequent ... T ... ~- T'\\ C",
        "if there is a type T' such that I' ~- T' T is a (proper or logical) axiom, then a hypothesis T' must be introduced, rather than any constant T', in order to discharge T We may see an application of this condition in the fact that sentences like:",
        "are ruled out.",
        "Let us look at the beginning of their derivation (in a treelike presentation of natural deduction proofs): at the stage where we stop the deduction on figure 2, we cannot introduce a new hypothesis z2 : k d because there is already an active one (z,), the only possible continuation is to discharge t'2 and x2 altogether by means of a constant, like mart', so that, in contrast: You know [ who, Mary likes el] is correct."
      ]
    },
    {
      "heading": "3.2 Extension to head-movement",
      "text": [
        "We have seen above that we are able to account for SVO and SOV orders quite easily.",
        "Nevertheless we could not handle this way VSO language.",
        "Indeed this order requires head-movement.",
        "In order to handle head-movement, we shall also use the product but between functor types.",
        "As a first example, let us take the very simple example of: peter loves mary.",
        "Starting from the following lexicon in figure 3 we can build the tree given in the same figure; it represents a natural deduction in our system, hence a syntactic analysis.",
        "The resulting phonological form is /Peter//loves//Mary/ while the resulting logical form is (Peter) (Mary) (loves) the possibility to obtain SOV word order with a K instead of a k also applies here.",
        "4 The interface between syntax and semantics In categorial grammar (Moortgat, 1996), the production of logical forms is essentially based on the association of pairs < string, type > with lambda terms representing the logical form of the items, and on the application of the Curry-Howard homomorphism: each (/ or \\) - elimination rule translates into application and each introduction step into abstraction.",
        "Compo-sitionality assumes that each step in a derivation is associated with a semantical operation.",
        "In generative grammar (Chomsky, 1995), the production of logical forms is in last part of the derivation, performed after the so-called Spell Out point, and consists in movements of the semantical features only.",
        "Once this is done, two forms can be extracted from the result of the derivation: a phonological form and a logical one.",
        "These two approaches are therefore very differ-Figure",
        "ent, but we can try to make them closer by replacing semantic features by lambda-terms and using some canonical transformations on the derivation trees.",
        "Instead of converting directly the derivation tree obtained by composition of types, something which is not possible in our translation of minimalist grammars, we extract a logical tree from the previous, and use the operations of Curry-Howard on this extracted tree.",
        "Actually, this extracted tree is also a deduction tree: it represents the proof we could obtain in the semantic component, by combining the semantic types associated with the syntactic ones (by a homomorphism R to specify).",
        "Such a proof is in fact a proof in im-plicational intuitionistic linear logic."
      ]
    },
    {
      "heading": "4.1 Logical form for example 3",
      "text": [
        "Coindexed nodes refer to ancient hypotheses which have been discharged simultaneously, thus resulting in phonological features and semantical ones at their right place3 .",
        "By extracting the subtree the leaves of which are full of semantic content, we obtain a structure that can be easily seen as a composition: (peter) ((mary) (to _love)) If we replace these semantic features by A-terms, we have: (Au.u(peter), (Au.u(mary), Ax.Ay.love(y, x))) This shows that necessarily raised constituants in the structure are not only syntactically raised but also semantically lifted, in the sense that Au.u(peter) is the high order representation of the individual peter4."
      ]
    },
    {
      "heading": "4.2 Subject raising",
      "text": [
        "Let us look at now the example: mary seems to work From the lexicon in figure 4 we obtain the deduction tree given in the same figure.",
        "3 For the time being, we make abstraction of the representation of time, mode, aspect... that would be supported by the inflection category.",
        "4It is important to notice that if we consider Au.u(mary) a typed lambda term, we must only assume it is of some type freely raised from e, something we can represent by ((e 4 X) 4 X), where X is a type-variable, here X = (e 4 t) because Ax.Ay.",
        "love (y, x) has type (e 4 (e 4 t)) This time, it is not so easy to obtain the logical representation: .seem (to_wor^(mary)) The best way to handle this situation consists in assuming that: the verbal infinitive head (here to work) applies to a variable x which occupies the d-position, the semantics of the main verb (here to seem) applies to the result, in order to obtain seem (to_wor^(x)), the x variable is abstracted in order to obtain Ax.",
        "seem (to_wor^(x)) just before the semantic content of the specifier (here the nominative position, occupied by Au.u(mary)) applies.",
        "This shows that the semantic tree we want to extract from the derivation tree in types logic is not simply the subtree the leaves of which are semantically full.",
        "We need in fact some transformation which is simply the stretching of some nodes.",
        "These stretchings correspond to ~-introduction steps in a Natural deduction tree.",
        "They are allowed each time a variable has been used before, which is not yet discharged and they necessarily occur just before a semantically full content of a specifier node (that means in fact a node labelled by a functional feature) applies.",
        "Actually, if we say that the tree so obtained represents a deduction in a natural deduction format, we have to specify which formulae it uses and what is the conclusion formula.",
        "We must therefore define a homomorphism between syntactic and semantic types.",
        "Let R be this homomorphism.",
        "We shall assume:",
        "but the instantiation of X is always unique.",
        "Moreover, when f is of type (X 4 X), it is in fact endowed with the identity function, something which happens everytime 1 is linked by a chain to a higher node.",
        "With this homomorphism of labels, the transformation of trees consisting in stretching intermediary projection nodes and erasing leaves without semantic content, we obtain from the derivation tree of the second example, the following semantic tree:",
        "the empty phonology and the semantics are associated with the second one, the empty semantics occupies the first one6 Unfortunately, such rigid assignment does not always work.",
        "For instance, for phrasal movement (say of a d to a k) that depends of course on the particular k-node in the tree (for instance the situation is not necessary the same for nominative and for accusative case).",
        "In such cases, we may assume that multisets are associated with lexical entries instead of vectors.",
        "where coindexed nodes are linked by the discharging relation.",
        "Let us notice that the characteristic weak or strong of the features may often be encoded in the lexical entries.",
        "For instance, Head-movement from V to I is expressed by the fact that tensed verbs are such that: the full phonology is associated with the inflection component,"
      ]
    },
    {
      "heading": "4.3 Reflexives",
      "text": [
        "Let us try now to enrich this lexicon by considering other phenomena, like reflexive pronouns.",
        "The assignment for himself is given in figure 5 where the semantical type of himself is assumed to be ((e ~ (e ~ t)) ~ (e ~ t)).",
        "We obtain for paul shaves himself as the syntactical tree something similar to the tree obtained for our first little example (peter loves mar y), and the semantic tree is given in figure 5.",
        "5 Remarks on parsing and learning In our setting, parsing is reduced to proof search, it is even optimized proof-search: indeed the re6 as long we dont take a semantical representation of tense and aspect in consideration.",
        "striction on types, and on the structure of proof imposed by the shortest move principle and the absence of introduction rules considerably reduce the search space, and yields a polynomial algorithm.",
        "Nevertheless this is so when traces are known: otherwise one has to explore the possible places of theses traces.",
        "Here we did focus on the interface with semantics.",
        "Another excellent property of categorial grammars is that they allow especially when there are no introduction rules for learning algorithms, which are quite efficient when applied to structured data.",
        "This kind of algorithm applies here as well when the input of the algorithm are derivations."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "In this paper, we have tried to bridge a gap between minimalist program and the logical view of categorial grammar.",
        "We thus obtained a description of minimalist grammars which is quite formal and allows for a better interface with semantics, and some usual algorithms for parsing and learning."
      ]
    }
  ]
}
