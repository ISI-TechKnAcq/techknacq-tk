{
  "info": {
    "authors": [
      "Yael Dahan Netzer",
      "Michael Elhadad"
    ],
    "book": "Workshop on Computational Approaches to Semitic Languages",
    "id": "acl-W98-1012",
    "title": "Generating Determiners and Quantifiers in Hebrew",
    "url": "https://aclweb.org/anthology/W98-1012",
    "year": 1998
  },
  "references": [],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper presents a specific part of HUGG, a generation grammar for Hebrew.",
        "This part deals with determiners and quantifiers.",
        "Our main goal is to determine which set of features must be present in the input to the generation grammar to control the generation of complex determiners and quantifiers.",
        "Hebrew determiners are characterized by two properties: (1) definiteness is marked in several places in the NP and it interacts with compound constructs; (2) the order of appearance of determiners and quantifiers within a complex NP is flexible but still restricted.",
        "HUGG is developed with the goal to design an input specification language for syntactic realization as close as possible for English and Hebrew, to allow easy development of bilingual generation applications.",
        "We show in this paper how the original set of features controlling the generation of determiners in SURGE, a large generation grammar for English, has been enriched to account for the specificities of Hebrew determiners and how, in the process, SURGE has been modified and improved.",
        "We present a set of functional features – organized around the categories of amount, partitive and identity – and show how these features determine a variety of syntactic constructs."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "A text generation system generally includes two main components: content determination (that decides what to say) and surface realization (that decides how to say it).",
        "Recent research has led to the development of reusable surface realization systems which encapsulate knowledge of syntax for specific languages.",
        "Most of this research has been conducted for English, and large generation grammars for English are now available [4], [9].",
        "Multilingual generation now appears as the \"next frontier\" in generation research: it is often easier to develop applications to generate text in different languages than it is to translate text.",
        "When developing a multilingual application, the engineering strategy is to develop a single content determination module and to plug it – more or less unchanged – into several surface realization modules for different languages – each encapsulating knowledge of a different language.",
        "The main problem to address in this context is to determine which interface is appropriate between the content determination module and the linguistic modules.",
        "We are investigating this problem for the case of bilingual generation English-Hebrew.",
        "We start from an existing surface realization system for English, SURGE, and have developed a generation grammar for Hebrew called HUGG with the goal that the input specification language for both grammars be as close as possible.",
        "This paper illustrates the general issue of designing a bilingual generation system by focusing on the specific part of HUGG that deals with determiners and quantifiers.",
        "Our main goal is to",
        "determine which set of features must be present in the input to the generation grammar to control the generation of complex determiners and quantifiers.",
        "Because the syntactic structure of English and Hebrew determiners is very different, we use functional-semantic features in the input (as opposed to syntactic features).",
        "We present a set of such features and evaluate (1) how the features can account for specific syntactic constructs in Hebrew and (2) how the same features can be used in English.",
        "Syntactically, Hebrew determiners are characterized by two properties: (1) definiteness is marked in several places in the NP and it interacts with compound constructs; (2) the order of appearance of determiners and quantifiers within a complex NP is flexible but still restricted.",
        "The demands that Hebrew syntax puts on the generation system are, therefore, quite different from those put by the English syntax.",
        "In the rest of the paper, we first present previous work in the description of Hebrew determiners, and present the treatment of the determiner sequence in English for generation as implemented in SURGE.",
        "We then focus on the two issues of definiteness and order of constituents and present our treatment of the Hebrew determiner construction using a set of functional features.",
        "We derive from this analysis an input specification for noun phrases for a generation grammar.",
        "This input specification extends the set of features used in SURGE and remains compatible with the English grammar, while providing a wide coverage of the Hebrew constructions.",
        "This case study of the determiner system illustrates how a single set of functional features can drive both the English and Hebrew generation systems despite their syntactic differences.",
        "More generally, it demonstrates the methodology followed to develop a sound bilingual generation system."
      ]
    },
    {
      "heading": "1.1 Definiteness",
      "text": [
        "As a polydefinite language, Hebrew marks definiteness in several places in the NP, unlike English which only marks it in the definite/indefinite articles.",
        "Because of the complex nature of definiteness marking in Hebrew, we have found that the marking of definiteness as realized in SURGE had to be extended.",
        "Examples dl/d2 show how the definiteness marking (ha-) appears on both the head and the modifier.",
        "Example d3 shows that when a noun-compound construction (called smixut) is used, then the definiteness marking disappears on the head.",
        "The head, however, remains semantically definite.",
        "Hebrew demonstratives can also be marked with the definiteness ha-: Unmarked sfarym eleh books those Marked ha-sfarym ha-eleh the-books the-those The two forms are definite in their meaning (demonstrative implies definite), but the additional definite marking is still possible in Hebrew.",
        "The two forms differ in their pragmatic usage (the unmarked form tends to refer to previous text and the marked form to deixis proper [11] p.117) The distinction between semantic definiteness and marked definiteness is reflected as well for the indefinite, as shown in the following examples:"
      ]
    },
    {
      "heading": "Non-Definite - unmarked Non-Definite - marked Non-definite selective",
      "text": [
        "From these examples, it appears that a single binary feature definite, as used in SURGE, cannot account for the syntactic complexity of the definiteness.",
        "We had, therefore, to extend the input specification for definiteness."
      ]
    },
    {
      "heading": "1.2 Order of constituents",
      "text": [
        "Unlike the \"determiner sequence\" defined in [8] Hebrew determiners and quantifiers can be positioned before and after the head of the NP1:",
        "Determiners and quantifiers positioned after the head behave more like adjectives: they agree in number, gender and definiteness with the head.",
        "Determiners with the same meaning can appear before or after the head, as shown in examples 01/02 and 03/04 above.",
        "In some cases, only one of the two options is available, as shown in examples 05/06: because the determiner for many appearing before the head is lexically marked as indefinite, it cannot be used for the NP the many children.",
        "In addition to the choice before/after head, when several determiners and quantifiers co-occur, they must be ordered in the right sequence.",
        "The distinction between determiners (D) and quantifiers (Q) has been proposed [3] to explain, among other facts, the order generally used: col me'ot ha-mafginym * me'ot col ha-mafginym all hundreds the-demonstrators * hundreds all the-demonstrators All of the hundreds of demonstrators * Hundreds of all of the demonstrators \"Determiners\" (like col I all) generally appear before \"quantifiers\" (like me'ot I hundreds).",
        "By this definition, determiners are those words which, among other characteristics, can enter in recursive constructs.",
        "According to this model, there are no restrictions on the order of occurrence of the D determiners: col S'ar ha-mafginym S'ar col ha-mafginym all the-rest-of the-demonstrators the-rest-of all the-demonstrators All the rest of the demonstrators The rest of all the demonstrators The different orders, naturally, have different meanings.",
        "We have found, however, that there are cases where the order between D determiners can lead to syntactically unacceptable NPs:",
        "The structural distinction Determiner/Quantifier proposed in [3] does not help to explain this restriction.",
        "The problem with the last example is related to the functional incompatibility of the two determiners.",
        "We instead present a functional account of these restrictions, based on a set of features derived from those used in SURGE.",
        "'Determiners in English can occur after the head in the very restricted cases where a pronoun is modified by a \"total\" meaning - e.g., we both, them all."
      ]
    },
    {
      "heading": "2 Previous Work",
      "text": [
        "Descriptive studies of the syntax of the Hebrew noun phrase do not generally distinguish between different functions of determiners but focus rather on the syntactic structure of the NP.",
        "Glinert [7] adopts a functional perspective, more appropriate to the needs of a generation system, and identifies a general pattern of the NP that we use as a basis: [partitive determiner amount head classifiers describers post-det/quant qualifiers] In this pattern, the slots can be filled by any word that fits the function: partitive expressions identify a subset of the set referred to by the rest of the NP; amount expressions identify the quantity or number, exact or inexact, of the thing referred to; determiners identify the thing referred to more or less precisely or specifically.",
        "The general picture of the input specification is that of a reference set from which a subset is identified by different complementary means.",
        "The function of each word realizing this input specification determines where it appears in the syntactic structure.",
        "Yizhar and Doron [3] [12] distinguish between two sets of determiners, that they call D and Q quantifiers.",
        "The distinction is based on syntactic features, such as location, ability to be modified, ability to participate in partitive structures, requirement to agree in number and gender with the head.",
        "This distinction is used to explain cooccurrence restrictions, the order of appearance of D vs Q quantifiers and the recursive structure of D determiners: D determiners can be layered on top of other D determiners.",
        "A single Q quantifier can occur in an NP and it remains attached closest to the head.",
        "As discussed in the introduction, the distinction D/Q is not sufficient to explain some restrictions on the cooccurrence of several Ds in the same NP, and does not help to predict the restrictions on occurrence of determiners in different definiteness and partitive contexts.",
        "In [1] we have, therefore, refined the D/Q classification using functional criteria: we map the Q quantifiers to the \"amount\" category defined by Glinert, and the D set is split into the partitive and determiner categories - each with a different function.",
        "Of these, only partitive are recursive.",
        "Another controversial issue within Hebrew studies is whether determiners are types of nouns [2] [6].",
        "This is an important issue to explain in a uniform manner why constructs like smixut (noun compounding) are used for certain determiners and why certain determiners determine the number and gender of the whole NP.",
        "We have implemented some of these constraints by defining lexical features for determiners which determine this behavior."
      ]
    },
    {
      "heading": "2.1 Determiner Sequence in Generation",
      "text": [
        "Our goal is to define a set of functional features to include in the input to a generator.",
        "These features must provide enough information to construct a wide variety of determiner constructions both in Hebrew and in English.",
        "For the comparison with English, we based our work on the SURGE generation grammar [5].",
        "The determiner sequence in SURGE is based on [8] and has the following pattern: [pre-det (of) det deictic2 ordinal cardinal quantifier (describer classifier head)].",
        "Where pre-det can be any one of all, both, half, multipliers and fractions, det is a deictic determiner, deictic2 is an adjective from a restricted class that expresses the anaphoric status of the thing referred to (e.g., above, same, different); and quantifier expresses the amount or quantity of the thing referred to.",
        "In [4], we gathered a minimal set of 24 features to define the determiner sequence of the NP in English.",
        "Complex systems in SURGE implement the cooccurence restrictions among these features, definiteness and partitive constructs.",
        "When studying the Hebrew determiner system, we found that this set of features had to be extended and refined.",
        "As a consequence, both the implementations of SURGE and of HUGG have been made compatible with the same set of features, which we motivate in the rest of the paper."
      ]
    },
    {
      "heading": "3 Definiteness",
      "text": [
        "Definiteness in NP has two aspects: it corresponds to a complex semantic property of the thing referred to by the phrase and it is syntactically marked in different ways.",
        "We will not discuss how a noun phrase is defined as semantically definite (a development on this issue is provided in [1] Chap.5), and we assume that the decision that a referent is definite is taken by the content determination module and that the semantic definite feature is given in the input to the generation grammar.",
        "We keep the feature definite yes for this purpose.",
        "In a Hebrew definite NP, the definite marker (ha-) is agglutinated to the head and to most modifiers (adjectives and quantifiers).",
        "Not all subconstituents of the NP are marked, however: in a noun-compound construction the head loses the marking and the compounded noun keeps it.",
        "When demonstratives are used, a marked and an unmarked form can be used.",
        "In addition, pronouns and proper nouns are intrinsically definite and do not receive the ha marking.",
        "To explain the distribution of the ha marker, we have added the feature mark-definite which determines whether an article (definite or indefinite) is to be used for each subconstituent of the NP.",
        "By default, the mark-definite of a subconstituent is equal to the definite of its mother constituent.",
        "However, certain constructions and certain lexical items block this propagation and can force a mark-definite no (for example, proper nouns have a lexical feature of mark-definite no and the noun-compounding construction enforces a mark-definite no on the head).",
        "The following example illustrates how the feature mark-definite contrasts among the two distinct phrases:",
        "cat common lex \"nawar\" definite yes distance near classifier 1 lex \"cfar\" 1 lex \"Toy\" describer classifier cat common lex \"lev\" mark-definite yes no ] In this example, nawar/boy is not marked with ha because it enters in a compound construction with cfar.",
        "Similarly Toy/good is not marked because it is an adjective compound of /ev/heart.",
        "While there is agreement as to the behavior of the marking of definiteness, the marking of indefinite nouns is quite controversial.",
        "Some researchers claim that definite is not a binary but that an additional unmarked value is necessary (cf [2] for a review).",
        "We mainly adopt Oman's view [10].",
        "In this view, an indefinite NP is marked with a null article by default, but the indefinite can also be marked.",
        "In this case, we use the feature (mark-definite indef).",
        "This feature explains the contrast between: eyze delet some door mark-definite indef delet door mark-definite no delet aHat door one selective yes We treat delet aHat as marked functionally as a selective phrase, following Halliday's feature as used in SURGE.",
        "In our analysis, selective yes implies mark-definite indef.",
        "Of the two marked indefinite articles, eyze is non selective while eHad is.",
        "The following example, taken from an example by Winograd, illustrates the behavior of the selective yes feature: Examining the cabinet, we noticed that a door was marred The Hebrew for it will be:",
        "In this context, the existence of a set of 2 or 4 doors is known pragmatically (from world knowledge about closets).",
        "The function of the indefinite article is then to select one door out of this known set.",
        "In that case, the unmarked indefinite is quite inappropriate, because it would refer to a door that cannot be related to the closet.",
        "In summary, the complex marking of definiteness in Hebrew has led us to extend the single semantic feature definite yes/no used in SURGE, with the additional feature mark-definite yes/no/indef."
      ]
    },
    {
      "heading": "4 Determining the Order",
      "text": [
        "We have mostly investigated the order of determiners and quantifiers in Hebrew that appear before the head of the NP.",
        "We have found that semantics plays a main role in determining the relative order of determiners.",
        "This follows Glinert ([7] Chap.8 and 9), who distinguishes among the different functions fulfilled by determiners, and predicts the ordering accordingly, as discussed in Sect.2.",
        "The primary functional distinction is between quantifiers - that express amount or portion - and determiners - that express identity.",
        "Accordingly, the word col/all for example, has two senses: one as a quantifier (with the all or collective meaning) and one as a determiner (with the every or distributive meaning).",
        "Quantifiers are classified along two main dimensions: exact/inexact (e.g., three vs. many) and portion/amount.",
        "The portion/amount system has the most effect on the structure of the NP, as it can be realized either lexically by certain quantifiers, or by using an explicit partitive syntactic structure X m Y/X of Y.",
        "We define amount quantifiers (cardinals, quantifiers like harbeh/many, yoter/more) as quantifiers that express quantity without explicit relation to the \"total\" cardinality of the reference set'",
        "In contrast, partitive quantifiers express a quantity that gets its meaning only in relation to the cardinality of a reference set.",
        "For example, rov/most refers to at least half of the reference set.",
        "Similarly, col/all refers to all of the reference set, and is also partitive.",
        "The distinction among partitive quantifiers, amount quantifiers and determiners is important as it predicts the order of the words in the NP.",
        "The standard order is: [partitive determiner amount head] We also note that only partitives can enter into recursive structures.",
        "Accordingly, our input specification language enforces the constraint that only a single amount and a single identification feature can be present simultaneously.",
        "The realization grammar also uses the knowledge of which word realizes which function to determine the ordering.",
        "This is illustrated in the following example, where the standard order is obtained for the combination partitive amount head: col waseret ha-mafginym cat np total all ten the-demonstrators \"mafgyn\" All the ten demonstrators [lex yes ref-set definite cardinal [ value 10 Note that whenever a partitive quantifier is desired, the input specification must include a ref-set construct.",
        "This enforces the constraint that partitives yield recursive constructs, as shown in the following example: cat np wasarah me-col ha-mafginym cardinal I value 10 ten of-all the-demonstrators total + Ten of all the demonstrators ref-set ref-set [ lex \"mafgyn\" definite yes The decision to build an explicitly partitive construction X m Y/X of Y is left to the realization grammar and can be quite complex.",
        "If a quantifier can be found that has the lexical property of being marked as partitive, then a non-explicitly partitive construction can be used, as in the first example above all the ten demonstrators.",
        "Note that in this case, in contrast to English, in Hebrew.",
        "the explicitly partitive construction is not possible * col me-waseret ha-rnafginyrn.",
        "In contrast.",
        "if a feature modifying the ref-set is to be realized by a non-lexically partitive quantifier, then an explicitly partitive construction must be used.",
        "When the \"portion\" part is modified with adjectives, then an explicitly partitive construction must be used: ha-rov ha-gadol mi-beyn ha-yeladym the-most the-big of-from the-children The vast majority of the children In that case, the portion functions as the logical head of the NP with the realization of the reference set as a PP – which affects agreement with the verb.",
        "In summary, we propose a refined classification of the determiners/quantifiers in Hebrew into amount, partitive and determiner.",
        "This functional classification determines the relative order of the determiners within the NP and also determines which recursive structures can be constructed.",
        "Finally, it is important to take into account the lexical properties of specific determiners which can require or forbid the use of explicitly partitive constructions.",
        "Our input specification language encompasses all of the features found in SURGE but organizes them into a new framework which enforces these constraints (with the explicit specification of the ref-set in the input).",
        "implicitly for amounts: 3 children refers to 3 children out of some reference set, but the reference set is deliberately left implicit."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "We have presented in this paper observations on the syntax of the Hebrew NP and deduced from its properties an input specification language for complex NPs to a generation grammar.",
        "The case study of the determiner system illustrates the general methodology we apply to develop a multilingual generator.",
        "The key point is to encapsulate knowledge of syntax in separate modules driven by a common set of functional features.",
        "The input specification language extends the one used in SURGE for English to provide enough information to enforce the constraints observed in Hebrew.",
        "We have specifically extended the treatment of definiteness (and indefiniteness) with the additional feature mark-definite and the treatment of partitives with a systematic classification of quantifiers as partitives, amounts and determiners.",
        "The resulting formalism provides a good basis for a bilingual generation grammar, and is being used to that end in practical projects."
      ]
    }
  ]
}
