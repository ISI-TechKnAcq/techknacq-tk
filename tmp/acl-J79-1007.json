{
  "info": {
    "authors": [
      "H. Willam Buttelmann"
    ],
    "book": "ACL Microfiche Series 1-83, Including Computational Linguistics",
    "id": "acl-J79-1007",
    "title": "Semantic Directed Translation of Context Free Languages",
    "url": "https://aclweb.org/anthology/J79-1007",
    "year": 1979
  },
  "references": [],
  "sections": [
    {
      "heading": "ABSTRACT",
      "text": [
        "A formal definition for the semantics of a context free language, called a phrase-structure semantics., is given.",
        "The definition is a model of the notion that it is phrases which have meaning and that the meaning of a phrase is a function of its syntactic structure and of the meanings of its constituents.",
        "Next we give a definition for translation on context free languages.",
        "We then study a certain kind of translation on cf l's, which proceeds by translating on the phrase trees of the languages, and is specified by a finite set of tree-replacement rules.",
        "We present a procedure which, given a cfg and phrase-structure semantics for a source language and a cfg and phrase-structure semantics for a target language, will (usually) produce the finite set of ttee-replacement rules for the translation, if the translation exists.",
        "The procedure may be viewed as a computer program which is a translator generator, and which produces another program that is a translator."
      ]
    },
    {
      "heading": "0. Introduction.",
      "text": [
        "This paper presents a formal model of the translation of context free languages.",
        "The model is admittedly inadequate to provide for all the intricacies and complexities of the problem of language translation.",
        "Nevertheless, I hope that practicing applied and computational linguists will find it intuitively satisfying in its simplicity.",
        "At the same time, the model should give us a basis for proving some theoretical results about the nature of language translation.",
        "Translation is necessarily concerned with both syntax and semantics, so we begin with a formal definition of semantics for context free grammars.",
        "In Section 2, a simple algorithm for translating from one context free language to another is given.",
        "The algorithm is \"controlled\" by a finite set of rules which specify how to replace phrases in the source language with semantically equivalent phrases in the target language.",
        "The translation algorithm, it turns out, is straightforward.",
        "The key problem is in \"finding\" the finite set of rules which correctly specify the translation.",
        "The main part of this paper, Section 3, is concerned with that problem.",
        "Throughout the paper, we assume that grammars and semantics are given.",
        "There is nothing in this paper that tells you.",
        "how to go about writing the \"right\" grammar and semantics for a given cf 1.",
        "An earlier version of this paper was presented to the Eleventh Annual Meeting of the Association for Computational Linguistics at Ann Arbor, Michigan, August, 1973.",
        "This research was supported in part by NSF grant GN-534.1.",
        "Much of the presentation is formal.",
        "Some readers may find it helpful to read only through Example 1, and then to peruse Section 4 (Sample Translations) to pick up some intuition, before proceeding with the rest of the paper.",
        "1. Phrase Structure Syntax and Semantics.",
        "I assume the reader is familiar with the notions of \"derivation\" and \"syntax tree\" (alias \"derivation tree\", alias \"phrase marker\") for cfg's.",
        "Several good texts on these subjects are listed in the bibliography., The definition of semantics which I am about to give is based on the following two simple notions: 1) it is phrases which have meaAng (paragraphs, sentences, clauses, and morphs are special cases orphrases), and 2) the meaning of a phrase is a function of its syntactic structure and of the meanings of its constituents.",
        "Keeping in mind that a function is nothing but an assignment of elements in its codomain to elements in its domain, this definition will provide for idiomatic and emotive meaning, as well as denotative or referential meaning, provided such meanings are specified in the universe of discourse.",
        "I wish to add before giving the definition that, although I have never seen it in this form before, I do not believe this definition of semantics is original with me.",
        "I believe it incorporates the notions of semantics in Benson (1970), Knuth (1968, 1971), some statements attributed to Thompson (et Benson, 1970), and in Tarski (1936).",
        "Now the definition:",
        "P is the finite nonempty set of grammar rules, having the form A ÷ 0, for A E CV - E) ands E V+.",
        "A phrase-structure semantics for G is a 7-tuple",
        "A is a finite set of ndmes of partial recursive functions, F is a finite set of definitions for the partial recursive functions named in A, R is a finite set of semantic rules, with the property that to each grammar rule A .4- Bi...Bn there is assigned one semantic rule, having the form rA + B .B (x1,...,xn) = p' lee n where p E (M U X U A)+, and rA (X1' n) p A ÷ B1...Bn l' ' specifies a partial recursive function: rA 4 B ...B : u(B1)x – xii(Bn) ÷ P(A).",
        "1 n We also require that X fl (4 U A) = 0.",
        "There is an example on the next page.",
        "N is the set of non-negative integers, and f+ and I are recursive functions",
        "Note that r5,s+S(x1,x2'x3) = x2(xl'x3) does indeed specify a recursive function on p(S)xu(+)xp(S) 4 p(S), since if x1 and x3 are in P(S) = N and if x2 is in u(+) = {f+}, then x2(xl'x3) = f+(xl'x3) is in N and f+ is defined primitive recursive.",
        "Before explaining the example, let's first consider what the semantics is used for.",
        "We will need the following notation for trees:",
        "For readability, we write the members of M without unnecessary braces -i.e., \"1\" instead of \"{1}\".",
        "8 The above inductive definition gives a \"standard\" parenthetized notation for trees.",
        "Let us denote the root of a tree t, rt(t) and the frontier, fr(t).",
        "We shall also need the following non-standard notation: to[ti...tn] is a tree if t0, tl, to are trees and if fr(to) = rt(ti) rt(t2) rt(tn).",
        "Informally, to[ti...tn] is the tree formed by \"grafting\" each ti at the .th node of the frontier of t0, which can be done since this node has the same label as the root of ti.",
        "For example, the tree bzac c(\\e is denoted a<b<de>c>, and it has all the following non-standard representations: a<bc>[b<de>c], a<b<de>c>[dec], and a[a<bc>][b<de>c].",
        "As the reader can see, the \"box notation\" is useful for isolating any rooted subtree.",
        "In particular, note that S<S+S>[S<I>+S<I>] is the syntax tree S<S<I>+S<I>> of the grammar of Example 1, with its dominating subtree S<S+S> isolated.",
        "Now back to the semantics.",
        "The semantic rules R are used to define a function on the trees of the grammar which assigns to each syntax tree t a semantic function 0(t).",
        "Then and the meaning function p are.",
        "used to define a meaning function p on the sentences of G. First, we define 0, then p. To define 0, we must first define the codomain of 0, 4).",
        "Informally, 4 is the set of all nary functions on 2 x....x2U -+ 2U, for arbitrary n. Formally, let 4n = {f:2Ux.. • x2U 4 2U f is a function of n arguments}.",
        "Then 4 = U n=1,2,...",
        "The function 4): T(G) -+ 4) assigns to each t in T(G) a semantic function 0(0 on payx Odle xp(Bn) 0 p(rt(t)), where Bi...Bn = fr(t).",
        "To specify a semantic function we will use the notation f(xl,...,xn):D C, where f is the name of the function, (xl,...,xn) is the vector of arguments, D is the domain, and C is the codomain.",
        "is defined by the following inductive definition: T(G) is the set of syntax trees (partial and complete) of G.",
        "Intuitively, the semantic function assigned to each tree t is the composition of the semantic functions assigned to the subtrees of which t is composed.",
        "We leave it to the reader to verify that ci) is well-defined.",
        "The meaning function p on sentences is a special case of the meaning, function p on a larger domain -- the set of phrase forms of the grammar,.",
        "A. phrase form is similar to a sentential form, except that it need not be derived from the axiom.",
        "Formally, the set of phrase, forms of G is the set P(G) =.",
        "(wfwEV* andAtwfor someAEO.",
        "The function 4 is used to define the meaning function as follows.",
        "The function p:P(G) 2U is defined by the following rule: Let w = wi...wn be a phrase form in P(G) and let w have syntax trees tl, tm.",
        "Then the set of meanings of w is the set u =U (t4)(11(w1),...0-1(wn)).",
        "i=1,...,m - L(G), the language of G, is a subset of P(G), so the meaning function on, sentences, p:L(G) 0 2U, is just the restriction of p to L(G).",
        "10 Since the three functions p, and p have disjoint domains, they can never be confused, so we shall write p for all three.",
        "p is the meaning function, which assigns to each sentence, phrase form, and symbol, one or more meanings according to the semantics u.",
        "Thus, we are assigning meaning to a sentence by assigning to it the meanings which are computed by the semantic functions specified by its phrase structures, taking as argu, ments the meanings of the constituents of the sentence.",
        "The most elementary constituents of a sentence are the members of E which constitute it.",
        "One 'may think of these as the lexical items of the language.",
        "Their Meanings, which are the arguments of the semantic function, are among the morphemes of the language -- those morphemes which cannot be further separated into morphemes (this is the set of \"atomic morphemes\", M).",
        "Thus, the meaning of a sentence is a function of its morphemes.",
        "Which function to use is determined by its syntactic structure.",
        "A sentence can be semantically ambiguous if it has more than one syntax tree or if at least one of its constituents is semantically ambiguous.",
        "We retyrn to Example 1 on the next page.",
        "Now consider Example 1.",
        "Let w be the sentence \"I, + I`+ I\".",
        "It has the syntax tree",
        "One meaning of w is 0 (t) (p (I) , p (+) , p (I) , p (+) , p (I)) .",
        "For notational purposes, let t1, t2, t3, and t4 be the subtrees of t circled in the picture.",
        "Now compute this member of ii (w) :",
        "Note that \"I + I + I\" also has the syntax tree but the sentence is not semantically ambiguous since",
        "(t) (P (I) , (+) II (I) 11 0-) , 11(I)) = c(ti) (11 (I) P (+) 1 (I) (4-) 11 (I) ) 2.",
        "Translations As Tree Mappius.",
        "Consider now any two cfg's and their associated semantics, Gi, 1211 and G2, £2.",
        "A translation of L(G1) o L(G ) is a function",
        "The codomain of a translation must be the power set of the target language, since every sentence in L(G1) may have many semantically equivalent sentences in L(G2).",
        "In this paper we, focus on translations which are specified by a finite set of rules.",
        "For these translations, there is a simple algorithm for computing the translation of any sentence.",
        "This section presents the bethod for giving the finite specification of T and the algorithm for computing the translation.",
        "In fact, instead of specifying a translation on the languages, we specify a translation on the trees of the syntaxes.",
        "To make precise what is meant by \"translations which are specified by a finite set of rules\" we introduce the concept of a generating set for trees.",
        "Let T1 and T2 be two sets of trees with labels from some alphabet E. Define the set T0E to be the set of all trees with single nodes and labels from t, L.e., = {alaEE).",
        "Informally, Tl isagenerating.set for T2 just in case every tree in T9 is either in T0E or is constructed of a finite number of trees of Tl' and just in case every tree so constructed is in T2.",
        "Formally, let T be a set of trees with labels from E. The set",
        "The set of production, trees of a cfg is a generating set for the set of all the syntax trees of the grammar.",
        "Let G = (V, E, P, S), let P contain k rules, and let P = I A(i) 4 B(i)B(i) ..B (i) i = 1, 2, ..., k).",
        "The set T(G) of all syntax trees of G is the set gen(Tp).",
        "As a more concrete example, consider the cfg G given by the following rules:",
        "T(G) = gen(Tp) contains all trees of the following forms:: S(<0S)n(>)n n > 0, S(<0S)n<B>(>)n n > 0, S(<0S)n<11.<0»(>) 2 n >0, S(<0S)n<B<1»(>) , n >0, B, 0, 1, B'<O>, and B<l>.",
        "The tree t = S<OS<OS<B>>> is in T(G) = gen(Tp) since t = S<OS>[0S<OS<B>>1 and S<OS> E T \" 0 E gen(T ), and S<OS<B>> E gen(T ).",
        "Note that t can also P' be written as t = S<OS<OS>>[00S<B>], and again, S<OS<OS>> E genap), 0 E gen(Tp), and S<B> E gen(Tp).",
        "To specify a translation from T(G1) to T(G2) we proceed as follows: Let T be any partial function on VN VN , and let T be a generating set 1 2 t for T(G1).",
        "Let T be a function on T T(G2) x No which satisfies the following properties: if -^r(t) = (t', xl...xn) then i) rt(C) = .4rt(t)), and ii) n = Ifr(C)1, and iii) 0 < x.",
        "< Ifr(01, for i = 1, n, and iv) xi 0 = fr(t') = T(fr(t)x ), for i = 1, n. T(G2) Then we define the function T: T(G1) 4 2 by the following inductive definition:",
        "Note that the codomain of T is the power set of T(G2) because there may be trees in T(G1) whose non-trivial factorings into to[ti...tm] are not unique.",
        "For these trees, T(t) = { t(tojti...tm]) f to[ti...tm] is a representation of t }.",
        "As with languages, we will call T a translation only if it pre-T(G2)",
        "t' E T(t) cp(t)(111(w1),...,p1(wm)) n gc)(112(w1),...,p2(wil” # 0.",
        "N is the set of non-negative integers.",
        "0",
        "The functions T and T are the method for specifying the function T. The specification is finite just in case the generating set T is finite.",
        "The inductive definition for T gives the algorithm for computing the translation of any tree in T(G1), and the definition of T9 together with this algorithm and a general context free parser such as Floyd's or Early's algorithm, gives the algorithm for computing the translation of any sentence in L(G1).",
        "The next example illustrates.",
        "(In the following and in all subsequent examples, we shall give explicitly only the grammar rules, the right-hand side of the semantic rules, the universes of discourse, the meaning function, and those definitions of partial recursive functions that are necessary.",
        "The reader can easily determine the rest of the specifications for the grammars and semantics, if he wishes.",
        "For cfg's we shall follow the usual convention that all symbols which do not appear on the left-hand side of some grammar rule are terminal symbols, and that the axiom is the first symbol appearing in the first rule.)",
        "i.e., T(1-(2-3)) contains 123-"
      ]
    },
    {
      "heading": "3. A Procedure for Finding Translations (Usually).",
      "text": []
    },
    {
      "heading": "Suppose an oracle presents us with two cfg's G1 and G2 and their",
      "text": [
        "respective semantics 'Si and 0;2.",
        "Suppose also that a finitely specified translation from T(G1) to T(G2) exists.",
        "Can we find it?",
        "That is, can we 18 produce the finite set oft, rules defining the functions I and ;?",
        "In this section we consider a procedure which accepts two arbitrary cfg's and their phrase structure semantics and tries to find a description of such a translation.",
        "The procedure may not always work, in than it may not halt or the function T it describes maybe only partial.",
        "rut T is guaranteed to be correct; that is, the definitions of 1 and T pro-q duced specify a partial function T: T(G1) -* 2T(G2) which is a translation in the sense that, for any t E T(Gi), if T(t) is defined then T(t) is a translation of t. First, the procedure is presented; then we give the arguments that T is a (partial) translation.",
        "Intuitively, the procedure works as follows: We try to find a finite generating set T for T(G1) and a pair of functions 1: VN -* VI and",
        "(fr(t) ) if xi = 0.",
        "2 0 i In general, to get semantic equivalence, one has to be careful how the syntactic variables on the frontier of t are associated by the string x 0 with the syntactic variables on the frontier of t('), since these represent possible trees with mewing, and hence the domains of the semantic functions for t0 and t(').",
        "If such a generating set T and functions 1 and ; can be found, the job is finished, since it can then be shown that the function T defined by 1 and T is a translation.",
        "The procedure begins with the set Tp of production trees of Gl, which is indeed a finite generating set for T(Gi).",
        "If the procedure can find a \"translation\" for each t in TP' it will be successful, and will halt and output T, T9 and The procedure systematically picks successive trees t0 in TP and searches T(G2) for a semantically equivalent tree t' whose frontier it can match up by some rule x.",
        "If it finds one, it outputs the definition T(t00 ) (t' x), deletes t0 from T and tries one of the remain-\" ing trees.",
        "If it succeeds in exnausting Tp, it is successful.",
        "Suppose, however, that for some t0 in Tp, the procedure can't find a \"translation\" in T(G2).",
        "Then if we assume that T does exist, it must be the case that t is part of a larger tree (or of each of a set of larger 0 trees) which can be \"translated\".",
        "Furthermore, if we also assume that T is finitely specified, this set is finite.",
        "Thus, the procedure tries to construct a new set of trees, T1, not containing t0, which is a finite generating set for T(G1) - {t0}.",
        "It cannot be the case that the frontier",
        "language represented by T(Gi).",
        "The procedure takes the set Tl as a new generating set to work with and begins again.",
        "It turns out that finding T depends heavily an the sequence in which successive trees are chosen for translation attempts.",
        "Therefore, to guarantee that T will be found if it existg, the procedure tries all possible sequences of trees.",
        "The procedure has the general structure of a \"tree search\", and is represented by the search tree pictured.",
        "below.",
        "Each node in the tree represents a subprocedure which is described below the tree."
      ]
    },
    {
      "heading": "PROCEDURE",
      "text": [
        "Given two reducedt cfg's G1 and G2 and their respective phrase-structure semantics gl1 and 012' execute the search tree below for all integer pairs (maxi, maxs) = (1, 1), (1, 2), (2, 1), (2, 2), .",
        "If for any pair step 1 halts and outputs \"success\", then halt.",
        "t Reduced in the sense that each nonterminal symbol is derivable from the axiom and derives terminal strings.",
        "It is well-known that every cfg can be put into this form.",
        "step 1: • Set i O.",
        "• Define the (finite) set of trees To = {A<B22...Bn> I A } B1132...Bn E Pl.",
        "• Define the (finite) set of all possible partial functions",
        "{Tl, T2, ..., Tk} such that for each j = 1, 2, k, 4 V and ;.",
        "(S ) = S2 and for all A E V p (A) = p26j(A)).",
        "Ni N2 j 1 N , 1 1",
        "• Execute step 2 for each function 4j",
        "(i.e., for each j 1, 2, ..., k).",
        "If for some j the execution of step 2 returns \"success\", then halt and output \"success\".",
        "If step 2 returns \"fail\", increase j and continue.",
        "If step 2 returns \"fail\"foralli.",
        "(i.e., for all j), then halt and output \"fail\".",
        "step 2: (N.b., Ti is a finite set)",
        "• IfT.=0 then return \"success\".",
        "• If i > maid then return \"fail\".",
        "• Otherwise execute step 3 for each t E Ti.",
        "If the execution of",
        "step 3 returns \"success\", then return \"success\".",
        "If step 3 returns \"fail\", then pick the next t in Ti and execute step 3",
        "again..",
        "If step 3 returns \"fail\" for all t in Ti, then return \"fail\".",
        "step 3: • Execute search.",
        "• If search returns \"fail\" then execute expand.",
        "• If expand returns \"fail\" then return \"fail\" to step 2.",
        "• If either search or expand returns \"success\" then return \"success\" to step 2.",
        "search: • Generate the first (maxs) trees of T(G2):",
        "• Test each tree t' in T' to see if it satisfies each of the following properties:",
        "• If no such tree t' exists in T', then return \"fail\" to step 3.",
        "• If such a tree t' does exist in T' then A • define T(t) = (0, x) • set i + 1+1 - • define the set T = (Ti-1 {0) • execute a new version of step 2.",
        "• If step 2 returnssuccess11 return \"success\" to step 3.",
        "• If step 2 returns \"fail\" return \"fail\" to step 3.",
        "expand: • Let Dom (r) denote the domain of the current version of the function 1-, i.e., Dom(?)",
        "= {t “t) has been defined by.",
        "some execution of search in the current path of the search tree}.",
        "Let Ti denote the (finite) set (T. U Dom(T)).",
        "Define the set Tt to be the smallest set of trees which is a generating set for (gen(Ti) - {t}), and which contains the set (TI - {0).",
        "(Note that Tt does not contain t,)",
        "• If Tt is not finite, return \"fail\" to step 3.",
        "• Set i i+1.",
        "• Set T Tt.",
        "• Execute a new version of step 2.",
        "• If step 2 returns \"success\" return \"success\" to step 3.",
        "• If step 2 returns \"fail\" return \"fail\" to step 3."
      ]
    },
    {
      "heading": "END OF PROCEDURE",
      "text": [
        "Now we want to explain how the PROCEDURE defines functions (possibly",
        "the functions are translations.",
        "We shall also show that if the PROCEDUAE halts, the translation it total, except under certain easily identifiable conditions.",
        "Consider any path in the search tree.",
        "It looks like this:",
        "We need to identify two particular sets of trees associated with this path.",
        "Both are finite.",
        "The first is the domain of the function and the second is the set of trees \"excluded\" by the successive executions of expand.",
        "Note that each execution of the subroutine search adds one item to the definition of the function.",
        ":i, and the entire definition of T is given by the set of all these items defined by executions of search in the path.",
        "The domain of then, is the set Dom(?)",
        "= 1 -I(t) is defined by some execution of the subroutine search in the path}.",
        "Similarly, each execution of the subroutine expand, in its first step, defines a new set, Tt, which does not contain the tree t. This step has the effect of excluding the tree t from any further consideration in the translation process.",
        "The set of all such trees is the set Excl = {t I Tt is defined by some execution of the subroutine exclude in the path).",
        "Now, the set (DINM(T) U Tn) is a finite generating set for the set &T(G1) - Excl), so the functions T and I define a partial function T(GI) -r:•T(G1) 4.",
        "2 ' according to the definition in Section 2.",
        "Furthermore, if Tn = 0 then T is total on ,the generating set, and so T is total on (T (G1)- Excl), and this is just the case when the PROCEDURE halts.",
        "Since Excl is a finite set, we have the result that T is defined on all but a finite number of elements in T(G1), when the PROCEDURE halts.",
        "and therefore on L(G1) 2 2 .",
        "Let P(Excl) denote the set of frontiers of the trees of Excl.",
        "Note that each member of P(Excl) is a phrase form.",
        "Then when the PROCEDURE halts, since T is total on (T (G1)- Excl), it follows that T is total on (P (G1) - P (Excl)) and on (L(G1) - P(Excl)).",
        "Thus, T is total on L(G1) if PROCEDURE halts and if none of the trees excluded by exclude are complete syntax trees.",
        "If complete syntax trees are excluded, then their sentences are the only ones for which Tis not defined.",
        "We have left only to show that T is a translation.",
        "The reader may recall that there may be several nontrivial facto rings of trees into a form for which T is defined, and that this may lead to non-unique translations.",
        "Furthermore, the languages may be semantically ambiguous.",
        "These conditions make the proof that T is a translation less lucid, so we shall give here the proof for the case where T is defined for only one factoring of each tree and there is no ambiguity.",
        "It will be helpful in the proof to have the following notation: Let t E T(G1) have fr(t) =m and let t' E T(G2) have fr(t') = w' Then by 1St) E (1)(e) we mean",
        "Now to the proof.",
        "Let T(t) = t'.",
        "We wish to show that 4)(0 E (1)(e).",
        "Since t E gen(Dom(b), t can be written as to[t/...tm] where t0 E Dom(T) and each of the trees tl, ..4, tm E gen(Dom(.1)).",
        "Let r(to) = xl...xn).",
        "Then from the definition of T2 T(t) =0 1 ' ..t'] where for each",
        "For inductive hypothesis, assume that for each j = 1,...,m, 4)(t)=0*(T(t.)).",
        "Then we have:",
        "Finally, as we showed in Section 2, since T is a translation (on the.",
        "syntax trees), T is a translation (on the languages).",
        "In programming terminology a ,generator is a program whose input is a set of parameters and whose output is a specialized program (cf Brooks and Iverson (1969), p. 365).",
        "Then PROCEDURE constitutes a \"translator generator\": its input is two cfg's and their associated phrase structure semantics, and its output is a table of tree transformations which \"drives\" a standard tree-mapping program.",
        "The tree mapping program is designed to be part of a translator system composed of a parser, the tree mapper, and a frontier stripper (see Figure 1).",
        "Translation proceeds as follows: Let G1 and qgI be the cfg and semantics for the source language LI, and G2 and j 2 the cfg and semantics for the target language 1,9.",
        "The translator is given a sentence w in'L1.",
        "The parser produces a parse tree t(w) for w, (If w is syntactically ambiguous, the parser may produce all the parse trees of w.) If t(w) is in the domain of the function T defined by the tree mapper, the tree mapper will produce T(t(w)) whose frontier is a sentence u in L2.",
        "I[parser Tree I table transformation",
        "The importance of the argument that the function defined by the PROCEDURE is a translation, is just that w and u are guaranteed to have the same meaning.",
        "if they are unambiguous, and if they are ambiguous, w and u are guaranteed to have meanings in common -- i.e., that u is a bona fide translation of w, in the ordinary sense of the word The usefulness of such a method of translating is that the generator, which has to consider all issues of syntax and semantics, and therefore runs very slowly, need only run once.",
        "The translator which it produces should run very fast, since, other than parsing, it billy has to transform trees according to the finite set of rules in the tree transformation table (the function T).",
        "No semaneS computing is required at translate time.",
        "27 4.",
        "Sample Translations.",
        "This section presents some examples of translations on context free languages.",
        "The tree search procedure outlined in Section 3 is programmed in CPS and runs on the IBM S/370/165 at Ohio State.",
        "All of these translations were \"found\" by the program."
      ]
    },
    {
      "heading": "TRANSLATION I (Postfix to Precedence Infix) Postfix: Infix:",
      "text": [
        "G1: jl: G2: .82:"
      ]
    },
    {
      "heading": "Grammar Rules Semantic Rules Grammar Rules Semantic Rules",
      "text": [
        "Meaning function assigning atomic morphemes to lexicaL items and syntactic variables:",
        "It is interesting to note that the PROCEDURE does not have to know how to compute the functions f+, f f*, and f in order to discover this translation.",
        "All that is needed is to assume that if a symbol appears in both semantics, it represents the same semantic entity in each, whatever that entity is.",
        "For example, consider the two trees in the translation involving \"+\".",
        "Let t = S<SSO<+>>, and t' = E<E0<+>T<F<(E)>>>.",
        "All we need to know is that 4)(0 E 4(e),., and it turns out we can find that out without computing f+:",
        "Similarly, cp(C)(p2(E),112(+),p2(0,p2(E),p2())) = f+(R, R), so we know that, (1)(t) = 4e)."
      ]
    },
    {
      "heading": "TRANSLATION II (Explicit * to implicit *)",
      "text": [
        "This translation is interesting because it shows the procedure has the ability to \"discover\" that a word (*) in L(G1) has no translation.",
        "But it can find a phrase form involving that word which can be translated to a phrase form in L(G2).",
        "strings of the form 1 + 1 + + 1.",
        "Under a standard semantics, L(G1) expresses the even integers and L(G2) the integers.",
        "The procedure \"discovers\" that the word \"2\" in L(G1) must be translated as the phrase \"1 + 1\" in L(G2)",
        "Note that to \"discover\" this translation, the procedure must be able to compute the function f+, since it needs to know that 2 = 1+1.",
        "Consider, fot example, 4)(S<2>)(1.11(2)) = r5÷2(pi(2)) = 1(2) = 2, but",
        "evaluation of the second semantic function, the procedure must be able to compute f+(1,1).",
        "TRANSLATION IV (1,+ to 2,+) Suppose the procedure were asked to translate from L(G2) to L(Gi) in the previous example -- i.e., from the integers to the even integers.",
        "It would never halt, but it would \"discover\" that the phrase \"1 + 1\" is to be translated as the word \"2\", \"1 + 1 + 1 + 1\" as \"2 2\", etc.",
        "It would define a translation which is total on the strings in L(G2) whose values are even, and it would continue to look forever for possible translations for the odd-valued strings.",
        "We leave it as an exercise for the reader to give the functions T and t which define this partial translation."
      ]
    },
    {
      "heading": "5. Conclusion and Further Research.",
      "text": [
        "At the present time what is needed more than anything else in the area of language translation is an understanding of the formal nature of semantics, its relation to syntax in language description, and its role in translation.",
        "I believe this paper provides some of the basis for that understanding.",
        "Incidentally, the reader might have observed that the definition of phrase-structure semantics in Section 1 provides for solutions to the semantic projection problem (cf Katz and Fodor (1964), and Langendoen (1969)).",
        "The reader is certainly aware by now, if not before, that there are many grammars and semantics for a given language.",
        "After having played with writing grammars and semantics for simple languages for quite a while now, I believe that, for most languages at least, there are \"better\" grammars and semantics and \"worse\" ones.",
        "Some just seem to be more elegant or simple, or \"natural\" than others, for a given language.",
        "But I",
        "can't say much of a specific nature about what it means for a grammar and semantics to be \"elegant\", \"simple\", or \"natural\".",
        "It seems that, ome study in this area might give us insight into certain skills for making it easier to write linguistic descriptions suitable for translation.",
        "One phenomenon this model explains is why it is so difficult to compute an inverse translation and get anything like the original.",
        "That is, if one starts with sentence w in L1 and translates to w in L2, then translates w' to w\" back in L1, one would like for•w and w\" to have the same meaning.",
        "But the scuttlebutt says it isn't so, and this model shows L7 why.",
        "Note that all that is required for T: L1 2 - to be a translation is that if w' is a transl-aflon of w, then u1(w) fl P2(w0) '0 0, i.e., that the source sentence and its translation have some common meaning.",
        "Now suppose TT:L2 + 2 1 is also a translation and that w\" E T'(w').",
        "Then we have p1(w) fl P2 (w')0 0 and id2(wI!)",
        "n P1(w\") 0 0, but Lt does not follow that p1(w) n1(w\") 0 0.",
        "In °Icier to get back to the original meaning, each translator must produce the entire set T(w), rather than just some sentence in T(w), and then all of these must be retranslated in entirety.",
        "Translation programs don't usually do that.",
        "Neither do human translators, for that matter!",
        "Alternatively, the translator should bt able to give with the translation, its parse and the atomic morphemes associated with the sentence.",
        "The procedure in this paper provides for doing that.",
        "The same definition of translation, if it is accurate, also explains another phenomenon of language translation -- how it is that two very different translations can coi.le from the same source.",
        "If le and w\" are translations or w, then we have pl(w) n 112(4') 0 0 and p1(w) u2 (w\") 0, but it does not follow that P2(7') fl 112(1.7\") # 0.",
        "For natural language, one would like to0'exte i the theory in this paper to arbitrary phrase structure grammars acrd to transformational grammars.",
        "The extension to transformational grammars requires only The \"lore\" has it that someone fed.",
        "the following sentence to a translator from LI to L2: \"The spirit indeed is willing, but the flesh is weak.\"",
        "Then he took the translation and fed it into a translator from L2 to L1, and got: \"The liquor is all right, but the meat is spoiled.\"",
        "35 formalizing the notion of the transform pf a semantic function to be associated with each syntax transformation.",
        "(For transformational semantic theories which do not allow semantic change in the transformations, the extension to arbitrary phrase structure grammars is sufficient, of course.)",
        "The extension to arbitrary phrase structure grammars requires first a formal statement of the \"phrase structures\" of unrestricted grammars, since these structures are not trees.",
        "The author's forthcoming paper, listed in the bibliography, covers the subject of the syntactic structures for unrestricted languages in detail.",
        "There are, of course, schemes for translation other than the one described in this paper.",
        "One might think of computing the meaning of a source sentence, and then having some effective way of generating the target sentence directly from the meaning.",
        "The scheme in this paper, however, is more attractive at present than such a \"direct\" scheme, for three reasons: 1) It is intuitively satisfying.",
        "I believe I translate by first translating simple phrases and then putting their separate translations together according to some restructuring rules that are guaranteed to preserve semantics.",
        "Thus, one \"builds up\" the translation of a sentence recursively.",
        "I am more likely to call the result which I get by first computing the whole meaning and then producing a sentence (often it is a sequence of sentences) with the same meaning, a \"paraphrase\" or an \"interpretation', rather than a \"translation\".",
        "2) If used much, this scheme is likely to be more efficient than the \"direct\" scheme, since no semantic computation is required at translate time.",
        "Pal the semantic problems are examined once and for all in the translator generator; at translation time, only a sequence of tree mappings is performed -- simply a structure matching and replacing technique.",
        "3) The \"direct\" scheme requires knowing how to specify linguistic descriptions in such a way that, given a meaning in semantic notation, one can produce a sentence having that meaning.",
        "This problem Is a diffidult one not yet well understood.",
        "Presumably, the research currently under way in the field of generative semantics will explicate the issues involved."
      ]
    },
    {
      "heading": "MICROCOPY RESOLUTION TEST CHART NATIONAL BUREAU OF STANDARDS 196i A",
      "text": []
    }
  ]
}
