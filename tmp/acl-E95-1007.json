{
  "info": {
    "authors": [
      "Jurgen Wedekind"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E95-1007",
    "title": "Some Remarks on the Decidability of the Generation Problem in LFG- And PATR-Style Unification Grammars",
    "url": "https://aclweb.org/anthology/E95-1007",
    "year": 1995
  },
  "references": [
    "acl-C88-1009",
    "acl-E91-1036"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper, we prove the decidability of the generation problem for those unification grammars which are based on context free phrase structure rule skeletons, like e.g. LFG and PATR-II.",
        "The result shows a perhaps unexpected asymmetry, since it is valid also for those unification grammars whose parsing problem is undecidable, e.g. grammars which do not satisfy the off-line parsability constraint.",
        "The general proof is achieved by showing that the space of the derivations which have to be considered in order to decide the problem for a given input is always restricted to derivations whose length is limited by some fixed upper bound which is determined relative to the \"size\" of the input."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Unification Grammars with a context-free skeleton, like Lexical Functional Grammar (LFG) and PATRII (cf. e.g. Kaplan and Bresnan 1982, Shieber et al.",
        "1983) assign to a sentence not only a constituent structure (c-structure), but also an additional linguistic entity.",
        "In the rather restricted grammars of the early stage this entity is identified with a special graph structure, commonly called feature structure.",
        "Since a string is regarded as well-formed only if a (well-formed) feature structure is assigned to it by the grammar, two inverse decidability problems arise which had to be solved in order to know whether we can formulate terminating parsing and generation algorithms.",
        "If we retain the terminology of the early stages then an adequate parsing algorithm requires that we can decide for a given grammar and a given string whether there exists a feature structure assigned to it by the grammar (parsing problem) and an adequate generation algorithm requires that we can decide for a given grammar and a given feature structure whether there exists a sentence to which this structure is assigned by the grammar (generation problem).",
        "While we already know for a long time that the parsing problem is undecidable (cf. Kaplan and Bresnan 1982, Johnson 1988), we want to show in this paper that the generation problem is decidable even for unrestricted (not off-line parsable) unification grammars.",
        "For the proof we first introduce in section 2 the type of grammar we want to consider.",
        "In section 3 we then define the generation problem and show its decidability in two steps."
      ]
    },
    {
      "heading": "2 Preliminaries",
      "text": [
        "The unification grammars we want to consider consist of rules with a context-free skeleton and a set of annotations associated with the constituents mentioned in the rules.",
        "Typical examples taken from LFG and PATR-II are given in figure 1.",
        "For the for-S",
        "Figure 1 Examples of rules in LFG (left) and PATR-II format (right).",
        "mal definition of those grammars we reconstruct the annotations as formulas of a quantifier-free sublanguage of a classical first-order language with equality whose (nonlogical) symbols are given by a finite set of unary partial function symbols and a finite set of constants.",
        "For the translation of LFG and PATR-II annotations we regard the attributes (in figure 1: SUBJ, PRED, AGR, NUM, PER) as unary partial function symbols and the atomic values (in figure 1: JOHN,",
        "SG, 3RD) as individual constants.",
        "Furthermore, we assume for a context-free rule of the form A w (w E (VN U VT)*) that the variable xo is associated with A and that for each occurrence wi in w there is a variable xi which is associated with wi.",
        "For the formal reconstruction of LFG's we assume that each occurrence of in the annotation of wi corresponds to an occurrence of xi and that each occurrence of t corresponds to an occurrence of xo.",
        "For grammars in PATR-II format we suppose that occurrences of categories in the annotations correspond to the associated variables.",
        "Before we give the definition of the grammars we want to investigate, we introduce the following notation.",
        "In the following we use S[xl, xn] to indicate that the variables occurring in the set of formulas S are included in {xi, .., xril and S(xi, x.)",
        "if the set of variables occurring in S is exactly {x1, xn}.",
        "1.",
        "DEFINITION.",
        "A unification grammar is a tuple (VN, VT, S, F1, V, V, R), consisting of a finite nonterminal vocabulary VN, a finite terminal vocabulary VT, a start symbol S E VN and a feature-description language L determined by a finite set of unary partial function symbols F1, a finite set of atomic values V and a denumerable set of variables1",
        "vocabularies are pairwise disjoint.",
        "R is a finite set of rules of the form r= ((A, w), Sr[xo, , xiw (xi E V), with (A, w) E VN X ( VN U VT )* (a context free phrase structure rule) and Sr[xo, x1.1] a finite set of (quantifier-free) literals of L.' According to our definition the LFG rules in figure 1 are now expressed as depicted in (la) and the PATRII rules as given in (lb).",
        "Note that the structure of the terms is now \"mirror imaged\", since we assume the attributes to be unary partial function symbols.",
        "(1) (a) (S NP VP, {SUBJ X0 Pe.",
        "Xl, X0 ';',1 X2}) (NP 4 John, {PRED X0 JOHN}) (b) (SNP VP, {AGR X2^..,-* AGR Xi)) NUM AGR xo SG, 1 \\ (NP Uther, {PER AGR Xo 3RD f For the definition of the sentences derivable by a unification grammar we have to specify first what derivations are.",
        "2.",
        "DEFINITION.",
        "A sequence of pairs 7T0...7rn with 7ro = (B0, 0) (B E VN) is called derivation of length n if for each Tit = (13 [Awl() , S) (0 < 1< n) there is a rule r = (A > , Sr) such that",
        "For the steps depicted above the sequence to is given by tvi = 0 and tv2 = 2 and the feature description derived by 7r from 0 to 2 (S2) is {SUBJ X0r.z,' Xi, X0 Pe, X2, X2'A.,' X2.1, XCOMP x2 %,--1 x2.2}.",
        "Sentences are then defined as follows.",
        "5.",
        "DEFINITION.",
        "A terminal string w (w E V) is a sentence if there is a derivation (Se, 0) = Iro.7rn with wn, = s[w]o and 3x,.x0.",
        "A sj,,(xt , , satisfiable.'",
        "In the following we write S forif the interval covers the whole derivation, i.e. if iris of length Since a specific reduction algorithm and a few model-theoretic facts required in the proofs later on can be introduced by showing how satisfiability of such existential prenex formulas can be decided, we will continue with a short excursion on satisfiability.",
        "'We use s[w]0 to denote an S-rooted c-structure with yield w."
      ]
    },
    {
      "heading": "2.1 Satisfiability",
      "text": [
        "In order to test whether for a given finite set of literals S of a feature-description language (2)",
        "(2) ]xi..x/ A s(xi, xi) is satisfiable, we can exploit by skolemization well known test procedures available for quantifier and variable-free sets of such literals.",
        "Let C be a set of Skolem-constants (I{xi, ., xi} I = ICI) and 0 be a bijective function from {xi .., x1} to C, then (2) can be tested by testing the set of literals (3) over L(C)4 (3) S[0], since (2) and (3) are equi-satisfiable.",
        "In the following we complete the procedure by introducing a reduction algorithm that reduces a set of literals (3) according to a measure in a sequence of measure decreasing rewrite steps to a deductively equivalent set (4) (in reduced form) (4) (S[9])p, which is satisfiable iff the terms T of all inequalities T 7 of (4) do not occur as subterms in equations of (4).5 For the proof we first introduce a few definitions and some notation.",
        "Let T be the set of terms of a variable-free feature-description language L(C).",
        "Then an injective function m E [T 1-+ N1 is a measure if it satisfies the following conditions for all T, T1 E T and a E (i) if 171 < 1711, then m(7) < m(71), (ii) if m(7) < m(71), then m(o-r) < m(ur').",
        "For literals and sets of literals S we extend a measure m as usual by m(()7 7') = m(7) + m(7')",
        "In the following we use T T1 if m(7) > m(7') and to denote ambiguously 7 71 or 71 S T. Let S be a set of literals then E denotes the set of all equations in S, Ts the set of terms occurring in the formulas of S (Ts = {r,71 I ()T S 71 E S}) and SUB(Ts) the set of all subterms of the terms in Ts SUB(Ts) = {7 I cIT E Ts, with a E For the construction of a reduced form we need a specific partial choice function p which satisfies p(S) E frESITE if the specified set is nonempty and undefined otherwise.",
        "6.",
        "DEFINITION.",
        "For a given finite set of literals S and a choice function p we define a sequence of sets Sp, (i > 0) by induction:",
        "if p(Sp) undef.",
        "Since m(Sp,) > m(S1) if p is defined for Sp the construction terminates with a finite set of literals.",
        "If we set Sp,; with t = min{i I Sp, = Sp,,,} the following lemma can easily be proven by induction on the construction of 5p.6",
        "7.",
        "LEMMA.",
        "For S,, it holds that: (i) SS p, (ii) if TE Sp then T SUB(Tspv,,,:T,}).",
        "Since Sp is obviously not satisfiable if it contains an inequality T T and T occurs as a subterm in Ep, the whole proof is completed by showing that we can construct a canonical model satisfying Sp if Sp does not contain such an inequality.",
        "For the model construction we need the set Thp = fr E SUB(TEp) I 13T1 (T T1 E 4)1 and the function le E [SUB(TE,) 1-4 Thp] which is defined for each 7 E SUB(TEp) by",
        "and the interpretation function .cap, which is defined for cEVUC,/ E Fi and 7 E tip by: hc (c)if c E SUB(TE,) :1p(c) = {undefined otherwise f ft' (f 7)if fT E SUB (TE, ) P(f)(T)lundefined otherwise.",
        "For Mp which is well-defined the following lemma holds: 9.",
        "LEMMA.",
        "If T is a subterm of Ts, then (i) c-lp(T)= hc(T), if T E SUB(TE,), (ii) r E SUB(TEp), if r E Dom(,,).",
        "PROOF.",
        "(By induction on the length of r.) The lemma is trivial for constants.",
        "By showing (i) before (ii) we get the induction step for a subterm of Ts, in both cases according to",
        "We get C p (r = hC (T) by inductive hypothesis and h'(7) = T , since 7 lip would imply the existence of 61n order to verify 7(i) cf. e.g. Wedekind 1991 and 1994.",
        "T E Ep and Pr could not be a subterm of Ts, according to lemma 7(ii).",
        "Now, if (i) fr E SUB(TE, ) then ^'F- p(f)(T) is defined and equal to he(fr) and (ii) if fr E SUB(Ts) and C (f r) is defined then fr E SUB(TE).",
        "On the basis of lemma 9 it is now easy to prove:",
        "10.",
        "LEMMA.",
        "VT T E Sp(T SUB(TEp )) A/p S. PROOF.",
        "(If the condition is satisfied 0 holds for every 0 E Sr.) If 0 =- E Sp with m(7') < m(7), then T' E Ti.p by 7(ii) and hence lic(7') T1.",
        "We get then Itc(7) T' for m(71) = m(7) by Ti = T and for m(7') <m(T) by the definition of hc , since T T. Thus ^1' p(T) = :1,0(7') by 9(i) and hence 0.",
        "Assume 0 = T .",
        "If T T1 were satisfied by Iv!,,, we would get :1 p(T) = p (7-') and by 9(ii) T E SUB(TEp).",
        "Since 7(ii) ensures lic(r) = hc(73) = T = r', we would have 7 7 E Sp with T E SUB(TEp).",
        "0 Finally it should be mentioned that Mp is a unique (up to isomorphism) minimal model for S,,, i.e. if M is a model for Sp, homomorphic to Mp, then every minimal submodel of M that satisfies S,, is isomorphic to M,,.",
        "3 The Generation Problem and its Decidability Although it was not necessary for the definition of the sentences derivable by a unification grammar, we now have to make explicit that also a feature description is assigned to a sentence.",
        "11.",
        "DEFINITION.",
        "A terminal string w (w E VP is derivable with feature description 3x1..x/0(xi, , xt) if the feature description is satisfiable and there is a derivation (So, 0) = 70..7n with con = s[w]o and = A s7r",
        "Since deductively equivalent consistent feature descriptions are assumed to describe the same set of feature structures (models), the assignment of entities to terminal strings determined by a unification grammar is then formally given by a binary relation A between terminal strings and sets of classes of deductively equivalent feature descriptions [axi-x10(x1, 12.",
        "DEFINITION.",
        "For each terminal string w E 1/4: and each class [3xi 0(xi , xt)]: A (w, [3x1.xi0(xi, , if w is derivable with"
      ]
    },
    {
      "heading": "3.1 Redundant Recursions and Pumping",
      "text": [
        "For the proof that for a derivation of a sentence w with (consistent) feature description 0 there always exists a short derivation of a sentence w' with feature description 0' and 0 0' we exploit the fact that a c-structure may contain recursions of the form depicted in figure 2 whose corresponding subderivations in 7r are eliminable.",
        "Such recursions are called redundant.",
        "14.",
        "DEFINITION.",
        "Let IT be a derivation of a sentence uvzxy of length m + k + 1 whose c-structure derivation has the form wo..con,..con,+k..comk/ = con with wm = S [U A y] 0 and comk s [u, A [v , Ap.n, x]n , yjo (reorder if necessary).If 7' is a derivation of uzy of length m + 1 which is defined for each j (0 < j < m + 1) by =",
        "A c-structure with recursion A[v, A., x],(J,cJ > 0).",
        "and",
        "19.",
        "DEFINITION.",
        "A set of literals S(xi, _xi) is independent if there is no formula (j) E S for which 3xi..xi(A(SV5I) D 0) holds.",
        "Normal forms are then defined as follows.",
        "20.",
        "DEFINITION.",
        "A consistent feature description x1 ..x1 A sixi, xi] is in normal form (in the following indicated by a V index) if Sixi,..,xil is independent.",
        "Furthermore, we call 3x1 ..x/ A svfxi, , xil a normal form of 3xi..xix'1..x,, A .., if S, is an independent subset of S'[0] E R(S`) and",
        "Lemma 18 and the condition in definition 20 ensure that a consistent feature description and its normal forms are deductively equivalent.",
        "In order to be able to show the existence of a redundant recursion, we exploit the simple fact that the information which contributes a literal in a normal form with a minimal model (up, p) can be specified by an equation T r-Z=, TI where iff 1T1 +1711",
        "p.t f 3>m and tV j+ k = r if j < m 7rrn-1-1-.7rrn+k is a redundant recursion 3xi..x/ A srr (xi, .., xi) IF 34.4 A sir', If we assume that a given derivation of a sentence is already shortened to a derivation without redundant recursions it remains to show that the length of such a derivation could not exceed the upper bound determined by the \"size\" of the derived feature description.",
        "The \"size\" of a consistent feature description is on the one hand determined by the size of its minimal model, and on the other hand determined by a normal form into which every feature description can be converted.",
        "The conversion is performed in two steps.",
        "In the first step, we eliminate as many variables as possible by substitution.",
        "15.",
        "DEFINITION.",
        "If S(xi, .., xi) is a set of literals, then x, is elirninable in S(xi,..,xi) if there is a term T not containing xi such that 3xi...xt (A S(xi, .., xi) D xi7).",
        "16.",
        "NOTATION.",
        "In the following we write SI-xi, , xi] if each xi is not eliminable in S. 17.",
        "DEFINITION.",
        "We assign to a set of literals S' (xi ,.., 4) a set R(S') which contains a set Sixi,if there is a substitution",
        "for all x (1 < < k) and Sixi,= S'[0].9 By the substitutivity theorem we get: 18.",
        "LEMMA.",
        "IfE R(SI (xi ,.., xhaci , ek)) then 3xi..x`k (A S AS').",
        "In the second step, we make the set of literals independent, i.e. we remove those literals which are implied by the remaining subset.",
        "/.., xl) denotes the set of terms over V, {xi,.., xi} and < JU,, + 2.",
        "A literal r o-oir\" (Icr1> 0) whose terms are longer must always be reducible by a loop dr\" T\" to a shorter equation.",
        "Since the construction of such an information piece can be done with a subderivation of some fixed length, there must be a redundant recursion if the length of whole derivation exeeds a fixed value which is dependent on Pp' and 1S14 and exactly specified in lemma 21.10 21.",
        "LEMMA.",
        "Suppose that w E 1/4-,' is derivable with =3xi..xix'i..4 A sir (xi, .., x'k) over 7r of length n, thatRxi..xl A s, [xi , is a normal form of q5 and that Mp = (1,1p,,i-p) is a minimal model of 0.",
        "If 7r has no redundant recursions then each path of w is shorter or equal to IVNI (31/1,01 + 1) ((Sp!",
        "+ 1).",
        "PROOF.",
        "Suppose, one path of con were longer than 1VN1 (31/41 + 1) (1,5,1 + 1), then more than (3 Pp' + 1) (1S,1 + 1) different nodes on that path had to be labelled by the same A E VN.",
        "Without loss of generality we can assume that iris a derivation whose c-structure derivation w has the form cA.,0..wm..w, with win s [u, A, y]o for each node p on that path which is labelled by A (reorder if necessary).",
        "In order to exclude that complex inferences are used to build up 0, we assume furthermore that U is non-deterministically constructed from S by recursive variable substitution, i.e. we require for each (x, GT) E 0 either xr:,-crr E S' or E((y, r) E 0).",
        "Finally, let S C S7 with Sz, = S[0].",
        "In order to identify the redundant recursion we have to consider the following cases.",
        "1.",
        "Suppose there are more than 1S,1 + 1 A-labelled nodes p such that xp does not occur in S7, then there must be more than 1,5,1 non-overlapping recursions.",
        "For at least one of those recursions 7r1+1...71-77,+k it must hold that (s nu mThe given factor I VN I (3 + 1) (IS + 1) decreases for more restricted grammars, like e.g. grammars which allow only feature descriptions with single-rooted and/or acyclic minimal models.",
        "then",
        "We can then assign to each recursion 7rm-F1rm+k (m=i,k=l;m=i+1,k=v or m=i+1+v,k=z) a type which corresponds to the strongest of the following conditions the recursion satisfies.",
        "(b) It holds only 3xi..x'k(A Sm1r+1.k D xpa, ax) with la!",
        "> 0 and a0(x) O(x) is implied by 3xi ..xik (A SLm+k A S9) where S9 is the set of ground literals of S. (c) Or it holds 3x1.4 (A sil+1,.+k with la > 0 and o-'19(xo.)O(xo.)",
        "is implied by H(A Sni\" +i, A S9).",
        "(d) If a recursion which satisfies 3x1(A S+171-1-kXptKax) WTI > 0) is not of type (b) then there must be a ground term T which is not reducible in terms of xo, i.e. 6 can not satisfy T = C710(Xp) for some non-empty prefix a', and 3x,...x1k (A S7r D xp.A re(xp)).",
        "(e) For a recursion with 3xi..4 (A ST1-1-1m-1-k D atXtttcxis) which is not of type (c) we get for xi, the same property as for xo., in (d).",
        "(f) If the previous cases do not apply, the recursion might satisfy H 3x1..xik(A S91-1-1.--mk D a' x,axP) with lal > 0 and la' > 0.",
        "Since xo is not eliminable in terms of xo.",
        "and vice versa, there-must be ground terms T, T1 such that 3x1..4 (A Sir xp TA xp.",
        "T1 A r T').",
        "(g) If a recursion is not of type (af) then 3xi...x'k(A Sm\" +1,m+k D ax xi, A u'y",
        "But then x and xu.",
        "must be ground eliminable as in (f).",
        "Since a recursion of type (ac) is not redundant if it contains terms T or T1 such that T is not reducible in terms of xu and Ti is not reducible in terms of xo., and r or T1 are used to eliminate xo and xo., there must be at least one recursion 7r,o+1...7rmk such that 3x1(A S(SJ,,,US7I+k+1,,,,U {xo xo.)))",
        "and 0 still follows either by ground inferences or due to the properties of (b) and (c).0 If /max = max{lw I I ((A, w), Sr) E RI then the following pumping lemma follows immediately as a corollary.",
        "22.",
        "COROLLARY.",
        "Suppose that w E VI is derivable with cb Rxi..xix'3...x'k A Sir (X1 4) over 7r of length 71, that ]xj...xi A s,, [xi, ..,x11 is a normal form of (1) and that M09 = (U ) is a mini-P, P mal model of (b.",
        "If Iwi > IVNI.",
        "(21U p1+1) lmaxthen w has the form uvzxy with Ivxl > 0 and for all i 1: (uvizxiy, [3xiA sir (xi , ..,x1k)j) E A PROOF.",
        "If wi > 11=(21141+1) then at least one path of wo is longer than IVNI (2 1141+1) and more than 21/41 + 1 different nodes on that path are labelled by the same A E VN.",
        "Without loss of generality we assume again that 7r is a derivation whose c structure derivation w has the form wo..wm..wo with Wm = s [u, Ao, y]o for each node tt on that path which is labelled by A, and that 0 is non-deterministically constructed from Sif by recursive variable substitution, i.e. we require for each (x, ar) E 6 either xar E S' or 3xo-y E S'((y, E 0).",
        "Suppose furthermore that S c S\" with Su = S[0].",
        "In order to isolate the recursion which allows pumping we have to distinguish the following cases.",
        "p.ici.t if j > m + ik and Wij_k = By induction on i it can then be shown for all possible cases that H 3x/-(A Sir* AS).0"
      ]
    },
    {
      "heading": "3.2 Invariance of the Parameters under Deductive Equivalence",
      "text": [
        "Since the universes of the minimal models of two deductively equivalent consistent feature descriptions must have the same cardinality, for the completion of the proof of theorem 13 it remains to be shown that two deductively equivalent consistent feature descriptions have the same \"information content\", i.e. that the sets of literals of their normal forms have the same cardinality: 23.",
        "LEMMA.",
        "Suppose that 3xi..xt A sv Ix', , xii and 3yi..yk Aykl are deductively equivalent consistent feature descriptions in normal form then is,,rxi, ., xti = , yki 1",
        "23 in two steps.First, we convert Sui fyi, ykl into a set the same cardinality such that xi]-a- A sp\" [xi, .., x/1) holds.",
        "24.",
        "LEMMA.",
        "Assume that 3x1-xl A Sjxi, ., and 3yi..yk A S, rare deductively equivalent consistent feature descriptions in normal form.",
        "Then 1 --= k and there is a set Sv\"1-xi,with (i) 15'p/11xi,xil I =FYi,Ykl I and (ii)3xi..xt (A S,, Ixi , xil a A Su\" fxi, xil ).",
        "PROOF.",
        "Suppose that {xi, .., xi} n {yi , , yk} = (rename if necessary), that 5, iyi , , ykl is in reduced form (the reduction of an independent set does not change the cardinality) and that M = (1 ,:.1) is an arbitrary model of 3x1..xt A Su fx1, , x/1 and 3y1..yk A s,,' rm.",
        "7 .1 Ykl p Let a and a' be assignments such that aS,, {xi, .., xil and a'./v/ S'y f-Y1,,Yklp",
        "We show first that there is a bijective function E { yi, Yk }1 such that for all xi there is a c E Fi* (i = 1, ..,/) and a variable /9(x2) occurring in S' with a(xi) = (cri/9(xi))(a').",
        "First of all 19 is left-total, since a(xi) = (7-) with T variable-free would imply that xi is eliminable in S.In order to show that t is a function, assume a(xi) = (:s((7-jyj)(&)cs's(ahyh)(cr') for Yh occurring in S' with yi ykSince yj and yh are not eliminable in 5' there must be terms 7-j, Th such that a1(Yj)(7-3)(a),",
        "there is no a e 17 such that Z'(o7-,)(a) Wrh)(a) or (cri-h)(ce) = (-7-j)(a).",
        "Thus, -rj and Th must be terms in T({xi,.., xi}\\{xi}) and xi would be eliminable in S. Suppose now that yj is not in the range of /9.",
        "Then there must be a term 7 with (47-)(a) a1(yi).",
        "Since yj is not eliminable in S1 T must be of the form o-xi and there must be a term T1 with a(xi) = .q.(7-')(a1).",
        "If T1 is a term in T({Yi, yk} \\ {yi}), yj would be eliminable.",
        "Otherwise T1 is of the form a'yj and we would get a(xi) = y j)(a').",
        "Hence 0 is onto.",
        "Assume finally a(x) = (cliyh)(a') and a(x3) =(aiyh)(a1) with x2 xj.",
        "Then there must be a term T with a1(yh) = 5:s(r)(a).",
        "Since xi and xi would be eliminable in S if T is a term in T({xi,..,x/}\\{xi,X2}), T is of the form ax, or ax.",
        "But then either a(x) = No-jax,)(a) or a(xi) = :1(0-iaxj)(a).",
        "Thus, 19 is bijective and 1 = k. On the basis of /9 we then define a sequence of new sets S: (0 < i < /) by induction as follows (within the induction we assume 19(x,) y): SO= S:,ryi, if a(xi) = a'(y) U {x,crio-xj} if (A), where (A) means a(xi) a1(y),E S.:_1 and a(xi) = ca(ody)(a1).",
        "In the case where the variables refer to different nodes on a loop (a(xi) a1(y)) the definition is well-formed, sincep is reduced and normalized and thus there must be exactly one equation yo-a'y in S,'_1 describing the loop with the node to which x, refers.",
        "For S\" = ISuurxi,..,xliiYkl I follows immediately by induction on the construction of S\".",
        "Finally we get (ii), since H 3x1..x,(3xii ..xt A S,, fx1,.., x11 E 3/9(xi+1)../9(x1) A s; [xi , x t9(xi+i), ..09(xt)]) can easily be verified by induction on the construction of S\".0 Since two deductively equivalent independent and consistent sets of (variable-free) literals reduce to the same set of literals in reduced form, lemma 25 follows by skolemization and completes the proof of lemma 23.",
        "25.",
        "LEMMA.",
        "If 3xi..xi A svrxi, .., xi] is a consistent featuredescriptioninnormalform and I 3x1(A Sv {xi, .., xil a A sv\"xil) then IS v [xi= Appendix: Syntax and Semantics of Feature-Description Languages A feature-description language L(C) consists of the logical connectives (negation), D (implication), the equality symbol the existential quantifier 3 and the parentheses (, ).",
        "The nonlogical vocabulary is given by a finite set of constants V (atomic values),",
        "We proof lemma show that we can S,\" {xi , with",
        "a possibly empty finite set of constants C (Skolemconstants) and a finite set of unary partial function symbols F1 (V,C,F1 pairwise disjoint).",
        "The class of terms and formulas of L(C) are recursively defined as usual.",
        "Feature descriptions of L(C) are expressions of the form Dxi..xi A s[xi, ., xd, where S is a finite set of (quantifier-free) literals.",
        "(We assume that the connectives V (disjunction), A (conjunction) and a (equivalence) are introduced by their usual definitions.)",
        "A model for L(C) consists of a nonempty universe 1,1 and an interpretation function.",
        "Since not every term denotes an element in U if the function symbols are interpreted as unary partial functions, we generalize the partiality of the denotation by assuming that itself is a partial function.",
        "It is only required that all Skolem-constants denote.",
        "Suppose [X 1, 11 designates the set of all partial functions from X to Y and [X Y] the set of all total functions from X to Y, then a model is defined as follows:\" DEFINITION.",
        "A model for L(C) is a pair M = consisting of a nonempty set 1,1 and an interpretation functionU cy U F such that",
        "If we extend the denotation function to terms and variable assignments a, the definition of the satisfaction relation differs only in the clause for the equations from the usual one: a km T T1 if (:s(r)(a) and :1(r')(a) are defined and (-i-)(a) ="
      ]
    }
  ]
}
