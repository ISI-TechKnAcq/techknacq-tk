{
  "info": {
    "authors": [
      "Giorgio Satta"
    ],
    "book": "Annual Meeting of the Association for Computational Linguistics",
    "id": "acl-P92-1012",
    "title": "Recognition of Linear Context-Free Rewriting Systems",
    "url": "https://aclweb.org/anthology/P92-1012",
    "year": 1992
  },
  "references": [
    "acl-P87-1015"
  ],
  "sections": [
    {
      "heading": "ABSTRACT",
      "text": [
        "The class of linear context-free rewriting systems has been introduced as a generalization of a class of grammar formalisms known as mildly context-sensitive.",
        "The recognition problem for linear context-free rewriting languages is studied at length here, presenting evidence that, even in some restricted cases, it cannot be solved efficiently.",
        "This entails the existence of a gap between, for example, tree adjoining languages and the subclass of linear context-free rewriting languages that generalizes the former class; such a gap is attributed to \"crossing configurations\".",
        "A few other interesting consequences of the main result are discussed, that concern the recognition problem for linear context-free rewriting languages."
      ]
    },
    {
      "heading": "1 INTRODUCTION",
      "text": [
        "Beginning with the late 70's, there has been a considerable interest within the computational linguistics field for rewriting systems that enlarge the generative power of context-free grammars (CFG) both from the weak and the strong perspective, still remaining far below the power of the class of context-sensitive grammars (CSG).",
        "The denomination of mildly context-sensitive (MCS) has been proposed for the class of the studied systems (see [Joshi et al., 1991] for discussion).",
        "The rather surprising fact that many of these systems have been shown to be weakly equivalent has led researchers to generalize",
        "the elementary operations involved in only apparently different formalisms, with the aim of capturing the underlying similarities.",
        "The most remarkable attempts in such a direction are found in [VijayShanker et at., 1987] and [Weir, 1988] with the introduction of linear context-free rewriting systems (LCFRS) and in [Kasami et al., 19871 and [Seki et al., 1989] with the definition of multiple context-free grammars (MCFG); both these classes have been inspired by the much more powerful class of generalized context-free grammars (GCFG; see [Pollard, 1984)).",
        "In the definition of these classes, the generalization goal has been combined with few theoretically motivated constraints, among which the requirement of efficient parsability; this paper is concerned with such a requirement.",
        "We show that from the perpective of efficient parsability, a gap is still found between MCS and some subclasses of LCFRS.",
        "More precisely, the class of LCFRS is carefully studied along two interesting dimensions, to be precisely defined in the following: a) the fanout of the grammar and b) the production length.",
        "From previous work (see [Vijay-Shanker et al., 19871) we know that the recognition problem for LCFRS is in P when both dimensions are bounded.' We complete the picture by observing NP-hardness for all the three remaining cases.",
        "If PONP, our result reveals an undesired dissimilarity between well known formalisms like TAG, HG, LIG and others for which the recognition problem is known to be in P (see [Vijay-Shanker, 1987] and [Vijay-Shanker and Weir, 1992]) and the subclass of LCFRS that is intended to generalize these formalisms.",
        "We investigate the source of the suspected additional complexity and derive some other practical consequences from the obtained results."
      ]
    },
    {
      "heading": "2 TECHNICAL RESULTS",
      "text": [
        "This section presents two technical results that are • the most important in this paper.",
        "A full discussion of some interesting implications for recognition and parsing is deferred to Section 3.",
        "Due to the scope of the paper, proofs of Theorems 1 and 2 below are not carried out in all their details: we only present formal specifications for the studied reductions and discuss the intuitive ideas behind them."
      ]
    },
    {
      "heading": "2.1 PRELIMINARIES",
      "text": [
        "Different formalisms in which rewriting is applied independently of the context have been proposed in computational linguistics for the treatment of Natural Language, where the definition of elementary rewriting operation varies from system to system.",
        "The class of linear context-free rewriting systems (LCFRS) has been defined in [Vijay-Shanker et al., 1987] with the intention of capturing through a generalization common properties that are shared by all these formalisms.",
        "The basic idea underlying the definition of LCFRS is to impose two major restrictions on rewriting.",
        "First of all, rewriting operations are applied in the derivation of a string in a way that is independent of the context.",
        "As a second restriction, rewriting operations are generalized by means of abstract composition operations that are linear and nonerasing.",
        "In a LCFR system, both restrictions are realized by defining an underlying context-free grammar where each production is associated with a function that encodes a composition operation having the above properties.",
        "The following definition is essentially the same as the one proposed in [Vijay-Shanker et al., 1987].",
        "The languages generated by LCFR systems are called LCFR languages.",
        "We assume that the starting symbol has unitary fanout.",
        "Every LCFR system G is naturally associated with an underlying context-free grammar G. The usual context-free derivation relation, written •G., , will be used in the following to denote underlying derivations in G. We will also use the reflexive and transitive closure of such a relation, written G. .",
        "As a convention, whenever the evaluation of all functions involved in an underlying derivation starting with A results in a so(A)-tuple w of terminal strings, we will say that A derives w and write A '.•G w. Given a nonterminal A E VN, the language L(A) is the set of all (p(A)-tuples w such that A t,G w. The language generated by G, L(G), is the set L(S).",
        "Finally, we will call LCFRS(k) the class of all LCFRS's with fanout bounded by k, k > 0 and r-LCFRS the class of all LCFRS's whose productions have right-hand side length bounded by r, r > 0."
      ]
    },
    {
      "heading": "2.2 HARDNESS FOR NP",
      "text": [
        "The membership problem for the class of linear context-free rewriting systems is represented by means of a formal language LRM as follows.",
        "Let G be a grammar in LCFRS and w be a string in for some alphabet V; the pair (G, w) belongs to LRM if and only if w E L(G).",
        "Set LRM naturally represents the problem of the recognition of a linear context-free rewriting language when we take into account both the grammar and the string as input variables.",
        "In the following we will also study the decision problems LRM(k) and r-LRM, defined in the obvious way.",
        "The next statement is a characterization of r-LRM.",
        "Theorem 1 3SAT <p 1-LRM.",
        "Outline of the proof.",
        "Let (U, C) be an arbitrary instance of the 3SAT problem, where U = {ul, , up} is a set of variables and C = {ci, cu} is a set of clauses; each clause in C is represented by a string of length three over the alphabet of all literals, Lu = • • • ,up,irp}.",
        "The main idea in the following reduction is to use the derivations of the grammar to guess truth assignments for U and to",
        "use the fanout of the nonterminal symbols to work out the dependencies among different clauses in C. For every 1 < k < p, let Ak = {C1 j uk is a substring of ci} and let Ak = {ci IIlk is a substring of c7}; let also w = c1c2 cn.",
        "We define a linear context-free rewriting system G = (VN , C, P, S) such that VN = {Ti,Fi ii < i < p + 1} U {S}, every nonterminal (but S) has fanout n and P contains the following productions (f/ denotes the identity function on (C*)n):",
        "where fk .",
        ", xn) = (x1,.",
        ",xjcj,.",
        "• • (iv) Tp+1 – * 19+10, F9+1 -419+10, where f+'0 = (e, , e).",
        "From the definition of G it directly follows that w E L(G) implies the existence of a truth-assignment that satisfies C. The converse fact can be shown starting from a truth assignment that satisfies C and constructing a derivation for w using (finite) induction on the size of U.",
        "The fact that (G, w) can be constructed in polynomial deterministic time is also (.)",
        "straightforward (note that each function fk).",
        "or fk in G can be specified by an integer j, 1 < j < n).",
        "0 The next result is a characterization of LRM(k) for every k > 2.",
        "Theorem 2 3SAT <p LRM(2).",
        "Outline of the proof Let (U, C) be a generic instance of the 3SAT problem, U = {ul, , up} and C = {c1, , cn} being defined as in the proof of Theorem 1.",
        "The idea in the studied reduction is the following.",
        "We define a rather complex string w(1)w(2) w(P)w, where wc is a representation of the set C and w(1) controls the truth assignment for the variable ui, 1 < i < p. Then we construct a grammar G such that tv(2) can be derived by G only in two possible ways and only by using the first string components of a set of nonterminals MO of fanout two.",
        "In this way the derivation of the substring w(l)w(2) w(P) by nonterminals NW, ,N(P) corresponds to a guess of a truth assignment for U.",
        "Most important, the right string components of nonterminals in N(1) derive the symbols within to, that are compatible with the truth-assignment chosen for u.",
        "In the following we specify the instance (G, w) of LRM(2) that is associated to (U, C) by our reduction.",
        "For every 1 < i< p, let Ai = {ci J a; is included in ci} and Ai = Tti is included in ci}; let also mi = I A I + lAi I.",
        "Let Q = {ai ,b1 I 1 <",
        "j < Ind and w = w(l)w(2) w(P)cic2 cm.",
        "In order to specify the productions in P, we need to introduce further notation.",
        "We define a function a such that, for every 1 < i < p, the clauses ca(0),ca(i,2), ca(,,pisi) are all the clauses in .41 and the clauses ca(i JA,1+1), ...ca(i,„20 are all the clauses in Ai.",
        "For every 1 < i < p, let 7(i,1) = ail); and let 7(1, h) = ai (resp.",
        "bi) if h is even (resp.",
        "odd), 2 < h < TN; let also -7(i, h) = cti (resp.",
        "bi) if h is odd (resp.",
        "even), 1 < h < m – 1, and let.7(i, TN) = aibi (resp.",
        "biai) if m, is odd (resp.",
        "even).",
        "Finally, let z = EL, mi.",
        "The following productions define set P (the example in Figure 1 shows the two possible ways of deriving by means of P the substring w(1) and the corresponding part of c1 • cn).",
        "(i) for every 1 5_ i (a) for 1 h (i) Ah (b) for +",
        "where f is a function of 2z string variables defined as",
        "and for every 1 < j < n, yi is any sequence of all variables Vhi) such that a(i, h) = j.",
        "It is easy to see that I G I and 1w I are polynorni-ally related to I U 1 and IC I.",
        "From a derivation of w E L(G), we can exhibit a truth assignment that satisfies C simply by reading the derivation of the prefix string wWw(2) we').",
        "Conversely, starting from a truth assignment that satisfies C we can prove w E L(G) by means of (finite) induction on 1 U1: this part requires a careful inspection of all items in the definition of G. 0"
      ]
    },
    {
      "heading": "2.3 COMPLETENESS FOR NP",
      "text": [
        "The previous results entail NP-hardness for the decision problem represented by language LRM; here we are concerned with the issue of NP-completeness.",
        "Although in the general case membership of LRM in NP remains an open question, we discuss in the following a normal form for the class LCFRS that enforces completeness for NP (i.e. the proposed normal form does not affect the hardness result discussed above).",
        "The result entails NP-completeness for problems r-LRM (r > 1) and LRM(k) (k > 2).",
        "We start with some definitions.",
        "In a linear context-free rewriting system G, a derivation A w such that w is a tuple of null strings is called a null derivation.",
        "A cyclic derivation has the underlying form A G. otAft, where both a and )9 derive tuples of empty strings and the overall effect of the evaluation of the functions involved in the derivation is a bare permutation of the string components of tuples in L(A) (no recombination of components is admitted).",
        "A cyclic derivation is minimal if it is not composed of other cyclic derivations.",
        "Because of null derivations in G, a derivation A w can have length not bounded by any polynomial in ICI; this peculiarity is inherited from context-free languages (see for example [Sippu and Soisalon-Soininen, 19881).",
        "The same effect on the length of a derivation can be caused by the use of cyclic subderivations: in fact there exist permutations of k elements whose period is not bounded by any polynomial in k. Let .11. and C be the set of all nonterrninals that can start a null or a cyclic derivation respectively; it can be shown that both these sets can be constructed in deterministic polynomial time by using standard algorithms for the computation of graph closure.",
        "For every A E C, let C(A) be the set of all permutations associated with minimal cyclic productions starting with A.",
        "We define a normal form for the class LCFRS by imposing some bound on the length of minimal cyclic derivations: this does not alter the weak generative power of the formalism, the only consequence being the one of imposing some canonical base for (underlying) cyclic derivations.",
        "On the basis of such a restriction, representations for sets C(A) can be constructed in deterministic polynomial time, again by graph closure computation.",
        "Under the above assumption, we outline here a proof of LRMENP.",
        "Given an instance (G, w) of the LRM problem, a nondeterministic Turing machine",
        "M can decide whether w E L(G) in time polynomial in I (G, w) I as follows.",
        "M guesses a \"compressed\" representation p for a derivation S 4G w such that:",
        "(i) null subderivations within p' are represented by just one step in p, and (ii) cyclic derivations within p' are represented in p by just one step that is associated with a guessed permutation of the string components of the involved tuple.",
        "We can show that p is size bounded by a polynomial in I (G,w) I.",
        "Furthermore, we can verify in deterministic polynomial time whether p is a valid derivation of w in G. The not obvious part is verifying the permutation guessed in (ii) above.",
        "This requires a test for membership in the group generated by permutations in C(A): such a problem can be solved in deterministic polynomial time (see [Furst et al., 1980])."
      ]
    },
    {
      "heading": "3 IMPLICATIONS",
      "text": [
        "In the previous section we have presented general results regarding the membership problem for two subclasses of the class LCFRS.",
        "Here we want to discuss the interesting status of \"crossing depen-dencies\" within formal languages, on the base of the above results.",
        "Furthermore, we will also derive some observations concerning the existence of highly efficient algorithms for the recognition of fanout and production-length bounded LCFR languages, a problem which is already known to be in the class P."
      ]
    },
    {
      "heading": "3.1 CROSSING CONFIGURATIONS",
      "text": [
        "As seen in Section 2, LCFRS(2) is the class of all LCFRS of fanout bounded by two, and the membership problem for the corresponding class of languages is NP-complete.",
        "Since LCFRS(1) = CFG and the membership problem for context-free languages is in P, we want to know what is added to the definition of LCFRS(2) that accounts for the difference (assuming that a difference exists between P and NP).",
        "We show in the following how a binary relation on (sub)strings derived by a grammar in LCFRS(2) is defined in a natural way and, by discussing the previous result, we will argue that the additional complexity that is perhaps found within LCFRS(2) is due to the lack of constraints on the way pairs of strings in the defined relation can be composed within these systems.",
        "Let G E LCFRS(2); in the general case, any nonterminal in G having fanout two derives a set of pair of strings; these sets define a binary relation that is called here co-occurrence.",
        "Given two pairs (wi, wl) and (w2, wD of strings in the co-occurrence relation, there are basically two ways of composing their string components within a rule of G: either by nesting (wrapping) one pair within the other, e.g. wi w2/401, or by creating a crossing configuration, e.g. wi w2w1 .14; note how in a crossing configuration the co-occurrence dependencies between the substrings are \"crossed\".",
        "A close inspection of the construction exhibited by Theorem 2 shows that grammars containing an unbounded number of crossing configurations can be computationally complex if no restriction is provided on the way these configurations are mutually composed.",
        "An intuitive idea of why such a lack of restriction can lead to the definition of complex systems is given in the following.",
        "In [Seki et al., 1989] a tabular method has been presented for the recognition of general LCFR languages as a generalization of the well known CYK algorithm for the recognition of CFG's (see for instance [Younger, 1967] and [Aho and Ullman, 1972]).",
        "In the following we will apply such a general method to the recognition of LCFRS(2), with the aim of having an intuitive understanding of why it might be difficult to parse unrestricted crossing configurations.",
        "Let w be an input string of length n. In Figure 2, the case of a production pi : A -4. f(Bi, B2, .",
        ", Br) is depicted in which a number r of crossing configurations are composed in a way that is easy to recognize; in fact the right-hand side of pi can be recognized step by step.",
        "For a symbol X, assume",
        "a production pi : A f (B , B2, .",
        ", Br) where each of the right-hand side nonterminals has fanout two.",
        "that the sequence X, (ii, i2), , (iq_i, ig) means X derives the substrings of w that matches the positions (i1,12), , (19_1, ig) within w; assume also that AM denotes the result of the t-th step in the recognition of pi's right-hand side, 1 <t < r. Then each elementary step in the recognition of pi can",
        "be schematically represented as an inference rule as follows:",
        "The computation in (1) involves six indices ranging over {1..n}; therefore in the recognition process such step will be computed no more than 0(n6) times.",
        "On the contrary, Figure 3 presents a production P2 defined in such a way that its recognition is considerably more complex.",
        "Note that the co-occurrence of the two strings derived by B1 is crossed once, the co-occurrence of the two strings derived by B2 is crossed twice, and so on; in fact crossing dependencies in p2 are sparse in the sense that the adjacency property found in production pi is lost.",
        "This forces a tabular method as the one discussed above to keep track of the distribution of the co-occurrences recognized so far, by using an unbounded number of index pairs.",
        "Few among the first steps in the recognition of p2's right-hand side are as follows:",
        "From Figure 3 we can see that a different order in the recognition of A by means of production p2 will not improve the computation.",
        "Our argument about crossing configurations shows why it might be that recognition/parsing of LCFRS(2) cannot be done efficiently.",
        "If this is true, we have a gap between LCFR systems and well known mildly context-sensitive formalisms whose membership problem is known to have polynomial solutions.",
        "We conclude that, in the general case, the addition of restrictions on crossing configurations should be seriously considered for the class LCFRS.",
        "As a final remark, we derive from Theorem 2 a weak generative result.",
        "An open question about LCFRS(k) is the existence of a canonical bilinear form: up to our knowledge no construction is known that, given a grammar G E LCFRS(k) returns a weakly equivalent grammar G' E 2-LCFRS(k).",
        "Since we know that the membership problem for 2-LCFRS(k) is in P, Theorem 2 entails that the construction under investigation cannot take polynomial time, unless P=NP.",
        "The reader can easily work out the details."
      ]
    },
    {
      "heading": "3.2 RECOGNITION OF r-LCFRS(k)",
      "text": [
        "Recall from Section 2 that the class r-LCFRS(k) is defined by the simultaneous imposition to the class LCFRS of bounds k and r on the fanout and on the length of production's right-hand side respectively.",
        "These classes have been discussed in [Vijay-Shanker et al., 19871, where the membership problem for the corresponding languages has been shown to be in P, for every fixed k and p. By introducing the notion of degree of a grammar in LCFRS, actual polynomial upper-bounds have been derived in [Seki et al., 1989]: this work entails the existence of an integer function u(r, k) such that the membership problem for r-LCFRS(k) can be solved in (deterministic) time 0(1011w1ufr'k)).",
        "Since we know that the membership problems for r-LCFRS and LCFRS(k) are NP-hard, the fact that u(r, k) is a (strictly increasing) non-asymptotic function is quite expected.",
        "With the aim of finding efficient parsing algorithms, in the following we want to know to which extent the polynomial upper-bounds mentioned above can be improved.",
        "Let us consider for the moment the class 2-LCFRS(k); if we restrict ourselves to the normal form discussed in Section 2.3, we know that the recognition problem for this class is NP-complete.",
        "Assume that we have found an optimal recognizer for this class that runs in worst case time 1(G, w, k); therefore function 1 determines the best lower-bound for our problem.",
        "Two cases then arises.",
        "In a first case we have that 1 is not bounded by any polynomial p in I G 1 and 1w I: we can easily derive that PONP.",
        "In fact if the converse is true, then there exists a Turing machine M that is able to recognize 2-LCFRS in deterministic time I (0, w)Ig , for some q.",
        "For every k > 0, construct a Turing machine M(k) in the following way.",
        "Given (0, w) as input, M(k) tests whether G E2-LCFRS(k) (which",
        "is trivial); if the test fails, M(k) rejects, otherwise it simulates M on input (G, w).",
        "We see that M(k) is a recognizer for the class 2-LCFRS(k) that runs in deterministic time I (G, w) Iq•Now select k such that, for a worst case input w E E* and G E 2 LCFRS(k), we have l(G , w , k) > I (G , w) lq: we have a contradiction, because M(k) will be a recognizer for 2-LCFFtS(k) that runs in less than the lower-bound claimed for this class.",
        "In the second case, on the other hand, we have that 1 is bounded by some polynomial p in IGI and I w I; a similar argument applies, exhibiting a proof that P=NP.",
        "From the previous argument we see that finding the \"best\" recognizer for 2-LCFRS(k) is as difficult as solving the P vs. NP question, an extremely difficult problem.",
        "The argument applies as well to r-LCFRS(k) in general; we have then evidence that considerable improvement of the known recognition techniques for r-LCFRS(k) can be a very difficult task."
      ]
    },
    {
      "heading": "4 CONCLUSIONS",
      "text": [
        "We have studied the class LCFRS along two dimensions: the fanout and the maximum right-hand side length.",
        "The recognition (membership) problem for LCFRS has been investigated, showing NP-hardness in all three cases in which at least one of the two dimensions above is unbounded.",
        "Some consequences of the main result have been discussed, among which the interesting relation between crossing configurations and parsing efficiency: it has been suggested that the addition of restrictions on these configurations should be seriously considered for the class LCFRS.",
        "Finally, the issue of the existence of efficient algorithms for the class r-LCFRS(k) has been addressed."
      ]
    }
  ]
}
