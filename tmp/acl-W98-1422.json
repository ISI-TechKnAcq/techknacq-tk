{
  "info": {
    "authors": [
      "Tilman Becker"
    ],
    "book": "Workshop on Natural Language Generation EWNLG",
    "id": "acl-W98-1422",
    "title": "Fully Lexicalized Head-Driven Syntactic Generation",
    "url": "https://aclweb.org/anthology/W98-1422",
    "year": 1998
  },
  "references": [
    "acl-C88-2121",
    "acl-C94-2144",
    "acl-C96-1054",
    "acl-J90-1004",
    "acl-P85-1012",
    "acl-P95-1013",
    "acl-P97-1026",
    "acl-P98-1017"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We describe a new approach to syntactic generation with Head-Driven Phrase Structure Grammars (HPSG) that uses an extensive off-line preprocessing step.",
        "Direct generation algorithms apply the phrase-structure rules (schemata) of the grammar on-line which is an computationally expensive step.",
        "Instead, we collect off-line for every lexical type of the HPSG grammar all minimally complete projections (called elementary trees) that can be derived with the schemata.",
        "This process is known as 'compiling HPSG to TAG' and derives a Lexicalized Tree-Adjoining Grammar (LTAG).",
        "The representation as an LTAG is 'fully lexicalized' in the sense that all grammatical information is directly encoded with the lexical item (as a set of elementary trees) and the combination operations are reduced from schema applications to the TAG primitives of adjunction and substitution.",
        "Given this LTAG, the generation task has a very different search space that can be traversed very efficiently, avoiding the costly on-line applications of HPSG unification.",
        "The entire generation task from a semantic representation to a surface string is split into two tasks, a microplanner and a syntactic realizer.",
        "This paper discusses the syntactic generator and the preprocessing steps as implemented in the Verbmobil system.",
        "The syntactic generation algorithm and the preprocessing steps presented in this paper are integrated into the Verbmobil system (see [Wahlster 1993, Bub, Wahlster, and Waibel 1997]).",
        "It is a system for speech-to-speech dialog translation.",
        "The input for the generation module VM-GECO1 is generated by a semantic-based transfer component (see [Dorna and Emele 1996]).",
        "The interface language chosen comprises the encoding of target language-specific semantic information in a combination of Underspecified Discourse Representation Theory and Minimal Recursion Semantics (see [Bos et al.",
        "1996] and [Copestake, Flickinger, and Sag 1997]).",
        "The internal architecture of the generation module is modularized: it is separated into two phases, a microplanner and a syntactic generator.",
        "Throughout the system, we emphasize declarativity, which is also a necessary precondition for a comprehensive off-line preprocessing of external knowledge bases-in particular the preprocessing of the underlying Head-Driven Phrase Structure Grammar (HPSG, see [Pollard and Sag 1994]) which has been developed at CSLI, reflecting the latest developments in the linguistic theory and with a fairly wide coverage and also covering phenomena of spoken language."
      ]
    },
    {
      "heading": "2 Microplanning and Syntactic Generation",
      "text": [
        "Starting from the semantic representation, the microplanning component generates an annotated dependency structure which is used by the syntactic generation component to realize a surface string.",
        "The microplanner also carries out word – choice.",
        "One goal of this modularization is a stepwise constraining of the search – space of alternative linguistic realizations, using different views in the different modules.",
        "In each step, only an abstraction of the multitude of information contained in an alternative needs to be considered.",
        "Another aspect of this architecture is the separation into a kernel system, i.e., the language independent core algorithms (a constraint-solver for microplanning and the search and combination algorithms for syntactic generation described in section'5) and declarative knowledge bases, e.g., the language specific word-choice constraints in microplanning and the TAG grammars used in syntactic realization.",
        "This separation allows for an easy adaptation of the system to other languages and domains (see [Becker et al.",
        "1998])."
      ]
    },
    {
      "heading": "3 Declarativity in the Syntactic Generator",
      "text": [
        "All modules of the generator utilize external, declarative knowledge bases.",
        "For the syntactic generator, extensive off-line preprocessing of the highly declarative HPSG grammar for English2 is applied.",
        "The grammar has not even been written exclusively as a generation grammar3.",
        "It is specialized, however, in that it covers phenomena of spoken language.",
        "The high level of abstraction which is achieved in the hierarchically organized grammar description (see [Flickinger 1987]) allows for easy maintenance as well as off-line preprocessing.",
        "The off-line preprocessing steps described in the next section keep the declarative nature of the grammar intact, i.e. they retain explicitly the phrase structures and syntactic features as defined by the HPSG grammar.",
        "In general, declarative knowledge bases allow for an easier adaptation of the system to other domains and languages.",
        "This is a huge benefit in the current second phase of the Verbmobil project Pecker et al.",
        "1996] where the generator is extended to cover German, English and Japanese as well as additional and extended domains with a considerably larger vocabulary."
      ]
    },
    {
      "heading": "4 Off – Line Preprocessing: HPSG to TAG Compilation",
      "text": [
        "The subtasks in a direct syntactic generator based on an HPSG grammar will always include the application of schemata (the HPSG equivalent of phrase structure rules) such that all syntactic constraints introduced by a lexical item (especially its SUBCAT list) are fulfilled.",
        "This results in a constant repetition of, e.g., building up the projection of a verb in a declarative sentence.",
        "In preprocessing the HPSG grammar we aim at computing all possible partial phrase structures which can be derived from the information in a lexicon entry.",
        "Given such sets of possible syntactic realization together with a set of selected lexicon entries for an utterance and finally their dependencies, the task of a syntactic generator is simplified considerably.",
        "Instead of exploring all",
        "possible, computationally expensive applications of HPSG schemata, it merely has to find suitable precomputed syntactic structures for each lexical item and combine them appropriately.",
        "For this preprocessing of the HPSG grammar, we adapted the `I-IPSG to TAG compilation' process described in [Kasper et al.",
        "1995[.",
        "The basis for the compilation is an identification of syntactically relevant selector features which express subcategorization requirements of a lexical item, e.g. the VALENCE features.",
        "In general, a phrase structure is complete when these selector features are empty.",
        "Starting from the feature structure for a lexical item, HPSG schemata are applied such that the current structure is unified with a daughter feature of the schema.",
        "The resulting structure is again subject to this process.",
        "This compilation process stops when certain termination criteria are met, e.g., when all selector features are empty.",
        "Thus, all projections from the lexical item are collected as a set of minimally complete phrase structures which can also be interpreted as elementary trees of a Tree – Adjoining Grammar (TAG).",
        "Instead of actually applying this compilation process to all lexical items, certain abstractions over the lexical entries are specified in the HPSG grammar.",
        "In fact, the needs of the compilation process have led to a clear – cut separation of lexical types and lexical entries as shown in Figure 1.",
        "A typical lexical entry is shown in Figure 2 and demonstrates that only three kinds of information are stored: the lexical type MV_NP_TRANS_LE4, the semantic contribution (the relation _SUIT_REL) and morphological information (the stem and potentially irregular forms).",
        "By expanding the lexical type, the full feature structure can be obtained.",
        "Some of the trees which result from the preprocessing of the lexical type MV_NP_TRANS_LE are shown in Figure 3.",
        "The figure shows only the phrase structure and an abstraction of the",
        "node's categories.",
        "All nodes still represent the full HPSG feature structures.",
        "E.g., the tree MV_NP_TRANS_LE.2 of Figure 3 represents an imperative clause.",
        "As a consequence PERSON has the value SECOND and CL-MODE is set to IMPERATIVE.",
        "Note that the compilation process stopped at this node since the selector features are empty.",
        "From these trees, two kinds of knowledge bases are built.",
        "For the microplanner, the relation between the lexical and syntactic realization and the semantic representation (encoded in the SYNSEM LOCAL CONT feature) is extracted as a constraint.",
        "For the syntactic generator, the relevant syntactic information is extracted in the form of a Feature – Based Lexicalized TAG (FB-LTAG) grammar, see Poshi 1987, Vijay-Shanker and Joshi 1991, Schabes, Abeille, and Joshi 1988j.",
        "This includes the phrase structure and a selected part of the feature structure (mainly the SYNSEM LOCAL CAT and SYNSEM NON-LOCAL features).",
        "Figure 4 shows the bottom feature structure extracted from the root node of MV_NP_TRANS_LE.2.",
        "Note that some of the feature paths are abbreviated, e.g. SLCI stands for SYNSEM LOCAL CONT INDEX.",
        "The elementary TAG trees which are built from the compilation result have so – called restricted feature structures which can be exploited for an efficient, specialized unification algorithm.",
        "The node names shown in the figures represent a disjunction of possible categories, e.g. NP.S.COMP in tree MV_NP_TRANS_LE.3 implies that the subject of a transitive verb may be a nominal or sentential phrase.",
        "Finally, the leaf nodes of the trees (except for the lexical item itself) are marked either as substitution nodes or as a foot node, thus creating an auxiliary tree.",
        "In a TAG derivation, substitution nodes are replaced with trees bearing the correct category and a unifiable feature structure at their root node.",
        "Auxiliary trees can be inserted into other trees by the adjunction operation."
      ]
    },
    {
      "heading": "5 The Syntactic Generator VM-GIFT",
      "text": [
        "The task of the syntactic generator is the construction of a sentence (or phrase, given the often incomplete utterances in spoken dialogs) from the microplanning result which is then sent to a speech-synthesis component.",
        "It proceeds in three major steps which are also depicted in Fig. 5.",
        "• A tree selection phase determines the set of relevant TAG trees.",
        "A first tree retrieval step maps every object of the dependency tree into a set of applicable elementary TAG trees.",
        "The main tree selection phase uses information from the microplanner output to further refine the set of retrieved trees.",
        "• A combination phase finds a successful combination of trees to build a (derived) phrase structure tree.",
        "• An inflection phase uses the information in the feature structures of the leaves (i.e. the words) to apply appropriate morphological functions, including the use of irregular forms as provided by the HPSG lexicon and regular inflection function as supplied (as LISP code) by the HPSG grammar.",
        "An initial preprocessing phase computes the necessary auxiliary verbs from the tense, aspect, and sentence mood information.",
        "It also rearranges the dependency tree accordingly (e.g. subject arguments are moved from the main verb to become dependents of the inflected auxiliary verb).",
        "The two core phases are the tree selection and the tree combination phase.",
        "The tree selection phase consists of two steps.",
        "First, a set of possible trees is retrieved and then appropriate trees are selected from this set.",
        "The retrieval is driven by the HPSG instance or word class that is supplied by the microplanner.",
        "It is mapped to a lexical type by a lexicon that is automatically compiled from the HPSG grammar.",
        "The lexical types are then mapped to a tree family, i.e., a set of elementary TAG trees representing all possible minimally complete phrase structures that can be build from the instance.",
        "The additional information in the dependency tree is then used to add further feature",
        "values to the trees.",
        "This additional information acts as a filter for selecting appropriate trees in two stages:",
        "• Some values are incompatible with values already present in the trees.",
        "These trees can therefore be filtered immediately from the set.",
        "E.g., a syntactic structure for an imperative clause is marked as such by a feature and can be discarded if a declarative sentence is to be generated.",
        "• Additional features can prevent the combination with other trees during the combination phase.",
        "This is the case, for example with agreement features.",
        "The combination phase explores the search space of all possible combinations of trees from the candidate sets for each lexical item (instance).",
        "An inefficient combination phase is a potential drawback of using the precomputed TAG trees.",
        "However, there is sufficient information available from the microplanner result and from the trees such that a well-guided best-first search strategy can be employed in the current system.",
        "The difference in runtime can be as dramatic as 24 seconds (comprehensive breadth-first) versus 1.5 seconds (best-first).",
        "As part of the tree selection phase, based on the rich annotation of the input structure, the tree sets are sorted locally.",
        "Then a backtracking algorithm traverses the dependency tree in a bottom-up fashion5.",
        "At each node, and for each subtree in the dependency tree, a candidate for the phrase structures of the subtree is constructed.",
        "Then all possible adjunction or substitution sites are computed, possibly sorted (e.g. allowing for preferences in word order) and the best candidate for a combined phrase structure is returned.",
        "Since the combination of two partial phrase structures by adjunction or substitution might fail due to incompatible feature structures, a backtracking",
        "algorithm must be used.",
        "A partial phrase structure for a subtree of the dependency is finally checked for completeness.",
        "These tests include the unifiability of all top and bottom feature structures and the satisfaction of all other constraints (e.g. obligatory adjunctions or open substitution nodes) since no further adjunctions or substitutions will occur in this subtree.",
        "The necessity of a spoken dialog translation system to produce output robustly calls for some relaxations in these tests.",
        "E.g., 'obligatory' arguments may be missing in the utterance and the tests in the syntactic generator must accept a sentence with a missing obligatory object if no other complete phrase can be generated.",
        "Figure 6 shows an example of the input of from the microplanner after the preprocessing phase has inserted the entity LGV1 for the auxiliary will.",
        "In the tree retrieval phase for L5-WORK_ACCEPTABLE, first the HEAD information is used to determine the lexical types of the possible realizations SUIT_V1 and SUIT_V2, namely MV_NP_TRANS_LE and MV_EXPL_PREP_TRANS_LE respectively.",
        "These types are then mapped to their respective sets of elementary trees, a total of 25 trees.",
        "In the tree selection phase (as described above), this number is reduced to six.",
        "For example, the tree MV_NP_TRANS_LE.2 in Figure 3 has a feature CL-MODE with the value IMPERATIVE.",
        "Now, the microplanner output for the root entity LGV1 contains the information (INTENTION WH-QUESTION).",
        "The INTENTION information is unified with all appropriate CL-MODE features, which in this case fails.",
        "Therefore the tree MV_NP_TRANS_LE.2 can be discarded in the tree selection phase.",
        "The combination phase uses the best-first bottom-up algorithm described above to determine one suitable tree for every entity and also a target node in the tree that is selected for the governing entity.",
        "For the above example, the selected trees and their combination nodes are shown in Figure 76.",
        "The inflection function finally uses attribute values like verb-form, number and person from the final tree to derive the correct inflections.",
        "Information about the sentence mode WH-QUESTION can be used to annotate the resulting string for the speech-synthesis module."
      ]
    },
    {
      "heading": "6 Conclusion and Comparison",
      "text": [
        "We have shown how preprocessing an HPSG grammar can be used to avoid the costly on – line application (unification) of HPSG schemata in a modularized generation system with a microplanner and a separate syntactic generator.",
        "The compilation of an HPSG grammar to TAG grammar allows the use of an efficient syntactic generator without sacrificing the declarative nature of the HPSG grammar.",
        "It is important to compare the generation strategy presented here with semantic-head-driven generation [Shieber et al.",
        "1990, van Noord 1990] which is a direct generation algorithm from logical form encodings.",
        "It improves previous algorithms in efficiency and in imposing less restrictions on the type of grammar.",
        "It is also applicable to HPSG and proceeds by applying the HPSG schemata in a bottom-up fashion, driven from the lexical heads of the schemata.",
        "To a large extend, the TAG-based generation algorithm presented here goes through the same steps as semantic-head-driven generation.",
        "However, most of these steps will have been made during the off-line preprocessing and are encoded in the elementary trees of the TAG grammar thus resulting",
        "in an important gain in efficiency.",
        "Note though, that the generation task in the algorithm presented here is shared between the microplanner and the syntactic generator,- so a formal comparison must include both components.",
        "Work on generation with TAG generally assumes that there is a one-to-one mapping between the information in the generator input and the choice of elementary tree [Mcdonald and Pustejovsky 1985, Yang, McCoy, and Vijay-Shanker 1991, Doran and Stone 1997].",
        "In general, this will not be the case.",
        "In particular, in our system the input is not always sufficiently analyzed and the preprocessing from an HPSG grammar potentially creates more than one elementary tree that fits the input parameters.",
        "One possible approach are choice nets-see [Yang, McCoy, and Vijay-Shanker 1991] who interpret systemic grammar in this way.",
        "Our approach has some similarity, though we have provided a more general algorithm that does not require the specification of grammar specific choice nets but rather executes tree selection and combination from more declarative knowledge bases.",
        "Tree selection is implemented mainly by unification (adding feature values from the input specification to the trees where unifiable) and the best-first search algorithm is a general framework for handling sets of possible elementary trees, including backtracking steps when non-local tests (e.g. unification in the resulting derived tree) fail.",
        "This approach is also a precondition in our system since we have no direct access to the TAG grammar as it is automatically preprocessed from an HPSG grammar.",
        "VM-GECO is fully implemented (in Common Lisp) and integrated into the speech-to-speech translation system Verbmobil for English and German.",
        "For example, the underlying English HPSG grammar has almost 3000 lexical entries with over 200 lexical types.",
        "The resulting lexicalized TAG consists of about 2800 trees.",
        "The average overall generation time per sentence (up to length 24) is 0.7 cpu seconds on a SUN ULTRA-1 machine, 68% of the runtime are used for the microplanning while the remaining 32% of the runtime are used for syntactic generation."
      ]
    },
    {
      "heading": "7 Current Work",
      "text": [
        "In general, the task of finding appropriate elementary trees for the chosen words and consequently a consistent phrase structure tree can exhibit constraints between any two elementary trees in the utterance (as expressed through feature equations).",
        "However, most of these constraints exist between elementary trees that are combined directly with each other (adjoined or substituted).",
        "To exploit this, we are currently experimenting with various well-established binary constraint-solving algorithms to preselect elementary trees that are pairwise consistent w.r.t.",
        "feature equations."
      ]
    }
  ]
}
