{
  "info": {
    "authors": [
      "Patrick Blackburn",
      "Claire Gardent"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E95-1006",
    "title": "A Specification Language for Lexical Functional Grammars",
    "url": "https://aclweb.org/anthology/E95-1006",
    "year": 1995
  },
  "references": [],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper defines a language .0 for specifying LFG grammars.",
        "This enables constraints on LFG's composite ontology (c-structures synchronised with f-structures) to be stated directly; no appeal to the LFG construction algorithm is needed.",
        "We use to specify schemata annotated rules and the LFG uniqueness, completeness and coherence principles.",
        "Broader issues raised by this work are noted and discussed."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Unlike most linguistic theories, LFG (see Kaplan and Bresnan (1982)) treats grammatical relations as first class citizens.",
        "Accordingly, it casts its linguistic analyses in terms of a composite ontology: two independent domains – a domain of constituency information (c-structure), and a domain of grammatical function information (f-structure) linked together in a mutually constraining manner.",
        "As has been amply demonstrated over the last fifteen years, this view permits perspicuous analyses of a wide variety of linguistic data.",
        "However standard formalisations of LFG do not capture its strikingly simple underlying intuitions.",
        "Instead, they make a detour via the LFG construction algorithm, which explains how equational constraints linking subtrees and feature structures are to be resolved.",
        "The main point of the present paper is to show that such detours are unnecessary.",
        "We define a specification language ,C in which (most of) the interactions between c-and f-structure typical of LFG grammars can be stated directly.",
        "The key idea underlying our approach is to think about LFG model theoretically.",
        "That is, our first task will be to give a precise – and transparent – mathematical picture of the LFG ontology.",
        "As has already been noted, the basic entities underlying the LFG analyses are composite structures consisting of a finite tree, a finite feature structure, and a function that links the two.",
        "Such structures can straightforwardly be thought of as models, in the usual sense of first order model theory (see Hodges (1993)).",
        "Viewing the LFG ontology in such terms does no violence to intuition: indeed, as we shall see, a more direct mathematical embodiment of the LFG universe can hardly be imagined.",
        "Once the ontological issues have been settled we turn to our ultimate goal: providing a specification language for LFG grammars.",
        "Actually, with the ontological issues settled it is a relatively simple task to devise suitable specification languages: we simply consider how LFG linguists talk about such structures when they write grammars.",
        "That is, we ask ourselves what kind of constraints the linguist wishes to impose, and then devise a language in which they can be stated.",
        "Thus we shall proceed as follows.",
        "After a brief introduction to LFG,1 we isolate a class of models which obviously mirrors the composite nature of the LFG ontology, and then turn to the task of devising a language for talking about them.",
        "We opt for a particularly simple specification language: a propositional language enriched with operators for talking about c and f-structures, together with a path equality construct for enforcing synchronisation between the two domains.",
        "We illustrate its use by showing how to capture the effect of schemata annotated rules, and the LFG uniqueness, completeness and coherence principles.",
        "Before proceeding, a word of motivation is in order.",
        "Firstly, we believe that there are practical reasons for interest in grammatical specification languages: formal specification seems important (perhaps essential) if robust large scale grammars are to be defined and maintained.",
        "Moreover, the essentially model theoretic slant on specification we propose here seems particularly well suited to this aim.",
        "Models do not in any sense \"code\" the LFG ontology: they take it pretty much at face value.",
        "In our view this is crucial.",
        "Formal approaches 'This paper is based upon the original formulation of LFG, that of Kaplan and Bresnan (1982), and will not discuss such later innovations as functional uncertainty.",
        "to grammatical theorising should reflect linguistic intuitions as directly as possible, otherwise they run the risk of being an obstacle, not an aid, to grammar development.",
        "The approach also raises theoretical issues.",
        "The model theoretic approach to specification languages forces one to think about linguistic ontologies in a systematic way, and to locate them in a well understood mathematical space.",
        "This has at least two advantages.",
        "Firstly, it offers the prospect of meaningful comparison of linguistic frameworks.",
        "Secondly, it can highlight anomalous aspects of a given system.",
        "For example, as we shall later see, there seems to be no reasonable way to deal with LFG's =, definitions using the simple models of the present paper.",
        "There is a plausible model theoretic strategy strategy for extending our account to cover =c; but the nature of the required extension clearly shows that =, is of a quite different character to the bulk of LFG.",
        "We discuss the matter in the paper's concluding section."
      ]
    },
    {
      "heading": "2 Lexical Functional Grammar",
      "text": [
        "A lexical functional grammar consists of three main components: a set of context free rules annotated with schemata, a set of well formedness conditions on feature structures, and a lexicon.",
        "The role of these components is to assign two interrelated structures to any linguistic entity licensed by the grammar: a tree (the c-structure) and a feature structure (the f-structure).",
        "Briefly, the context free skeleton of the grammar rules describes the c-structure, the well-formedness conditions restrict f-structure admissibility, and the schemata synchronise the information contained in the c-and f-structures.",
        "--+ NP VP 1=1 (2) NP – + Det N (3) VP ---* V 1=1",
        "To see how this works, let's run through a simple example.",
        "Consider the grammar given in Figure 1.",
        "Briefly, the up and down-arrows in the schemata can be read as s follows: I Feature denotes the value of Feature in the f-structure associated with the tree node immediately dominating the current tree node, whereas 1 Feature denotes the value of Feature in the f-structure associated with the current tree node.",
        "For instance, in rule (1) the NP schema indicates that the f-structure associated with the NP node is the value of the SUBJ feature in the f-structure associated with the mother node.",
        "As for the VP schema, it requires that the f-structure associated with the mother node is identical with the f-structure associated with the VP node.",
        "Given the above lexical entries, it is possible to assign a correctly interrelated c-structure and f-structure to the sentence A girl walks.",
        "Moreover, the resulting f-structure respects the LFG well formedness conditions, namely the uniqueness, completeness and coherence principles discussed in section 5.",
        "Thus A girl walks is accepted by this grammar."
      ]
    },
    {
      "heading": "3 Modeling the LFG ontology",
      "text": [
        "The ontology underlying LFG is a composite one, consisting of trees, feature structures and links between the two.",
        "Our first task is to mathematically model this ontology, and to do so as transparently as possible.",
        "That is, the mathematical entities we introduce should clearly reflect the intuitions important to LFG theorising – \"No co-ding!\" , should be our slogan.",
        "In this section, we introduce such a representation of LFG ontology.",
        "In the following section, we shall present a formal language G for talking about this representation; that is, a language for specifying LFG grammars.",
        "We work with the following objects.",
        "A model M is a tripartite structure (T, zoomin, where T is our mathematical picture of c structure, .7\" our picture of f-structure, and zoomin our picture of the link between the two.",
        "We now define each of these components.",
        "Our definitions are given with respect to a signature of the form (Cat, Atom, Feat), where Cat, Atom and Feat are non-empty, finite or denumerably infinite sets.",
        "The intuition is that these sets denote the syntactic categories, the atomic values, and the features that the linguist has chosen for some language.",
        "For instance, Cat could be {S, NP, VP, V}, Atom might be {sg,p1,third, fem,masc} and Feat might be {subj, obj, pred, nb, case, gd}.",
        "Firstly we define T. As this is our mathematical embodiment of c-structure (that is, a category labeled tree) we take it to be a pair (T, Vi) , where T is a finite ordered tree and Vt is a function from the set of tree nodes to Cat.",
        "We will freely use the usual tree terminology such as mother-of, daughter-of, dominates, and so on.",
        "Second, we take to be a tuple of the form (W, IffacrEFeat, initial, Final, V1), where W is a finite, non-empty set of nodes; fa.",
        "is a partial function from W to W, for all a E Feat; initial is a unique node in W such that any other node w' of W can be reached by applying a finite number",
        "of fc, to initial; Final is a non-empty set of nodes such that for all fa and all w E Final, fa(w) is undefined; and V1 is a function from Final to Atom.",
        "This is a standard way of viewing feature structures, and is appropriate for LFG.",
        "Finally, we take zoomin, the link between c-structure and f-structure information, to be a partial function from T to W. This completes our mathematical picture of LFG ontology.",
        "It is certainly a precise picture (all three components, and how they are related are well defined), but, just as importantly, it is also a faithful picture; models capture the LFG ontology perspicuously."
      ]
    },
    {
      "heading": "4 A Specification Language",
      "text": [
        "Although models pin down the essence of the LFG universe, our work has only just begun.",
        "For a start, not all models are created equal.",
        "Which of them correspond to grammatical utterances of English?",
        "Of Dutch?",
        "Moreover, there is a practical issue to be addressed: how should we go about saying which models we deem 'good'?",
        "To put in another way, in what medium should we specify grammars?",
        "Now, it is certainly possible to talk about models using natural language (as readers of this paper will already be aware) and for many purposes (such as discussion with other linguists) natural language is undoubtedly the best medium.",
        "However, if our goal is to specify large scale grammars in a clear, unambiguous manner, and to do so in such a way that our grammatical analyses are machine verifiable, then the use of formal specification languages has obvious advantages.",
        "But which formal specification language?",
        "There is no single best answer: it depends on one's goals.",
        "However there are some important rules of thumb: one should carefully consider the expressive capabilities required; and a judicious commitment to simplicity and elegance will probably pay off in the long run.",
        "Bearing this advice in mind, let us consider the nature of LFG grammars.",
        "Firstly, LFG grammars impose constraints on T. Context free rules are typically used for this purpose – which means, in effect, that constraints are being imposed on the 'daughter of and 'sister of relations of the tree.",
        "Secondly, LFG grammars impose general constraints on various features in Such constraints (for example the completeness constraint) are usually expressed in English and make reference to specific features (notably pred).",
        "Thirdly, LFG grammars impose constraints on zoomin.",
        "As we have already seen, this is done by annotating the context free rules with equations.",
        "These constraints regulate the interaction of the 'mother of relation on T, zoomin, and specific features in .F.",
        "Thus a specification language adequate for LFG must be capable of talking about the usual tree relations, the various features, and zoomin; it must also be powerful enough to permit the statement of generalisations; and it must have some mechanism for regulating the interaction between T and These desiderata can be met by making use of a propositional language augmented with (1) modal operators for talking about trees (2) modal operators for talking about feature structures, and (3) a modal operator for talking about zoomin, together with a path equality construct for synchronising the information flow between the two domains.",
        "Let us build such a language.",
        "Our language is called E and its primitive symbols (with respect to a given signature (Cat, Atom, Feat)) consists of (1) all items in Cat and Atom (2) two constants, c-struct and f-struct, (3) the Boolean connectives (true, false, A, –f, etc.",
        "), (4) three tree modalities (up), (down) and •, (5) a modality (a), for each feature a E Feat, (6) a synchronisation modality (zoomin), (7) a path equality constructor r.-4, together with (8) the brackets ) and (.",
        "The basic well formed formulas (basic wffs) of are: {true, false, c-struct, f-struct}UCatUAtomU Patheq, where Patheq is defined as follows.",
        "Let t, t' be finite (possibly null) sequences of the modalities (up) and (down), and let f, f' be finite (possibly null) sequences of feature modalities.",
        "Then i(zoomin)f t' (zoomin) is in Patheq, and nothing else is.",
        "The wffs of £ are defined as follows: (1) all basic wffs are wffs, (2) all Boolean combinations of wffs are wffs, (3) if 0 is a wff then so is MO, where M E {(a) : a E Feat} U {(up), (down), (zoomin)} and (4) if n > 0, and 01, , On are wffs, then so is •(017 • • • On)- Nothing else is a wff.",
        "Now for the satisfaction definition.",
        "We inductively define a three place relation = which holds between models M, nodes n and wffs 0.",
        "Intuitively, M, n 0 means that the constraint 0 holds at (is true at, is satisfied at) the node n in model M. The required inductive definition is as follows: M, n true always M, n false never M, n c-struct iff n is a tree node M, n f-struct iff n is a feature structure node",
        "M, n (1) and M, n M, n (a)d) if fa(n) exists and M, fa(n) (I) (for all a E Feat)",
        "M, n t(zoomin) f t' (zoomin) f' n is a tree node, and there is a feature structure node w such that n(St; zoomin;Sf)w and n(St'; zoomin; S f,)w For the most part the import of these clauses should be clear.",
        "The constants true and false play their usual role, c-struct and f-struct give us 'labels' for our two domains, while the elements of Cat and Atom enable us to talk about syntactic categories and atomic f-structure information respectively.",
        "The clauses for and A are the usual definitions of classical logic, thus we have all propositional calculus at our disposal; as we shall see, this gives us the flexibility required to formulate non-trivial general constraints.",
        "More interesting are the clauses for the modalities.",
        "The unary modalities (a), (up), (down), and (zoomin) and the variable arity modality • give us access to the binary relations important in formulating LFG grammars.",
        "Incidentally, • is essentially a piece of syntactic sugar; it could be replaced by a collection of unary modalities (see Blackburn and Meyer-Viol (1994)).",
        "However, as the • operator is quite a convenient piece of syntax for capturing the effect of phrase structure rules, we have included it as a primitive in G. In fact, the only clause in the satisfaction 'definition which is at all complex is that for P.-J.",
        "It can be glossed as follows.",
        "Let St and St, be the path sequences through the tree corresponding to t and t' respectively, and let Sf and Sf be the path sequences through the feature structure corresponding to f and f' respectively.",
        "Then t(zoomin) f t' (zoomin) f' is satisfied at a tree node tiff there is a feature structure node w that can be reached from t by making both the transition sequence St; zoomin; Sf and the transition sequence St, ; zoomin; S f, .",
        "Clearly, this construct is closely related to the Kasper Rounds path equality (see Kasper and Rounds (1990)); the principle difference is that whereas the Kasper Rounds enforces path equalities within the domain of feature structures, the LFG path equality enforces equalities between the tree domain and the feature structure domain.",
        "If M, n 4 then we say that 4 is satisfied in M at n. If M, n q for all nodes n in M then we say that (kis valid in M and write M 0.",
        "Intuitively, to say that 0 is valid in M is to say that the constraint 0 holds universally; it is a completely general fact about M. As we shall see in the next section, the notion of validity has an important role to play in grammar specification."
      ]
    },
    {
      "heading": "5 Specifying Grammars",
      "text": [
        "We will now illustrate how r can be used to specify grammars.",
        "The basic idea is as follows.",
        "We write down a wff 0G which expresses all our desired grammatical constraints.",
        "That is, we state in .0 which trees and feature structures are admissible, and how tree and feature based information is to be synchronised; examples will be given shortly.",
        "Now, a model is simply a mathematical embodiment of LFG sentence structure, thus those models M in which cbG is valid are precisely the sentence structures which embody all our grammatical principles.",
        "Now for some examples.",
        "Let's first consider how to write specifications which capture the effect of schemata annotated grammar rules.",
        "Suppose we want to capture the meaning of rule (1) of Figure 1, repeated here for convenience:",
        "Recall that this annotated rule licenses structures consisting of a binary tree whose mother node m is labeled S and whose daughter nodes n1 and n2 are labeled NP and VP respectively; and where, furthermore, the S and VP nodes (that is, in and n2) are related to the same f-structure node w; while the NP node (that is, n1) is related to the node w' in the f-structure that is reached by making a SUBJ transition from w. This is precisely the kind of structural constraint that .0 is designed to specify.",
        "We do so as follows:",
        "S •(NP A (up)(zoomin)(subj) ti (zoomin), VP A (up)(zoomin) N (zoomin))",
        "This formula is satisfied in a model M at any node miff m is labeled with the category S, has exactly two daughters n1 and n2 labeled with category NP and VP respectively.",
        "Moreover, n1 must be associated with an f-structure node w' which can also be reached by making a (subj) transition from the f-structure node w associated with the mother node of m. (In other words, that part of the f-structure that is associated with the NP node is re-entrant with the value of the subj feature in",
        "the f-structure associated with the S node.)",
        "And finally, n2 must be associated with that f-structure node w which m. (In other words, the part of the f-structure that is associated with the VP node is re-entrant with that part of the f-structure which is associated with the S node.)",
        "In short, we have captured the effect of an annotated rule purely declaratively.",
        "There is no appeal to any construction algorithm; we have simply stated how we want the different pieces to fit together.",
        "Note that • specifies local tree admissibility (thus obviating the need for rewrite rules), and (zoomin), (up) and work together to capture the effect of 1 and 1.",
        "In any realistic LFG grammar there will be several – often many – such annotated rules, and acceptable c-structures are those in which each non-terminal node is licensed by one of them.",
        "We specify this as follows.",
        "For each such rule we form the analogous .0 wff Or (just as we did in the previous example) and then we form the disjunction V Or of all such wffs.",
        "Now, any non-terminal node in the c-structure should satisfy one of these disjunctions (that is, each sub-tree of c-struct must be licensed by one of these conditions); moreover the disjunction is irrelevant to the terminal nodes of c-struct and all the nodes in f-struct.",
        "Thus we demand that the following conditional statement be valid: (c-struct A (down)true) V Cbr' This says that if we are at a c-struct node which has at least one daughter (that is, a non-terminal node) then one of the subtree licensing disjuncts (or 'rules') must be satisfied there.",
        "This picks precisely those models in which all the tree nodes are appropriately licensed.",
        "Note that the statement is indeed valid in such models: it is true at all the non-terminal nodes, and is vacuously satisfied at terminal tree nodes and nodes of f-struct.",
        "We now turn to the second main component of LFG, the well formedness conditions on f-structures.",
        "Consider first the uniqueness principle.",
        "In essence, this principle states that in a given f-structure, a particular attribute may have at most one value.",
        "In E this restriction is 'built in': it follows from the choices made concerning the mathematical objects composing models.",
        "Essentially, the uniqueness principle is enforced by two choices.",
        "First, V1 associates atoms only with final nodes of f-structures; and as V1 is a function, the atom so associated is unique.",
        "In effect, this hard-wires prohibitions against constant-compound and constant-constant clashes into the semantics of E. Second, we have modeled features as partial functions on the f-structure nodes – this ensures that any complex valued attribute is either undefined, or is associated with a unique sub-part of the current f-structure.",
        "In short, as required, any attribute will have at most one value.",
        "We turn to the completeness principle.",
        "In LFG, this applies to a (small) finite number of attributes (that is, transitions in the feature structure).",
        "This collection includes the grammatical functions (e.g. subj, obj, iobj) together with some longer transitions such as obl; obj and to; obj.",
        "Let GF be a metavariable over the modalities corresponding to the elements of this set, thus GF contains such items as (subj), (obj), (iobj), (obl)(obj) and (to)(obj).",
        "Now, the completeness principle requires that any of these features appearing as an attribute in the value of the PRED attribute must also appear as an attribute of the f-structure immediately containing this PRED attribute, and this recursively.",
        "The following wff is valid on precisely those models satisfying the completeness principle: (pred) GF true GF true.",
        "Finally, consider the counterpart of the completeness principle, the coherence principle.",
        "This applies to the same attributes as the completeness principle and requires that whenever they occur in an f-structure they must also occur in the f-structure associated with its FRED attribute.",
        "This is tantamount to demanding the validity of the following formula: (GF true A (pred)true) (pred) GF true"
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "The discussion so far should have given the reader some idea of how to specify LFG grammars using C. To conclude we would like to discuss =, definitions.",
        "This topic bears on an important general issue: how are the 'dynamic' (or 'generative', or `procedural') aspects of grammar to be reconciled with the 'static', (or 'declarative') model theoretic world view.",
        "The point is this.",
        "Although the LFG equations discussed so far were defining equations, LFG also allows so-called constraining equations (written =c)• Kaplan and Bresnan explain the difference as follows.",
        "Defining equations allow a feature-value pair to be inserted into an f-structure providing no conflicting information is present.",
        "That is, they add a feature value pair to any consistent f-structure.",
        "In contrast, constraining equations are intended to constrain the value of an already existing feature-value pair.",
        "The essential difference is that constraining equations require that the feature under consideration already has a value, whereas defining equations apply independently of the feature value instantiation level.",
        "In short, constraining equations are essentially a global check on completed structures which require the presence of certain feature values.",
        "They have an eminently procedural character, and there",
        "is no obvious way to handle this idea in the present set up.",
        "The bulk of LFG involves stating constraints about a single model, and £ is well equipped for this task, but constraining equations involve looking at the structure of other possible parse trees.",
        "(In this respect they are reminiscent of the feature specification defaults of GPSG.)",
        "The approach of the present paper has been driven by the view that (a) models capture the essence of LFG ontology, and, (b) the task of the linguist is to explain, in terms of the relations that exist within a single model, what grammatical structure is.",
        "Most of the discussion in Kaplan and Bresnan (1982) is conducted in such terms.",
        "However constraining equations broaden the scope of the permitted discourse; basically, they allow implicit appeal to possible derivational structure.",
        "In short, in common with most of the grammatical formalisms with which we are familiar, LFG seems to have a dynamic residue that resists a purely declarative analysis.",
        "What should be done?",
        "We see three possible responses.",
        "Firstly, we note that the model theoretic approach can almost certainly be extended to cover constraining equations.",
        "The move involved is analogous to the way first order logic (a so-called 'extensional' logic) can be extended to cope with intensional notions such as belief and necessity.",
        "The basic idea – it's the key idea underlying first order Kripke semantics – is to move from dealing with a single model to dealing with a collection of models linked by an accessibility relation.",
        "Just as quantification over possible states of affairs yields analyses of intensional phenomena, so quantification over related models could provide a `denotational semantics' for =,.",
        "Preliminary work suggests that the required structures have formal similarities to the structures used in preferential semantics for default and non-monotonic reasoning.",
        "This first response seems to be a very promising line of work: the requisite tools are there, and the approach would tackle a full blooded version of LFG head on.",
        "The drawback is the complexity it introduces into an (up till now) quite simple story.",
        "Is such additional complexity really needed?",
        "A second response is to admit that there is a dynamic residue, but to deal with it in overtly computational terms.",
        "In particular, it may be possible to augment our approach with an explicit operational semantics, perhaps the evolving algebra approach adopted by Moss and Johnson (1994).",
        "Their approach is attractive, because it permits a computational treatment of dynamism that abstracts from low level algorithmic details.",
        "In short, the second strategy is a 'divide and con-quer' strategy: treat structural issues using model theoretic tools, and procedural issues with (revealing) computational tools.",
        "It's worth remarking that this second response is not incompatible with the first; it is common to provide programming languages with both a denotational and an operational semantics.",
        "The third strategy is both simpler and more speculative.",
        "While it certainly seems to be the case that LFG (and other 'declarative' formalisms) have procedural residues, it is far from clear that these residues are necessary.",
        "One of the most striking features of LFG (and indeed, GPSG) is the way that purely structural (that is, model theoretic) argumentation dominates.",
        "Perhaps the procedural aspects are there more or less by accident?",
        "After all, both LFG and GPSG drew on (and developed) a heterogeneous collection of traditional grammar specification tools, such as context free rules, equations, and features.",
        "It could be the case such procedural residues as =, are simply an artifact of using the wrong tools for talking about models.",
        "If this is the case, it might be highly misguided to attempt to capture =, using a logical specification language.",
        "Better, perhaps, would be to draw on what is good in LFG and to explore the logical options that arise naturally when the model theoretic view is taken as primary.",
        "Needless to say, the most important task that faces this third response is to get on with the business of writing grammars; that, and nothing else, is the acid test.",
        "It is perhaps worth adding that at present the authors simply do not know what the best response is.",
        "If nothing else, the present work has made very clear to us that the interplay of static and dynamic ideas in generative grammar is a delicate and complex matter which only further work can resolve."
      ]
    }
  ]
}
