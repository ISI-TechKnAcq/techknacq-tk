{
  "info": {
    "authors": [
      "Patrick Shann",
      "Jean-Luc Cochard"
    ],
    "book": "International Conference on Computational Linguistics and Annual Meeting of the Association for Computational Linguistics",
    "id": "acl-P84-1021",
    "title": "GTT : A General Transducer for Teaching Computational Linguistics",
    "url": "https://aclweb.org/anthology/P84-1021",
    "year": 1984
  },
  "references": [
    "acl-P84-1068"
  ],
  "sections": [
    {
      "heading": "ABSTRACT",
      "text": [
        "The (ii-system is a tree-to-tree transducer developed for teaching purposes in madhine.translation.",
        "The transducer is a specialized production system giving the linguists the tools for expressing information in a syntax that is close to theoretical linguistics.",
        "Major emphasis was placed on developing a system that is user friendly, uniform and legible.",
        "This paper describes the linguistic data structure, the rule formalism and the control facilities that the linguist is provided with.",
        "1.",
        "INTRODUCTION",
        "The G1T-system (Geneva Teaching Transducer)1 is a general tree-to-tree transducer developed as a tool for training linguists in machine translation and computational linguistics.",
        "The transducer is a specialized production system tailored to the requirements of carputational linguists providing that:with a means of expressing information in a format close to the linguistic theory they are familiar radth.",
        "GTT has been developed for teaching purposes and cannot be considered as a system for large scale development.",
        "A first version has been implemented in standard Pascal and is currently running on a Univac 1100/61 and a V7X-780 under UNIX.",
        "At present it is being used by a team of linguists for experimental development of an MT system for a special purpose language (Buchmann et al., 1984), and to train students in computational linguistics."
      ]
    },
    {
      "heading": "2. THE UNIFORMITY AND SIMPLICITY OF THE SYSTEM",
      "text": [
        "As a tool for training computational linguists, major ermahasis was placed on developing a system that is user friendly, uniform, and which provides a legible syntax.",
        "One of the important requirements in machine translation is the separation of linguistic data and algorithms (Vanquois, 1975).",
        "The linguist should have the means to express his knowledge declaratively without being obliged to mix compu1 This project is sponsored by the Swiss government.",
        "tational algorithms and linguistic data.",
        "Production systems (Rosner, 1983) seem particularly suited to meet such requirements (Johnson, 1982); the production set that expresses the object-level knowledge is clearly separated from the control part that drives the application of the productions.",
        "Colmerauer's 0-system is the classic example of such a uniform production system used for machine translation (Colmerauer, 1970; Chevalier, 1978: TAUM-METEO).",
        "The linguistic knowledge is expressed declaratively using the same data structure during the whole translation process as well as the same type of production rules for dictionary entries, morphology, analysis, transfer and generation.",
        "The disadvantage of the 0-system is its quite unnatural rule-syntax for non-programmers and its lack of flexible control mechanism for the user (Vauquois, 1978).",
        "In the design of our system the basic uniform .",
        "scheme of 0-systems has been followed, but the rule syntax, the linguistic data structure and the control facilities have been modernized according to recent developments in machine translation (Vauquois, 1978;.Boltet, 1977; Johnson, 1980; Slocum, 1982).",
        "These three points will be developed in the next section."
      ]
    },
    {
      "heading": "3. DESCRIPTION OF THE SYSTEM",
      "text": []
    },
    {
      "heading": "3.1 Overview",
      "text": [
        "The general framework is a production system where linguistic object knowledge is expressed in a rule-based declarative way.",
        "The system takes the dictionaries and the gramme's as data, compiles these data and the interpreter then uses them to process the input text.",
        "The decoder transforms the result into a digestable form for the user."
      ]
    },
    {
      "heading": "3.2 Data structure",
      "text": [
        "The data structure of the system is based on a chart (Varile, 1983).",
        "One of the main advantages of using a Chart is that the data structure does not Change throughout the whole process of translation (Vauquois, 1978).",
        "In the 0-system all linguistic data on the arcs is represented by bracketed strings causing an unclean mixture of constituent structure and other linguistic attributes such as grammatical and semantic labels, etc.",
        "With this representation",
        "type checking is not possible.",
        "Vauquois proposes two changes",
        "1) Tree structures with complex labels on the nodes in order to allow interaction between different linguistic levels such as syntax or semantics, etc.",
        "2) A dissociation of the geometry from a particular linguistic level.",
        "With these modifications a single tree structure with complex labels increases the power of representation in that several levels of interpretation can be processed simultaneously (Vallquois, 1978; Boltet, 1977).",
        "In our system each arc of the chart carries a tree geometry and each node of the tree has a cam+ plex labelling consisting of a possible string and the linguistic attributes.",
        "Through the separation of geometry and attributes, the linguist can deal .",
        "with two distinct objects: with tree structures and complex labels on the nodes of the trees.",
        "The range or kind of linguistic attributes possible is not predefined by the system.",
        "The linguist has to define the types he wants to use in a declaration part.",
        "e.g.: category = verb, noun, np, pp.",
        "semantic-features = human, animate.",
        "gender = masc, fem, neut.",
        "An important aspect of type declaration is the control it offers.",
        "The system provides strong syntactic and semantic type checking, thereby constraining the application range in order to avoid inappropriate transductions.",
        "The actual implementation allows the use of sets and subsets in the type definition.",
        "Further extensions are planned.",
        "Given that in this system the tree geometry is not bound to a specific linguistic level, the linguist has the freedom to decide which information will be represented by the geometry and which will be treated as attributes on the nodes.",
        "This representation tool is thus fairly general and allows the testing of different theories and strategies in MT or computational linguistics."
      ]
    },
    {
      "heading": "3.3 The rule syntax",
      "text": [
        "The basic tool to express object-knowledge is a set of production rules which are similar in form to context-free phrase structure rules, and well-known to linguists from formal grammar.",
        "In order to have the same rule type for all operations in a translation system the power of the rules must be of type 0 in the Chcmsky classification, including string handling facilities.",
        "The rules exhibit two important additions to context-free phrase structure rules: - arbitrary structures can be matched on the left-hand side or built on the right-hand side, giving the power of unrestricted rules or transformational grammar; - arbitrary conditions on the application of the rule can be added, giving the power of a context sensitive grammar.",
        "The power of unrestricted rewriting rules makes the transducer a versatile instrument for expressing any rule-governed aspect of language whether this be morphology, syntax, semantics.",
        "The fact that the statements are basically phrase structure rules makes this language particularly congenial to linguists and hence well-suited for teaching purposes.",
        "The format of rules is determined by the separation of tree structure and attributes on the nodes.",
        "Each rule has three parts: geometry, conditions and assignments, e.g.:",
        "The geometry has the standard left-hand side, production symbol (44, and right-hand side of a production rule.",
        "a,b,c are variables describing the nodes of the tree structure.",
        "The '+' indicates the sequence in the chart, e.g. a+b",
        "Conditions and assignments affect only the objects on the nodes."
      ]
    },
    {
      "heading": "3.4 Control structure",
      "text": [
        "The linguist has two tools for controlling the application of the rewriting rules 1) The rules can be grouped into packets (grammars) which are executed in sequence.",
        "2) Within a given grammar the rule-application can be controlled by means of parameters set by the linguist.",
        "According to the linguistic operation envisaged, the parameters can be set to a oombination of serial or parallel and one-pass or iterate.",
        "In all, 4 different combinations are possible parallel and one-pass parallel and iterate serial and one-pass serial and iterate",
        "In the parallel mode the rules within a grammar are considered as being unordered from a logical point of view.",
        "Different rules can be applied on the same piece of data and produce alternatives in the chart.",
        "The chart is updated at the end of every application-cycle.",
        "In the serial mode the rules are considered as being ordered in a sequence.",
        "Only one rule can be fired for a particular piece of data.",
        "But the following rules can match the result produced by a preceding rule.",
        "The chart is updated after every rule that fired.",
        "The parameters one-pass and iterate control the number of cycles.",
        "Either the interpreter goes through a cycle only once, or iterates the cycles as long as any rule of the grammar can fire.",
        "The four coMbinations allow different uses according to the linguistic task to be performed, e.g.: Parallel and iterate applies the rules non-deterministically to compute all possibilities, which gives the system the power of a Turing Machine .",
        "(this is the only control mode for the Q.-system).",
        "Parallel and one-pass is the typical ccrnbination for dictionaries that contain alternatives.",
        "TWo different rules can apply to the same piece of data.",
        "The example below (fig.",
        "2) uses this caMbi-nation in the first GRAMMAR 'vocabulary'.",
        "Serial and one-pass allows rule ordering.",
        "A possible application of this combination is a preference mechanism via the explicit rule ordering using the longest-match-first technique.",
        "The GRAMMAR 'preference' in the example below (fig.",
        "2) makes use of that by progressive weakening of the selectional restriction of the verb 'drink'.",
        "- Rule 24 fires without semantic restrictions and rule 25 accepts sentences where the optional argument is missing.",
        "The example should be sufficiently self-explanatory.",
        "It begins with the declaration of the attributes and contains three grammars.",
        "The result is shown for two sentences (fig.",
        "3).",
        "TO demonstrate which rule in the preference grammar has fired each rule produces a different tap label: rule 21 P111, rule 22 PH2, etc.",
        "There is a system user-interaction in the two main programs of the system, the compiler and the interpreter.",
        "The following example (fig.",
        "4) shows how the error messages of the compiler are printed in the compilation listing.",
        "Each star with a number points to the approximate position of the error and a message explains the possible errors.",
        "The compiler tries to correct the error and in the worst case ignores that portion of the text following the error.",
        "The interpreter has a parameter that allows the sequence of rules that fired to be traced.",
        "The trace in figure 5 below corresponds to the execution of the example (1) in figure 3. intsrpreteur de 0 – codes 83.1 few-14-84 application de la regle 21 PREFERENCE execute(a) temps d'interpretation : 0.516 sec.",
        "CPU"
      ]
    },
    {
      "heading": "5. CONCLUSION",
      "text": [
        "The transducer is implemented in a modular style to allow easy changes to or addition of cam-ponents as the need arises.",
        "This provides the possibility of experimntation and of further development in various directions: - integration of a lexical database with special editing facilities for lexicographers; - developments of special interpreters for transfer or scoring mechanisms for heuristics; - refinement of linguistically motivated type checking.",
        "In this paper we have mainly concentrated on syntactic applications to illustrate the use of the transducer.",
        "However, as we hope to have shown, the formalism of the system is general enough to allow interesting applications in various domains of lin"
      ]
    },
    {
      "heading": "ACENCFAILEDGEMENTS",
      "text": [
        "Special thanks should go to Roderick Johnson of CCL, UMIST, who contributed a great deal in the original design of the system presented here, and who, through frequent fruitful discussion, has continued to stimulate and influence later developments, as well as to Dominique Petitpierre and Lindsay Hammond who pioyrammed the initial implementation.",
        "We would also like to thank all members of ISSCO who have participated in the work, particularly B. Budhmann and S. Warwick."
      ]
    }
  ]
}
