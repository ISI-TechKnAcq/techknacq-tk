{
  "info": {
    "authors": [
      "Markus Saers",
      "Joakim Nivre",
      "Dekai Wu"
    ],
    "book": "Proceedings of the 11th International Conference on Parsing Technologies (IWPT’09)",
    "id": "acl-W09-3804",
    "title": "Learning Stochastic Bracketing Inversion Transduction Grammars with a Cubic Time Biparsing Algorithm",
    "url": "https://aclweb.org/anthology/W09-3804",
    "year": 2009
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Markus Saers Joakim Nivre Dekai Wu",
        "Human Language Technology Center Dept.",
        "of Linguistics and Philology Dept.",
        "of Computer Science and Engineering Uppsala University HKUST Sweden Hong Kong",
        "first.last@lingfil.uu.se dekai@cs.ust.hk",
        "We present a biparsing algorithm for Stochastic Bracketing Inversion Transduction Grammars that runs in O(bn) time instead of O(n).",
        "Transduction grammars learned via an EM estimation procedure based on this biparsing algorithm are evaluated directly on the translation task, by building a phrase-based statistical MT system on top of the alignments dictated by Viterbi parses under the induced bigrammars.",
        "Translation quality at different levels of pruning are compared, showing improvements over a conventional word aligner even at heavy pruning levels."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "As demonstrated by Saers & Wu (2009) there is something to be gained by applying structural models such as Inversion Transduction Grammars (ITG) to the problem of word alignment.",
        "One issue is that naive methods for inducing ITGs from parallel data can be very time consuming.",
        "We introduce a parsing algorithm for inducing Stochastic Bracketing ITGs from parallel data in O(bn) time instead of O(n ), where b is a pruning parameter (lower = tighter pruning).",
        "We try out different values for b, and evaluate the results on a translation tasks.",
        "In section 2 we summarize the ITG framework; in section 3 we present our algorithm, whose time complexity is analyzed in section 4.",
        "In section 5 we describe how the algorithm is evaluated, and in section 6, the empirical results are given."
      ]
    },
    {
      "heading": "2. Inversion Transduction Grammars",
      "text": [
        "Inversion transductions are a theoretically interesting and empirically useful equivalence class of transductions, with expressiveness and computational complexity characteristics lying intermediate between finite-state transductions and syntax-directed transductions.",
        "An Inversion Transduction Grammar (ITG) can be used to synchronously generate sentence pairs, synchronously parse sentence pairs, or transduce from a sentence in one language to a sentence in another.",
        "The equivalence class of inversion transduc-tions can be described by restricting Syntax-Directed Transduction Grammars (SDTG) in various equivalent ways to the special cases of (a) binary SDTGs, (b) ternary SDTGs, or (c) SDTGs whose transduction rules are restricted to straight and inverted permutations only.",
        "Thus on one hand, any binary or ternary SDTG is an ITG.",
        "Conversely, any ITG can be stated in binary two-normal form (Wu, 1997).",
        "Only three kinds of rules are present in the normal form:",
        "On the other hand, under characterization (c), what distinguishes ITGs is that the permutation of constituents is restricted in such a way that all children of a node must be read either left-to-right, or right-to-left.",
        "The movement only applies to one of the languages, the other is fixed.",
        "Formally, an ITG is a tuple {N, V, A, S), where N is a set of nonterminal symbols, A is a set of rewrite rules, S e N is the start symbol and V C VE x VF is a set of biterminal symbols, where VE is the vocabulary of E and VF is the vocabulary of F. We will write a biterminal as e/f, where e e VE and f e VF .A sentence pair will be written as e/f, and a bispan as es..t/fu.",
        "Each rule 5 e A is a tuple {X, y, 0) where X e N is the right hand side of the rule, 7 e {N U V}* is a series of nonterminal and biterminal symbols representing the production of the rule and 0 e {$, [], {)} denotes the orientation (axiomatic, straight or inverted) of the rule.",
        "Straight rules are read left-to-right in both languages, while inverted rules are read left-to-right in E and right-to-left in F. The direction of the axiomatic rules is undefined, as they must be completely made up of terminals.",
        "For notational convenience, the orientation of the rule is written as surrounding the production, like so: X – 7, X – [7] and X – {7).",
        "The vocabularies of the languages may both include the empty token e, allowing for deletions and insertions.",
        "The empty biterminal, e/e is not allowed.",
        "In a Stochastic ITG (SITG), each rule is also associated with a probability, such that for all X e N. The probability of a derivation S 4> e/f is defined as the production of the probabilities of all rules used.",
        "As shown by Wu (1995), it is possible to fit the parameters of a SITG to a parallel corpus via EM (expectation-maximization) estimation.",
        "An ITG where there is only one nonterminal (other than the start symbol) is called a bracketing ITG (BITG).",
        "Since the one nonterminal is devoid of information, it can only be used to group its children together, imposing a bracketing on the sentence pairs."
      ]
    },
    {
      "heading": "3. Parsing SBITGs",
      "text": [
        "In this section we present a biparsing algorithm for Stochastic Bracketing Inversion Transduction Grammars (SBITGs) in normal form which incorporates a pruning parameter b.",
        "The algorithm is basically an agenda-based bottom-up chart parser, where the pruning parameter controls the number of active items of a given length.",
        "To parse a sentence pair e/f, the parser needs a chart C and a series of T + V agendas A\\,A2,..., AT+V, where T = \\e\\ and V = |f |.",
        "An item is defined as a nonterminal symbol (we use X to denote the anonymous nonterminal symbol of the bracketing ITG) and one span in each language, written as Xstuv where 0 < s < t < T corresponds to the span es..t and 0 < u < v < V corresponds to the span fu..v. The length of an item is defined as \\Xstuv \\ = (t – s)+(v – u).",
        "Since items are grouped by their length, highly skewed links (eg.",
        "6:1) will be competing with very even links (eg.",
        "4:3).",
        "Skewed links are generally bad (and should be pruned), or have a high probability (which means they are likely to survive pruning).",
        "An item may be active or passive, the active items are present in the agendas and the chart, whereas the passive items are only present in the chart.",
        "The parser starts by asserting items from all lexical rules (X – e/f), and placing them on their respective agendas.",
        "After the initial seeding, the agendas are processed in order.",
        "When an agenda is processed, it is first pruned, so that only the b best items are kept active.",
        "After pruning, the remaining active items are allowed to be extended.",
        "When extended, the item combines with an adjacent item in the chart to form a larger item.",
        "The newly created item is considered active, and added to both the chart and the appropriate agenda.",
        "Once an item has been processed it goes from being active to being passive.",
        "The process is halted when the goal item S0T0v is reached, or when no active items remain.",
        "To build the forest corresponding to the parse process, back-pointers are used.",
        "In the initial step, the set of lexical items L is built.",
        "All lexical items i e L are then activated by placing them on their corresponding agenda Au.",
        "By limiting the length of phrasal terminals to some threshold /x, the variables t and v can be limited to s+/j, and u+/i respectively, limiting the complexity of the initialization step from O(n) to O(n).",
        "In the recursive step we build a set of extensions E(i) for all active items i.",
        "All items in E(i) are then activated by placing them on their corresponding agenda (i e A^).",
        "Since we are processing the agendas in order, any item in the chart will be as long as or shorter than the item being extended.",
        "This fact can be exploited to limit the number of possible siblings explored, but has no impact on time complexity.",
        "When doing Viterbi parsing, all derivations but the most probable are discarded.",
        "This gives an unambiguous parse, which dictates exactly one alignment between e and f. The alignment of the Viterbi parse can be used to substitute that of other word aligners (Saers and Wu, 2009) such as GIZA++ (Och and Ney, 2003)."
      ]
    },
    {
      "heading": "4. Analysis",
      "text": [
        "Looking at the algorithm, it is clear that there will be a total of T + V = O(n) agendas, each containing items of a certain length.",
        "The items in an agenda can start anywhere in the alignment space: O(n) possible starting points, but once the end point in one language is set, the end point in the other follows from that, adding a factor O(n).",
        "This means that each agenda contains O(n) active items.",
        "Each active item has to go through all possible siblings in the recursive step.",
        "Since the start point of the sibling is determined by the item itself (it has to be adjacent), only the O(n) possible end points have to be explored.",
        "This means that each active item takes O(n) time to process.",
        "The total time is thus O(n): O(n) agendas, containing O(n) active items, requiring O(n) time to process.",
        "This is also the time complexity reported for ITGs in previous work (Wu, 1995; Wu, 1997).",
        "The pruning works by limiting the number of active items in an agenda to a constant b, meaning that there are O(n) agendas, containing O(b) active items, requiring O(n) time to process.",
        "This gives a total time complexity of O(bn)."
      ]
    },
    {
      "heading": "5. Evaluation",
      "text": [
        "We evaluate the parser on a translation task (WMT'08 shared task).",
        "In order to evaluate on a translation task, a translation system has to be built.",
        "We use the alignments from the Viterbi parses of the training corpus to substitute the alignments of GIZA++.",
        "This is the same approach as taken in Saers & Wu (2009).",
        "We will evaluate the resulting translations with two automatic metrics: BLEU (Papineni et al., 2002) and NIST (Doddington, 2002)."
      ]
    },
    {
      "heading": "6. Empirical results",
      "text": [
        "In this section we describe the experimental setup as well as the outcomes.",
        "We use the Moses Toolkit (Koehn et al., 2007) to train our phrase-based SMT models.",
        "The toolkit also includes scripts for applying GIZA++ (Och and Ney, 2003) as a word aligner.",
        "We have trained several systems, one using GIZA++ (our baseline system), one with no pruning at all, and 100).",
        "We used the grow-diag-final-and method to extract phrases from the word alignment, and MERT (Och, 2003) to optimize the resulting model.",
        "We trained a 5-gram SRI language model (Stolcke, 2002) using the corpus supplied for this purpose by the shared task organizers.",
        "All of the above is consistent with the guidelines for building a baseline system for the WMT'08 shared task.",
        "The translation tasks we applied the above procedure to are all taken from the Europarl corpus (Koehn, 2005).",
        "We selected the tasks German-English, French-English and Spanish-English.",
        "Furthermore, we restricted the training sentence pairs so that none of the sentences exceeded length 10.",
        "This was necessary to be able to carry out exhaustive search.",
        "The total amount of training data was roughly 100,000 sentence pairs in each language pair, which is a relatively small corpus, but by no means a toy example.",
        "It is possible to set the parameters of a SBITG by applying EM to an initial guess (Wu, 1995).",
        "As our initial guess, we used word co-occurrence counts, assuming that there was one empty token in each sentence.",
        "This gave an estimate of the lexical rules.",
        "The probability mass was divided so that the lexical rules could share half of it, while the other half was shared equally by the two structural rules (X – [XX] and X – {XX)).",
        "Several training runs were made with different pruning parameters.",
        "The EM process was halted when a relative improvement in log-likelihood of 10-3 was no longer achieved over the previous iteration.",
        "Once the EM process terminated, Viterbi parses were calculated for the training corpus, and the alignments from them outputted in the same format produced by GIZA++.",
        "The results are presented in Table 1.",
        "GIZA++ generally terminates within minutes (6-7) on the training corpora used, making it faster than any of the SBITGs (they generally required 4-6 iterations to terminate, making even the fastest ones slower than GIZA++).",
        "To put the times in perspective, about 6 iterations were needed to get the ITGs to converge, making the longest training time about 16-17 hours.",
        "The time it takes to extract the phrases and tune the model using MERT is about 14 hours for these data sets.",
        "Looking at translation quality, we see a sharp initial rise as b grows to 10.",
        "At this point the SBITG system is on par with GIZA++.",
        "It continues to rise up to b = 25, but after that is more or less levels out.",
        "From this we conclude that the positive results reported in Saers & Wu (2009) hold under harsh pruning."
      ]
    },
    {
      "heading": "7. Conclusions",
      "text": [
        "We have presented a SBITG biparsing algorithm that uses a novel form of pruning to cut the complexity of EM-estimation from O(n) to O(bn).",
        "Translation quality using the resulting learned SBITG models is improved over using conventional word alignments, even under harsh levels of pruning."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "The authors are grateful for the comments made by the two anonymous reviewers.",
        "This work was funded by the Swedish National Graduate School of Language Technology, the Defense Advanced Research Projects Agency (DARPA) under GALE Contract No.",
        "HR0011-06-C-0023, and the Hong Kong Research Grants Council (RGC) under research grants GRF621008, DAG03/04.EG09, RGC6256/00E, and RGC6083/99E.",
        "Any opinions, findings and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the Defense Advanced Research Projects Agency.",
        "Baseline",
        "Different values of b for SBITGs",
        "Metrie",
        "(GIZA++)",
        "oc",
        "100",
        "75",
        "50",
        "25",
        "10",
        "1",
        "Spanish-English",
        "BLEU",
        "0.2597",
        "0.2663",
        "0.2671",
        "0.2661",
        "0.2653",
        "0.2655",
        "0.2608",
        "0.1234",
        "NIST",
        "6.6352",
        "6.7407",
        "6.7445",
        "6.7329",
        "6.7101",
        "6.7312",
        "6.6439",
        "3.9705",
        "time",
        "03:20:00",
        "02:40:00",
        "02:00:00",
        "01:20:00",
        "00:38:00",
        "00:17:00",
        "00:03:10",
        "German-English",
        "BLEU",
        "0.2059",
        "0.2113",
        "0.2094",
        "0.2091",
        "0.2090",
        "0.2091",
        "0.2050",
        "0.0926",
        "NIST",
        "5.8668",
        "5.9380",
        "5.9086",
        "5.8955",
        "5.8947",
        "5.9292",
        "5.8743",
        "3.4297",
        "time",
        "03:40:00",
        "02:45:00",
        "02:10:00",
        "01:25:00",
        "00:41:00",
        "00:17:00",
        "00:03:20",
        "Freneh-English",
        "BLEU",
        "0.2603",
        "0.2663",
        "0.2655",
        "0.2668",
        "0.2669",
        "0.2654",
        "0.2632",
        "0.1268",
        "NIST",
        "6.6907",
        "6.8151",
        "6.8068",
        "6.8068",
        "6.8065",
        "6.7013",
        "6.7136",
        "4.0849",
        "time",
        "03:10:00",
        "02:45:00",
        "02:10:00",
        "01:25:00",
        "00:42:00",
        "00:17:00",
        "00:03:25"
      ]
    }
  ]
}
