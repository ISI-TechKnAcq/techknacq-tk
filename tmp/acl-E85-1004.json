{
  "info": {
    "authors": [
      "R. I. Bainbridge"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E85-1004",
    "title": "Montagovian Definite Clause Grammar",
    "url": "https://aclweb.org/anthology/E85-1004",
    "year": 1985
  },
  "references": [
    "acl-J81-3002",
    "acl-J82-3003",
    "acl-P81-1036",
    "acl-P83-1008"
  ],
  "sections": [
    {
      "heading": "MONTAGOVIAN DEFINITE CLAUSE GRAMMAR",
      "text": []
    },
    {
      "heading": "Abstract",
      "text": [
        "This paper reports a completed stage of ongoing research at the University of York.",
        "Landsbergen's advocacy of analytical inverses for compositional syntax rules encourages the application of Definite Clause Grammar techniques to the construction of a parser returning Montague analysis trees.",
        "A parser MDCG is presented which implements an augmented Friedman – Warren algorithm permitting post referencing, and interfaces with a language of intensional logic translator LILT so as to display the derivational history of corresponding reduced IL formulae.",
        "Some familiarity with Montague's PTO and the basic DCG mechanism is assumed.",
        "Ke words Compositional Semantics, Definite Clause Grammar, Friedman Warren Algorithm, Intensional Logic, Montague Grammar, Natural Language Processing.",
        "PROLOG."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Consideration is given by Landsbergen [20] to the global algorithmic structure of a top down parser demonstrably equivalent to a compositional grammar such as that of PTO [223.",
        "The method is as follows:",
        "1.",
        "Formulate the original grammar in terms of indexed compositional – M rules of form:",
        "If syntax trees <Sk..Sn) satisfy condition C then combine (Sk..Sn> into Sj such that the compositional history may be represented on a derivation tree (i.e. a skeletal analysis tree lacking node labels).",
        "2.",
        "Subject to specified restraints evolve inverse analytical – M Rules of form: If Sj conforms to condition C' then analyse Sj into <Sk..Sn>.",
        "3.",
        "Prove that the compositional and analytical M rules are equivalent.",
        "4.",
        "Construct a two stage parser: (i) Parse a sentence using a context free grammar (CFG) thus deriving a syntax tree.",
        "(ii) Traverse the syntax tree in postorder [19] under the guidance of the analytical – M rules.",
        "constructing",
        "the derivation tree which reflects the reverse order application of the inverse rules.",
        "An abstract algorithm describing the parser is given in the form of procedural pseudo code, however the problem of establishing that an implementation conforms to the algorithm is deferred, a problem perhaps aggravated by the absence of a formal notation for M rules which might otherwise have suggested appropriate data structures.",
        "The postorder traverse in (ii) of a preorder creation involves a duplication which may be avoided by adopting the PROLOG Definite Clause Grammar (DCG) formalism.",
        "([28] cf. [3], [4], [5], [21]), which.",
        "as has been observed C32) virtually forces the methodology of syntax directed translation coupled with compositional semantics.",
        "A DCG may be ingenuously characterised as a CFG having category symbols augmented by argument places.",
        "and containing supplementary goals not limited in function to input consumption.",
        "• Logical variables in argument places permit synthesised and inherited attributes [18] to be handled with equal facility.",
        "The clauses of a DCG may be directly executed by a PROLOG interpreter, hence if combined CFG+analytical – M rules are presented in the form of Definite Clauses.",
        "the problem of mapping algorithm to implementation does not arise: the algorithm and program are one and the same.",
        "The parsers of both Landsbergen [20] and Friedman & Warren [9] generate only skeletal trees, other details being recoverable from the leaves and operation indices: however the tedium of such recovery may properly devolve on the computer.",
        "and for pedagogical purposes at",
        "least the production of full analysis trees would be advantageous.",
        "This paper outlines a DCG implementation of a version of the compositional syntax of PTO which returns full Montague analysis trees in the form of vine d4agrams modified at most by additional ,feature marking on variables.",
        "Given an input sentence.",
        "MDCG returns sets of trees, optionally passing members to a language of intensional logic translator (LILT) which generates corresponding IL formulae.",
        "The indeterminacy of PROLOG implies that a DCG written with circumspection may also be used in reverse, but it remains to be investigated whether the model could be so modified as to achieve the recent objectives of Friedman C83.",
        "To handle quantification MDCG employs a variation of the Friedman-Warren algorithm (FWA) C93.",
        "The programs are implemented in University of Edinburgh DEC-10 PROLOG and run on the University of York DEC-10 computer"
      ]
    },
    {
      "heading": "2 Implied Modifications to PTO",
      "text": [
        "The version of PTO grammar implemented in MDCG has both significant and cosmetic changes.",
        "As regards the first.",
        "Partee observes (C24].",
        "C253) that a version of S12 which inserts labelled bracketing, and a version of 84 sensitive to such bracketing and generalised to add subject - agreement to the first verb in each conjunct of a conjoined verb phrase.",
        "is needed in _order to distinguish (1) from (2).",
        "(1) John tries to walk and talks.",
        "(2) John tries to walk and talk.",
        "Without labelled bracketing.",
        "PTO has diff-and then constrains the predicate to be a conjunction of one or more verb phrases identifiable as commencing with concordant finite forms.",
        "Likewise the procedure which parses infinitival complements in accordance with 88 accepts a conjunction of one or more verb phrases starting with infinitives.",
        "MDCG successfully generates the trees illustrated in fig 1, thus tacitly assuming compositional counterparts adopting modifications such as the bracketing of Parte.",
        "([243, [25]).",
        "or the headverb flagging convention of Bennett [27.",
        "Bennett's simplified semantic typing, which results from treating IV and CN as primitive categories, is also exploited in LILT as illustrated in the appendix.",
        "The MDCG post referencing facility requires the admission of alternative capitalised variables, and an amended flO which undertakes the replacement by term T of the earlier of: (a) the first uncapitalised variable with index n or (b) the last occurring variable with index n. Whether capitalised : variables would prove popular with advocates of the \"well formedness constraint\" £27) is uncertain Feature matching.",
        "which is achieved by PROLOG's cross - goal variable instantiation conventions.",
        "plainly affords a simple mechanism.",
        "from the syntactic viewpoint, for handling number concord and selectional restrictions on the basis of feature marked lexical entries.",
        "Indeed since the alternative operations licenced by S2 are also identified in the lexicon.",
        "MDCG has the facility without amendment to produce analysis trees for plural sentences such"
      ]
    },
    {
      "heading": "******************4*********4***********************************",
      "text": [
        "iculty identifying head verbs.",
        "but since a DCG works top down it encounters no such problems.",
        "The MDCG analogue 'of 84 first identifies the features of the subject.",
        "as: (3) The men have not eaten the fishes.",
        "given a Further determiner clause in the lexicon introducing a definite article",
        "paired with an additional operation number and marked with the features Cdef,p12.",
        "The principle of compositionality [103 demands that this syntactical facility remain officially untriggered pending the introduction of appropriate plural determiner interpretation clauses in LILTS however its introduction for experimental purposes allows MDCC and LILT to provide • testbed for the investigation of senses for additional quantifiers.",
        "The cosmetic variation involves the introduction of further feature marking on variables.",
        "but since variables receive semantic interpretation only in leaf position where PTO and MDCC are equivalent.",
        "the change has no semantic significance.",
        "Variables as leaves are in the range he0..hen.",
        "but whereas PTO introduces only accusative marking as a side effect of combination.",
        "MDCC adds markings for gender (and if needed number).",
        "Amendments to PTO to reflect these innovations would be purely decorative.",
        "52 would mark its output with a number feature derived from the quantifier.",
        "while .both S4 and 85 would.",
        "like S2, licence alternative operations such that f4.0 and f5.0 would be restricted to cases where the input T were not a variable, and f4.",
        "1.. f4.",
        "4. f5.1..f5.4 would generate hen IV .. theyn IV.",
        "TV himn TV theme, respectively.",
        "Since the translation rules 'T4 and T5 refer to the value of the input 'term of • function in the f4.",
        "f5 series these would be unaffected.",
        "Rules in the range San.",
        "814n .. Sian would apply on condition that the input sentence did alt include a variable with index n having discordant features.",
        "If plural forms became available, the subject agreement clause of 84 would need generalising.",
        "and S13 would, like 511 and S12.",
        "gain access to f8, marking its output with the number of its first argument in case the operation were f9.",
        "or with C+plural] otherwise."
      ]
    },
    {
      "heading": "3 Tree Structures and Parsino Procedures",
      "text": [
        "Nodes on an analysis tree are represented internally by analogues of the \"syn\" structures of McCord C212.",
        "having the form: node(N. F. L. D) where: N = A rule number in the form *Syn:Fun, aSyn:(Fun.Inx).",
        "or *1:= such that Syn and Fun are Montague syntax rule and structural operation numbers.",
        "Inx is a variable subscript.",
        "and *1= indicates lexical insertion.",
        "F = A list of features intrinsic to the node.",
        "L = A node label in list form.",
        "0 = In the cast of • non-terminal node • binary list of daughters both of",
        "which are nodes, otherwise a structure of form: sense( Item.",
        "Category) used by LILT in the generation of IL formulae.",
        "Procedures which parse grammatical categories normally have ten arguments the nature of which will where necessary be explained in subsequent sections.",
        "The general form is as follows: category(N,F.E.L.Ia,Ix,FVB.SA,SRa.SR:) where N = A node structure as described.",
        "F = The features of the category - in context which may exceed the node features.",
        "For example case is not an intrinsic noun phrase leaf feature.",
        "but it constrains adoption to specified configurations.",
        "E - The environment (preorder predecessors) of the category relative to which the parse is aborted if N is non unique.",
        "•",
        "SRa.SRz = Substituens, required lists before and after parsing."
      ]
    },
    {
      "heading": "4 Imolementino FWA in PROLOG",
      "text": [
        "The FWA handles the introduction and subsequent binding of indexed variables on nary substitutes for skeletal analysis trees by the manipulation of two lists.",
        "FVB (free variables below) and SA (substitutions above).",
        "In order to implement the algorithm in a PROLOG DCG directed towards the production of strictly Montagovian trees.",
        "each clause responsible for creating a node requires both FVB and SA argument places, the first to act as an output and the second as in input parameter, with the proviso that the top level \"sentence\" call set both to the empty list.",
        "A clause charged with the construction of a I (=NP) node.",
        "provided that it does more than read a surface pronoun.",
        "must be given the potion of returning a default node.",
        "or alternatively of binding the noun phrase discovered to the next available variable, adding the.",
        "binding to the FVB set, and returning • a variable node instead.",
        "In MDCC a binding takes the form not of a (variable, noun-phrase) pair but of • structure: bind(Var,Inx,Node) where: Var = The indexed variable.",
        "Ins = The subscript.",
        "Node = The complete structure node(N.F.L.D) for • T or.",
        "in case the binding is performed under the S3",
        "analogue, for a CN.",
        "The feature field includes both gender and number although presently available determiners constrain number to be singular.",
        "Clauses responsible for returning sentence and verb phrase nodes must likewise construct a default node, but must be permitted to substitute for it • node having this default as younger daughter, a T node from a binding extracted from the current FVB as elder daughter, and the structural operation flagged with the binding index.",
        "In all cases the FVB returned to the head goal must represent the union of the FVBs of those sub – goals which construct daughters (preorder successors), plus any additions resulting from a specific call to option, or less any extractions accomplished by a specific call to substitute.",
        "The FVB of a given node may nevertheless contain bindings apparently introduced by a preorder predecessor because the effect of substitute is to adopt, elder sisters.",
        "Accordingly the published constraints [9] on quantification over variables remaining free in preorder predecessors must be preserved.",
        "Prior to extraction MDCO verifies that the Var field of a binding does not appear as a label dominated by the Node field of any other binding available in the current FVB.",
        "Vacuously quantified relative clauses (\"not there\" cases C163) are.",
        "surprisingly, tolerated by the original FWA, requirement that in the top level \"sentence\" call FVB must be [2.",
        "The latter requirement constitutes a final filter as suggested, albeit with reservation, by Janssen Elmo as a means of ensuring syntactic conformity to the \"variable principle\".",
        "When a parsing procedure is called other than at top level, the SA is initialised as the union of the SA of the head goal and the FVB of any goal constructing an elder sister.",
        "A noun phrase parsing clause which reads a surface pronoun may reference any binding in the SA such that, where Node node(N.F,L,D), the features in F conform with the pronoun in number and gender.",
        "A variable node having the indexed variable from the binding in its L field is returned, thus achieving an antecedent reference.",
        "Neither LIFO nor FIFO) lists suffice to generate all permitted quantifier scope variations.",
        "If FVB and SA are formed by simple concatenation then substitute must be capable of extracting members randomly.",
        "Alternatively substitute may safely select the next available item provided that the lists are formed in such a way that all permutations emerge in due course.",
        "MDCG adopts the latter choice, employing a predicate: mix (L1, L2, L3) which, given successive calls, simulates the scattering of the members of Ll within L2 in a random pattern on the assumption that L2 is already random.",
        "although a parallel test for variable eligibility is plainly needed.",
        "In MDCG the eligibility procedure includes • mechanism suitable for eliminating vacuous applications of 53: the selected variable may not be dominated by any node in another FVB binding, but it must be dominated by the embedded sentence node.",
        "The elimination of \"left overs\", ie.",
        "indexed variables remaining free on the top node of an analysis tree, is achieved partly by the constraints on substitution which prevent appearances outside the scope of quantification, and partly by the"
      ]
    },
    {
      "heading": "5 Auomentino FWA",
      "text": [
        "Since the grammar of PTO does not generate post referencing pronouns, FWA is not designed to accommodate them.",
        "In MDCG an augmented FWA is introduced to handle post referencing via capitalised variables which are always realised as surface pronouns.",
        "For example in response to the input: (4) The man such that he loves her finds Mary.",
        "the output includes a tree commencing as in fig 2.",
        "The augment requires parsing procedures to accept two additional list holding argument places, SRa and SR: (Substituens Required at start and at end).",
        "When a surface pronoun is encountered, • check is first made both in SA (for an antecedent referent) and in SRa (in case • previous post reference has been made) for binding with matching number and gender.",
        "If none is found then a dummy binding, with only the F field of the node structure set.",
        "is created.",
        "The union of this item and SRa becomes SRz.",
        "whilst the dummy is added to FVB.",
        "The SRa of an elder daughter is the SRa of its parent.",
        "the SRa of a younger daughter is the SR: of its elder sister, and the SRz of the younger daughter becomes the SRz of the parent.",
        "It is now required that whenever • noun phrase making clause exercises its option to introduce' a variable.",
        "• check must first be made of the SR list.",
        "and if possible a suitable dummy binding extracted and completed with no addition to the FVB list.",
        "The behaviour of PROLOG ensures that completion effects all existing occurrences of the dummy.",
        "A constraint on substitution must now prohibit the extraction from the FVB of any binding appearing in the SRz list returned to the head goal.",
        "In this way not only may no younger sister dominate quantification over a variable remaining free in the family of an elder jitter (the original constraint).",
        "but the elder sister must extend the same courtesy to\" her sibling."
      ]
    },
    {
      "heading": "6 The Mechanics of MDCG",
      "text": []
    },
    {
      "heading": "6.1 Handlino Left Recursion",
      "text": [
        "Fig 3 illustrates the MDCG equivalent is essentially left recursive, which presents problems for a top – down.",
        "left – right, depth First DCC technique.",
        "Standard methods [34] for eliminating left recursion from a CFO would be inappropriate as they result in only weakly equivalent grammars.",
        "The MDCG solution is to employ a well formed substring table (WFST).",
        "(vide C172.",
        "C313.",
        "C337, [35]) and assume that the recurring item has already been found.",
        "adding to the table the result of subsequent parsing given that it is unique relative to its environment.",
        "Since the WFST must record the relative position of entries, grammar rule notation CORN) which insulates the programmer from lexical decomposition must be proscribed: accordingly MDCG is written in raw PROLOG, pairs of variables in the range Ia..Iz representing string buffers before and after parsing."
      ]
    },
    {
      "heading": "6.2 RRstorative Editino",
      "text": [
        "Reflection on the behaviour of the clause in fig 3 during the parsing of: (5) Woman such that a man loves her.",
        "reveals that prior to parsing the embedded sentence, the kth variable (k=Inx) in the range he0..hen is generated and its binding to CN passed on in a new SA list.",
        "When the pronoun is encountered.",
        "the binding with index k maybe extracted, a leaf node with hek as label created, and a form marked for number, gender and case returned as transmission label to the immediately dominating node.",
        "The value of Lb (the embedded sentence label) will in due course be returned as:",
        "(6) a man loves hark.",
        "Before this may be prefixed with the common noun plus \"such that\" to become the",
        "of Montague's rule S3.",
        "The inverse of S3 default label Ld it must be edited so as",
        "to restore all variables with index k to appropriate surface forms.",
        "Samples of eligible variables (i.e. k – variables of appropriate number and gender) are created by makevars, whereafter pditline achieves the required restoration."
      ]
    },
    {
      "heading": "6.3 Node and Transmission Labels",
      "text": [
        "The label of a leaf node is invariably a root form, but a morphological variation is very often required as transmission label Non – leaf nodes may also be so characterised.",
        "When a verbphrase is extracted from the WFST in fig 4, which ill"
      ]
    },
    {
      "heading": "6.4 Calls to \"substitute\" and \"option\"",
      "text": [
        "Fig 4 includes a call to substitute while a call to potion occurs in fig 5 which illustrates the MDCG clause responsible for parsing proper names.",
        "The form of a substitute call is as follows: substitute(T,Node,Nodel,T1,T11,N1, NLI.FMFV131,Sk,SR) where: T = The type of node involved (s=SEN, vp=IV, cn=CN).",
        "Node = The default node constructed.",
        "Nadel = The replacement node (Nodel=Node if no substitution is made).",
        "ustrates the MDCG equivalent of SIO.",
        "the node label LI must contain the bare infinitive of the head verb while La contains a finite form.",
        "Having processed the adverb.",
        "a pair, of new labels must mission labels (T11=T1 if no substitution made).",
        "Nl.N11 ■ Default and replacement node labels (N1l=N1 if no substitution made.",
        "and N1.NL1■C3 if T=s or T=cn",
        "accordingly be constructed.",
        "one for the default node and one for its transmission label.",
        "Should a substitution then be made, twin labels for the introduced higher node must likewise be maitained by the substitute procedure.",
        "since the new.. node label is taken to be Ill).",
        "FVB,FV1:11 = The free variable below lists before and after any extraction.",
        "Sk = Those bindings bipassed in ancestor calls to substitute (At top level SINE3).",
        "SR = The substituens required list containing the constraints on substitution.",
        "Similarly a call to gotion appears in the form: option(Node.F,Nodel.TI.T11.FVB.FVB1, SR.SR1) where: Node,Nodel = The default and replacement nodes.",
        "F = The features (gender and number) of the node.",
        "T1,111 = The default and transmission labels.",
        "FVD,FVD1 = The free variables below lists before and after any addition.",
        "SR. SRI = The substituens required lists before and after any subtraction."
      ]
    },
    {
      "heading": "7 A Foretaste of LILT",
      "text": [
        "warren (32] suggests two possibilities for encoding lambda terms in PROLOG given the desire to represent a full typed lambda calculus.",
        "the first portraying lambda variables as PROLOG structures and the second equating them with PROLOG vari-descriptive commentary similar to that given by Partee [253 and Dowty (7].",
        "This is accomplished during a traverse in \"galilean\" postorder of the analysis tree, producing output of the form illustrated in the appendix.",
        "from which it will be apparent that.",
        "since PROLOG does not recognise a lambda expression formed by juxtaposition.",
        "the initial pairing of operator and operand is achieved via a convenience predicate \"eval\" and subsquently evaluated.",
        "Whereas Janssen (C14], (15]) accomplishes reduction by a process of essentially localised tree transformations.",
        "the simplification algorithm of LILT takes advantage of PROLOG's list processing capabilities to undertake global list transformations whenever necessary.",
        "MDCO - LILT exemplifies the reorganised directed process approach discussed by Warren and Friedman (33].",
        "ie.",
        "LILT is (optionally) called after each parse.",
        "The present objective of display",
        "ables.",
        "Since LILT is concerned only with that subset of lamda calculus needed for representing Montague's language IL, a simpler scheme becomes possible.",
        "In LILT predicate variables are represented by PROLOG atoms while PROLOG variables are used directly for individual variables introduced by \"sense\" clauses (other than those anaphoric references already constrained to be in the range x0 .. xn).",
        "The essence of this scheme may be extracted from fig 6 which illustrates the clause correlating singular definite article with its sense.",
        "The top level translation clauses are illustrated in fig 7.",
        "These constitute a recursive procedure which generates reduced IL formulae with ing a conventional derivational history makes the immediate return of logical representations rather than syntactic sub trees inappropriate.",
        "Were all parsing procedures to call a mute version of translate locally, it is predicted that a semantic equivalence parse (op cit) would result."
      ]
    },
    {
      "heading": "8 References",
      "text": []
    }
  ]
}
