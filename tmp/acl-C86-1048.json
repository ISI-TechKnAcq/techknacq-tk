{
  "info": {
    "authors": [
      "K. Vijay-Shanker",
      "David Weir",
      "Aravind K. Joshi"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C86-1048",
    "title": "Tree Adjoining and Head Wrapping",
    "url": "https://aclweb.org/anthology/C86-1048",
    "year": 1986
  },
  "references": [
    "acl-P85-1011",
    "acl-P86-1011"
  ],
  "sections": [
    {
      "text": [
        "Philadelphia, PA 19104 Abstract In this paper we discuss the formal relationship between the classes of languages generated by Tree Adjoining Grammars and Head Grammars.",
        "In particular, we show that Head Languages are included in Tree Adjoining Languages and that Tree Adjoining Grammars are equivalent to a modification of Head Grammars called Modified Head Grammars.",
        "The inclusion of MHL in HL, and thus the equivalence of HG's and TAG's, in the most general case remains to be established."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "This paper discusses the relationship between Tree Adjoining Grammars (TAG's) and Head Grammars (HG's).",
        "TAG's and HG's, introduced to capture certain structural properties of natural languages, were developed independently.",
        "TAG's deal with a set of elementary trees which are composed by means of an operation called adjoining.",
        "HG's are like Context-free Grammars, except for the fact that besides concatenation of strings, string wrapping operations are permitted.",
        "TAG's were first introduced in 1975 by Joshi, Levy and.",
        "Takahashi [3].",
        "Joshi [2] investigated some formal and linguistic properties of TAG's with local constraints.",
        "The formulation of local constraints was then modified and formal properties were investigated by Vijay-Shanker and Joshi [9].",
        "The linguistic properties were studied in detail by Kroch and Joshi [5].",
        "HG's were first introduced by Pol-lard [6] in 1983 and their formal properties were investigated by Roach [7].",
        "It was observed that the two systems seemed to possess similar generative power and since they also appear to have the same closure properties [7,9] as well as similar parsing algorithms [6,9] a significant amount of indirect evidence existed to suggest that they were formally equivalent.",
        "In the present paper, we will attempt to provide a characterization of the formal relationship between HG's and TAG's.",
        "In [10] we consider various linguistic aspects of the relationship: in particular what might be referred to as the strong equivalence of the two formalisms.",
        "Vijay-Shanker and Joshi [9] provided a brief description of the intuition behind the inclusion of Tree Adjoining Lan-gages (TAL) in the class of languages generated by a variant of HG's called Modified Head Grammars (MHG's).",
        "In the present paper, we give a proof of this result as well as a proof for the inclusion of Modified Head Languages (MHL) in TAL: hence we show that MHG's and TAG's are equivalent.",
        "This result is presented in section 3.",
        "In section 2, we discuss the relationship between MHG's and HG's.",
        "t This work was partially supported by NSF grants MCS-82-19116-CER, MCS-82-07294 and DCR-84-10413.",
        "We are grateful-to Tony Kroch and Carl Pollard for valuable discussions."
      ]
    },
    {
      "heading": "1.1. Tree Adjoining Grammars",
      "text": [
        "Initial trees and auxiliary trees have the following form:",
        "Except for one node, which is called the foot node, all the nodes in the frontier of an auxiliary tree are labelled by terminal symbols.",
        "The foot node is labelled by the same nonterminal symbol as the root.",
        "All initial and auxiliary trees, referred to as elementary trees, have a height of at least one.",
        "We now define the adjoining operation.",
        "Let n be some node labelled X in a tree Let p be an auxiliary tree with root and foot labelled by X.",
        "The tree obtained by adjoining # at ri is given in figure 1.2. figure 1.2 The subtree under ?I is excised from y, the auxiliary tree is inserted in its place and the excised subtree is inserted at the foot of 0.",
        "As defined above it is possible to adjoin any auxiliary tree at a node as long as the label of the node was the same as that of the root and the foot of the auxiliary tree.",
        "How ever, in general, adjoining will be constrained as follows.",
        "Associated with each node is a selective adjoining (SA) constraint specifying that subset of the auxiliary tree which can be adjoined at this node.",
        "Trees can only be included in the SA constraint associated with a particular node if their root and foot are labelled with the same nonterminal that labels the node .There are two special cases: (a) the subset specified by SA is the entire set of auxiliary trees, in this",
        "case the entire set need not be explicitly listed; (b) the sub S V s 0 set specified is empty i.e., no adjoining is possible.",
        "We call 5 V 7 \\ this the null adjoining (NA) constraint.",
        "A node may be Q/ a 0 associated with a a so-called obligatory adjoining (OA) /IN 9/S1\\ constraint which can be used to ensure that an adjunction 3 1 h is obligatorily performed at a node.",
        "by 'ls,)2, Example 1.1 We now present an example TAG C, which Nc 1.",
        "1.2''-- b4fc illustrates the notation used to specify the constraints as 5 0 so sociated with a node.",
        "There is one initial tree a and two auxiliary trees 01 and /32: Having introduced SA and OA constraints, we must extend the definition of the adjunction operation.",
        "Suppose we adjoin an auxiliary tree /3 at a node ri of a tree y producing the tree 'y'.",
        "For those nodes in that do not correspond to nodes of /3, the constraints remain the same as those in 'y.",
        "The remaining nodes in -y' have the same constraints as those for the corresponding nodes of 13.",
        "For example, consider a sample derivations in the grammar G as given below in figure 1.4.",
        "We use an * to indicate the node at which adjunction is performed.",
        "We will now present an alternative (yet equivalent) definition of the adjoining operation.",
        "So far, our definition allowed us to adjoin only with auxiliary trees, and allowed adjunction only into sentential trees.",
        "This can be generalized to allow adjunctions of any tree derived from an auxiliary tree into any derived tree.",
        "Consider the derivation given in figure 1.4.",
        "Given this generalization of adjunction, we can also derive the same tree 12 by composing trees in the following sequence.",
        "The derived auxiliary tree ryi can be obtained by adjoining 02 in 01.",
        "'y can then be adjoined in Cm to give -4.",
        "Notice that trees derived from an auxiliary tree /3, will always have the property that their root and foot are labelled with the same nonterrninal as those of Viewing a derivation in this manner considerably simplifies several proofs of formal properties of TAG's [9].",
        "figure 1.5 We use the notation .0(1) to denote the set of trees derived from the elementary tree 'y using 0 or more adjunctions.",
        "The tree set T(G) of a TAG C is T(G) u„„ P(a).",
        "The string language L(G) generated by a TAG C is given by L(C) w is the frontier of some y in T(G) } Now we can see that the language L1, generated by the example grammar G, is L1= legbnfenh In> 01 It is useful to further generalize the notion of a derived tree to include trees derived from subtrees of elementary trees.",
        "If n is a node in some elementary tree, then D(9) represents the set of trees derived from the subtree rooted at ry.",
        "Nodes are represented using an extension of the tree addressing scheme of Corn [1].",
        "Each node in an elementary tree is given a unique name in the following manner: the pair ('y, (,} denotes the root of -y; if (1,1) is a node in ry,then ('y, j) represents the Ph daughter of this node."
      ]
    },
    {
      "heading": "1.2. Head Grammars",
      "text": [
        "Before giving the formal definition of Head Grammars, the notion of a headed string will be described.",
        "A headed string is a string of symbols containing one distinguished symbol referred to as the head of the string.",
        "Formally, this can be represented as a pair consisting of a string w and an integer that indicates the position of the head in the string.",
        "In this paper, we use one of two notations to denote this string: when we wish to explicitly mention the head we use the representation wiiitv2 where wiaw2 w; alternatively, we can simply denote the headed string by This allows us to denote the headed empty string as X.",
        "Definition 2.",
        "A Head Grammar, G, is given by a 4-tople (VN,VT,S,P).",
        "Productions in P are of the form: A f (ai,..., an) or A al where A E VN, cei either belongs to VN or is a headed string.",
        "f E Ui>1{LCi, LLi, LRi, Rei, RLi, RRi } We now define the operations LCi, LLi, and LRi for i c {1,2}.",
        "Definitions of the other operations can be found in [6] and are not given here, since Roach 171 has shown that there is a normal form for Head Grammars which only uses these operations.",
        "Both Pollard [6] and Roach [7] define these operations as partial functions.",
        "Pollard's definition of headed strings includes the headed empty string (A).",
        "However, mathematically, A does not have the same status as other headed strings: for example, LC1(A,TO is undefined.",
        "In general, the term f 417)1, .",
        "is undefined when TOT = X.",
        "This nonuniformity has led to difficulties in proving certain formal results about Head Grammars [7], and has caused problems in showing the equivalence of MHG's and HG's (see section 2).",
        "The language generated by a HG G is defined as follows: L(G) { w I S } Example 1.2 We now present a sample Head Grammar for the language L1 = {angbn f cnh I n > 0 }"
      ]
    },
    {
      "heading": "1.3. Modified Head Grammars",
      "text": [
        "We find it convenient to consider a formalism that closely resembles HG's: referred to as Modified Head Grammars (MHG's).",
        "Instead of headed strings, MHG's have split strings.",
        "A split string has a distinguished position between two strings in 17r, about which it may be split.",
        "We will denote a split string as w1tw2 where w1w2 E VT. Notice that we can represent the split empty string as At A, though this will be denoted A whenever the context makes it obvious that we are referring to a split string.",
        "In MHG's, there are 3 operations on split strings: W, C1, and C2, defined as follows:",
        "The operations Cl and C2 correspond to the operations LC1 and LC2 in HG's.",
        "The operation W has been defined such that the split point of its second argument becomes the split point of the string resulting from application of the operation (like the HG operations LL2 and LR2).",
        "Since the split point is not a symbol but a position between strings, separate operations corresponding to LL2 and LR2 are not needed.",
        "In addition, unlike HG's, which distinguish the two wrapping operations LL1 and LL2, W suffices as a substitute for both of these operations.",
        "Suppose Y *> w11w2 and Z * nitu2 and we want X to derive",
        "We will defer the discussion of both the formal and linguistic relationship between HG's and MHG's until section 2.",
        "It is worth noting at this point that the definition of MHG's given here coincides with the definition of HG's given in Rounds [8].",
        "As we shall see in section 2, these formalisms are very closely related."
      ]
    },
    {
      "heading": "1.4. Tree Adjunction and Wrapping",
      "text": [
        "Before showing the formal equivalence of MHG's and TAG's, it is instructive to consider the relationship between the wrapping operation W of MHG's and the adjoining operation of TAG's.",
        "Suppose that we have the production p X W (Y, Z) in a MHG G, and that we have two derivations from the nonterminals Y and Z deriving the headed strings wit w2 and vi1v2 respectively.",
        "Given the production p, we can derive the split string won v2w2 from X.",
        "Suppose there is a derived auxiliary tree 'y corresponding to the above derivation of w14w2, from Y where the foot node appears at the split point, as shown in figure 1.6 below.",
        "Also assume that there is a node n dominating a subtree that corresponds to a derivation of v11v2 from Z where, as before, we assume that the foot node appears at the split point.",
        "Consider the tree resulting from the adjunction of y at the node also shown in figure 1.6.",
        "The resulting tree can be thought of as corresponding to the derivation of the split string wivitv2w2 from X. figure 1.6 This example illustrates the basic intuition behind the constructions involved in the following proofs showing the equivalence of MHG's and TAG's.",
        "2.",
        "Head Grammars and Modified Head Grammars",
        "In this section, we shall discuss the relationship between MHG's and ITC's.",
        "First we present the outline of a construction showing that for every HG G there is an equivalent MUG G'.",
        "We then briefly discuss the linguistic relationship between MHG's and HG's.",
        "Suppose X * wiiiw2.",
        "This headed string can be split in two ways: into the substrings w1 and hw2; or wih and w2.",
        "This depends on whether X is used in a left or right wrapping operation.",
        "Since in MHG's we can only split a string in one place, we use two nonterminals, XI and Xr deriving wiltiw2 and wit hw2 respectively.",
        "Thus, for example, the production Z W (Xi ,Y) can be used in place of Z LL2(X,Y).",
        "A further complication arises when a headed string is split first to the right of its head and then the resulting string is split to the left of the same head.",
        "The problem is resolved by introducing nonterminals Xth, that derive split strings of the form w1tw2 whenever X derives w1rtw2 in the HG.",
        "We can reintroduce the missing head with the following productions:",
        "We are unable to prove the inclusion of MHL's in HL's.",
        "The problems faced when attempting to find such a proof are a result of the operations in HG's not being total functions.",
        "For example, Cl(X,i – ) is defined in MIIG's, whereas LC1(X,t7) is undefined in the HG's framework.",
        "We have not found any way of getting around this technical problem in a systematic manner.",
        "All TAG's considered by the authors so far have an equivalent HG.",
        "We feel that the problem of the empty headed string in the FIG formalism does not result from an important difference between the formalisms.",
        "In the following discussion, we propose that MI-IG's can be given a linguistic interpretation if we retain the notion of a head terminal in a split string.",
        "The split point should be viewed as determining the position of the head.",
        "As far as the authors are aware, Head Grammars for natural languages use only one kind of wrapping operation: either only the left wrapping operations LLi, or only the right wrapping operations LRI.",
        "Thus, any headed string can be split on only one side of the head.",
        "For example, if wihw2 is a headed string, and only the left wrapping operations were used, then the headed string can only be split as w1 1a and w2.",
        "For any HG using only left wrapping operations there exists an equivalent MUG such that split strings will have their split points immediately to the right of the actual head.",
        "However, obviously not every WIG can be given a linguistic interpretation in this way.",
        "3.",
        "Equivalence of ME[G's and TAG's We will now show that the class MITE, is equal to the class TAL.",
        "The complete proofs for the results presented here are given in [4].",
        "3.1.",
        "Inclusion of TAL in MI-IL Based on the earlier observation concerning the similarity between the wrapping and adjoining operations, we shall now present a scheme for transforming a given TAG C = (VN,VT,S,1, A) to an equivalent MUG G' = (ViC,VT, S,P).",
        "In this section, we have generalized the concatentation operations of MIIG's to be of the form Cj for j > 1.",
        "It is obvious that these operations can always be simulated using just Cl and C2.",
        "We shall first describe the algorithm convert informally.",
        "If n is a node of some elementary tree 1, applying convert to 77 returns a sequence of productions in the MUG formal-inn capturing the structure of the subtree of y rooted at ,j.",
        "The wrapping operation is used to simulate the effect of adjunction; the concatenation operations Ci concatentate the strings derivable from the daughters of a node.",
        "The choice of i depends on which child is the ancestor of the foot node.",
        "The exact structure 'of a tree can be captured by using nonterminals that are named by the addresses of nodes of elementary trees rather than the nonterminals labelling the nodes.",
        "The main idea of our scheme is as follows.",
        "Let (p,i) be the address of a node in an auxiliary tree /3, and y belongs to D ((/3,i)) with a frontier tu1Xw2.",
        "We have a nonterminal corresponding to this node (denoted by [/3, i]) which derives the split string w11iv2.",
        "In particular, when (/3, i) is the root of /3 (i.e., i e), then the nonterminal [/3, el should derive the split strings w1la2 whenever there is a tree in D(Q) with frontier w1Xw2.",
        "That is, the split point appears in a position corresponding to the foot node.",
        "Thus, the wrapping operation W can be used to simulate the effect of adjoining in the following manner.",
        "If (-y, i) is a node at which 13 is adjoinable, we have a production corresponding to adjunction of 13 at KO.",
        "where [y, i] derives strings derivable from the children of (y, i).",
        "We also have the rule [-y, i] [y, i] for the case when no adjunction takes place at (y, i).",
        "Since [1, i] is supposed to derive strings derivable by the concatenation of the frontiers of subtrees dominated by the children of (y, i), we have the production,",
        "where (-1,i • 1), , (-y, i • j),..., (-y, i • k) correspond to the k children of (-y,i) and where the jth child is the ancestor of the foot node.",
        "The operation Cj is used so that the split point appears in the same position as the foot node.",
        "By convention, we let j be 1. when (-y, i) is not the ancestor of the foot node.",
        "We are now in a position to define the conversion process.",
        "The algorithm is as follows: for each initial tree a, let S [a, e] E P. for each elementary tree -y, call convert ((-y, e)) where the procedure convert is as defined below.",
        "step 6: add [y, i[ --> Cj(h],i • 11, , [-y,i • k]) where Ph child dominates foot node; if (1,i) is not ancestor of foot node then step 7: add [y, i] C1([7,i • 1],..., • k]) for 1 < j < k do convert((-y,i • j)).",
        "We prove the inclusion of L(G) in L(G'), by induction on the height of the trees derived from all subtrees of elementary trees, where the inductive hypothesis states: For all elementary trees 1, and addresses i in 1, if there is a tree -yi in D((y,i)) of height less than k, and the frontier of 'Y' = w1Xw2 or wiwz, then Vy, It will be easy to show the inclusion of L(G) in L(G') by induction, considering steps 4, 5, 6 and 7.",
        "The base cases correspond to steps 1, 2 and 3.",
        "We show the inclusion in the other direction by induction on the length of derivation of split strings in G'.",
        "The induction hypothesis is given by: if [-y, = w11 w2 in k steps, then there is a -y' E D((y,i)) such that the frontier of -y' is w1Xw2 or wjw2, depending on whether the foot node of -y, labelled by X if it exists, is a descendant of (1,i,) or not."
      ]
    },
    {
      "heading": "3.2. Inclusion of MHL in TAL",
      "text": [
        "When we convert a TAG into a MHG, each elementary tree generates a set of productions.",
        "The sets generated by any two distinct elementary trees are disjoint and, furthermore, have a constrained form encoding the hierarchical structure of the tree.",
        "The task of converting a MIIG to a TAG cannot simply involve the inversion of this construction since it is not in general possible to find groupings of productions in a MHG that have the required structure.",
        "The approach used to convert MHG's to TAG's is based on satisfying the following requirement: for each derivation in the MUG there must be a derived tree in the TAG for the same string, in which the foot is positioned at the split point: i.e., X 24- wii tv2 in MUG if and only if there is a derived auxiliary tree y having no OA constraints, with root labelled X and frontier w1Xw2.",
        "Suppose we had derived trees corresponding to derivations for B and C (as shown in the center of figure 3.1) that satisfied the above requirement.",
        "We can capture the effect of each MIIG production directly by associating exactly one elementary tree with each production.",
        "For example, figure 3.1 illustrates trees associated with the productions A C1(B,C) (on the left) and A W(B,C) (on the right).",
        "We position the foot node in the elementary trees to ensure that the split point and foot node appear at the same position.",
        "When the tree corresponding to wrapping is used the string derived from B is wrapped around the string derived from C. The foot of the resulting tree will appear immediately under the foot of the derived tree for C. figure 3.1 The TAG that we produce could be viewed as simulating rewriting of nonterminals.",
        "Each rewriting corresponds to one use of the adjoining operation.",
        "The NA constraints at the root and the foot node of each auxiliary tree ensure that each occurence of a nonterminal is rewritten only once.",
        "The OA constraints are used to ensure that every nonterminal introduced is rewritten.",
        "We now present the complete construction.",
        "Without loss of generality, we will assume a normal form that uses productions of the following form: A f (B,C) or A to or A where A, B, C E FN, a E VT U {A} and f E { CI, C2,TV }.",
        "The conversion proceeds as follows:",
        "1.",
        "If A --> Ta e P or A at E P then include 01 or 132 in A respectively.",
        "We prove that L(G) C L(G') by induction on the length of the MIIG derivation.",
        "We show that if X wltw2 then there is a derived auxiliary tree having no OA constraints, with root labelled X and frontier w1Xw2.",
        "We prove that L(G') C L(G) by induction on the height of the TAG derivation tree.",
        "We show that if y E D (ii), has no OA constraints, and has frontier w1Xw2 then X *> wCw2.",
        "While straightforward, the proof given above does not capture the linguistic motivation underlying TAG's.",
        "The auxiliary trees directly reflect the use of the concatenation and the wrapping operations.",
        "It is also interesting to note that a consequence of the equivalence of MIIG's and TAG's and the construction used in proving the inclusion of MHL in TAL is that we have the following normal form for TAG's.",
        "For any TAG there is an equivalent TAG with exactly one initial tree and auxiliary trees which are of five possible forms shown above."
      ]
    },
    {
      "heading": "4. Conclusion",
      "text": [
        "In this paper we have shown the equivalence of TAL and MHL.",
        "Since we have also established the inclusion of HL in MHL we have shown that HLs are included in TALs.",
        "The inclusion of MHL in IIL, and thus the equivalence of HG's and TAG's, in the most general case remains to be established We briefly discuss the relationship between MHG's and HG's and argue that it is close, both linguistically and formally.",
        "Figure 4.1 provides a summary of these results."
      ]
    }
  ]
}
