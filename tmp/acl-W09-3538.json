{
  "info": {
    "authors": [
      "Jana Kravalova",
      "Zdeněk Žabokrtský"
    ],
    "book": "Proceedings of the 2009 Named Entities Workshop: Shared Task on Transliteration (NEWS 2009)",
    "id": "acl-W09-3538",
    "title": "Czech Named Entity Corpus and SVM-based Recognizer",
    "url": "https://aclweb.org/anthology/W09-3538",
    "year": 2009
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Jana Kravalova Zdenek Zabokrtsky",
        "Charles University in Prague Charles University in Prague",
        "Institute of Formal and Applied Linguistics Institute of Formal and Applied Linguistics",
        "kravalova@ufal.mff.cuni.cz zabokrtsky@ufal.mff.cuni.cz",
        "This paper deals with recognition of named entities in Czech texts.",
        "We present a recently released corpus of Czech sentences with manually annotated named entities, in which a rich two-level classification scheme was used.",
        "There are around 6000 sentences in the corpus with roughly 33000 marked named entity instances.",
        "We use the data for training and evaluating a named entity recognizer based on Support Vector Machine classification technique.",
        "The presented recognizer outperforms the results previously reported for NE recognition in Czech."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "After the series of Message Understanding Conferences (MUC; (Grishman and Sundheim, 1996)), processing of named entities (NEs) became a well established discipline within the NLP domain, usually motivated by the needs of Information Extraction, Question Answering, or Machine Translation.",
        "For English, one can find literature about attempts at rule-based solutions for the NE task as well as machine-learning approaches, be they dependent on the existence of labeled data (such as CoNLL-2003 shared task data), unsupervised (using redundancy in NE expressions and their contexts, see e.g. (Collins and Singer, 1999)) or a combination of both (such as (Talukdar et al., 2006), in which labeled data are used as a source of seed for an unsupervised procedure exploiting huge unlabeled data).",
        "A survey of research on named entity recognition is available in (Ekbal and Bandyopadhyay, 2008).",
        "There has been considerably less research done in the NE field in Czech, as discussed in (Sevcïkova et al., 2007b).",
        "Therefore we focus on it in this paper, which is structured as follows.",
        "In",
        "Section 2 we present a recently released corpus of Czech sentences with manually annotated instances of named entities, in which a rich classification scheme is used.",
        "In Section 3 we describe a new NE recognizer developed for Czech, based on the Support Vector Machine (SVM) classification technique.",
        "Evaluation of such approach is presented in Section 4.",
        "The summary is given in Section 5."
      ]
    },
    {
      "heading": "2. Manually Annotated Corpus",
      "text": [
        "We have randomly selected 6000 sentences from the Czech National Corpus from the result of the query ([word=\".",
        "*[a-z0-9]\"] [word=\"[A-Z].*\"]).",
        "This query makes the relative frequency of NEs in the selection higher than the corpus average, which makes the subsequent manual annotation much more effective, even if it may slightly bias the distribution of NE types and their observed density.",
        "There is no generally accepted typology of Named Entities.",
        "One can see two trends: from the viewpoint of unsupervised learning, it is advantageous to have just a few coarse-grained categories (cf. the NE classification developed for MUC conferences or the classification proposed in (Collins and Singer, 1999), where only persons, locations, and organizations were distinguished), whereas those interested in semantically oriented applications prefer more informative (finer-grained) categories (e.g. (Fleischman and Hovy, 2002) with",
        "Types of NE a - Numbers in addresses c - Bibliographic items g - Geographical names ah - street numbers az - zip codes at - phone/fax numbers cb - volume numbers cp - page numbers cs - article titles gc - states cr - legisl.",
        "act numbers gl - nature areas / objects gq - urban parts gp - planets, cosmic objects gr - territorial names gt - continents gu - cities/towns g_ - underspecified ia - conferences/contests ic - cult./educ./scient.",
        "inst.",
        "if - companies, concerns...",
        "i_ - underspecified io - government/political inst.",
        "mi - internet links mr - radio stations mn - periodical mt - TV stations ni - itemizer nm - in formula np - part of personal name nq - town quarter nw - flat size oc - chemical oe - measure units om - currency units",
        "Figure 1: Two-level hierarchical classification of NEs used in the corpus.",
        "Note that the (detailed) NE types are divided into two columns just because of the space reasons here.",
        "nr - ratio",
        "r",
        "___<H",
        "n_ - underspecified",
        "oa - cultural artifacts (books, movies) I ---",
        "r",
        "--fe-",
        "op - products",
        "___^",
        "or - directives, norms",
        "ci - underspecified",
        "pb - animal names |",
        "pc - inhabitant names",
        "pd - (academic) titles",
        "J--»»j pf - first names",
        "eight types of person labels, or Sekine's Extended NE Hierarchy, cf. (Sekine, 2003)).",
        "In our corpus, we use a two-level NE classification depicted in Figure 1.",
        "The first level corresponds to rough categories (called NE supertypes) such as person names, geographical names etc.",
        "The second level provides a more detailed classification: e.g. within the supertype of geographical names, the NE types of names of cities/towns, names of states, names of rivers/seas/lakes etc.",
        "are distinguished.",
        "If more robust processing is necessary, only the first level (NE supertypes) can be used, while the second level (NE types) comes into play when more subtle information is needed.",
        "Each NE type is encoded by a unique two-character tag (e.g., gu for names of cities/towns, gc for names of states; a special tag, such as g_, makes it possible to leave the NE type underspec-ified).",
        "Besides the terms of NE type and supertype, we use also the term NE instance, which stands for a continuous subsequence of tokens expressing the entity in a given text.",
        "In the simple plain-text format, which we use for manual annotations, the NE instances are marked as follows: the word or the span of words belonging to the NE is delimited by symbols < and >, with the former one immediately followed by the NE type tag (e.g. <pf John> loves <pf Mary>).",
        "The annotation scheme allows for the embedding of NE instances.",
        "There are two types of embedding.",
        "In the first case, the NE of a certain type can be embedded in another NE (e.g., the river name can be part of a name of a city as in <gu Usiïnad <gh Labem>>).",
        "In the second case, two or more NEs are parts of a (so-called) container NE (e.g., two NEs, a first name and a surname, form together a person name container NE such as in <P<pf Paul> <ps Newman>>).",
        "The container NEs are marked with a capital one-letter tag: P for (complex) person names, T for temporal expressions, A for addresses, and C for bibliographic items.",
        "A more detailed description of the NE classification can be found in (Sevcïkova et al., 2007b).",
        "After collecting all the sentences annotated by the annotators, it was necessary to clean the data in order to improve the data quality.",
        "For this purpose, a set of tests was implemented.",
        "The tests revealed wrong or \"suspicious\" spots in the data (based e.g. on the assumption that the same lemma should manifest an entity of the same type in most its occurrences), which were manually checked and corrected if necessary.",
        "Some noisy sentences caused e.g. by wrong sentence segmentation in the original resource were deleted; the final size of the corpus is 5870 sentences.",
        "The sentences have been enriched with morphological tags and lemmas using Jan HajiCs tagger shipped with Prague Dependency Treebank 2.0 (Hajic et al., 2006) integrated into the TectoMT environment (Zabokrtsky et al., 2008).",
        "Motivation for this step was twofold",
        "• Czech is a morphologically rich language, and named entities might be subject to paradigms with rich inflection too.",
        "For example, male first name Tomds (Thomas) migh appear also in one of the following forms: Tomdse, Tomdsovi, Tomdsi, Tomdsem, Tomdsove, Tomdsum ... (according to grammatical case and number), which would make the training data without lemmatization much sparser.",
        "• Additional features (useful for SVM as well as for any other Machine Learning approach) can be mined from the lemma and tag sequences, as shown in Section 3.2.",
        "Manually annotated and cleaned 6000 sentences with roughly 33000 named entities were released as Czech Named Entity Corpus 1.0.",
        "The corpus consists of manually annotated sentences and morphological analysis in several formats: a simple plain text format, a simple xml format, a more complex xml format based on the Prague Markup Language (Pajas and Stepanek, 2006) and containing also the above mentioned morphological analysis, and the html format with visually highlighted NE instances.",
        "For the purposes of supervised machine learning, division of data into training, development and evaluation subset is provided in the corpus.",
        "The division into training, development and evaluation subsets was made by random division ofsen-tences into three sets, in proportion 80% (training), 10% (development) and 10% (evaluation), see Table 1.",
        "Other basic quantitative properties are summarized in Table 2 and Table 3.",
        "The resulting data collection, called Czech Named Entity Corpus 1.0, is now publicly available on the Internet at http://ufdl.mjf.cuni.cz/tectomt.",
        "Table 1: Division of the annotated corpus into training, development test, and evaluation test sets."
      ]
    },
    {
      "heading": "3. SVM-based Recognizer",
      "text": [
        "In this section, we formulate named entity recognition as a classification problem.",
        "The task of named entity recognition as a whole includes several problems to be solved:",
        "• detecting \"basic\" one-word, two-word and multiword named entities,",
        "• detecting complex entities containing other entities (e.g. an institution name containing a personal name).",
        "Furthermore, one can have different requirements on what a correctly recognized named entity is (and train a separate recognizer for each case):",
        "• an entity whose span and type are correctly recognized,",
        "• an entity whose span is correctly recognized (without regard to its type).",
        "Therefore, we subdivide the classification problem into a few subproblems.",
        "Firstly, we independently evaluate the recognition system for one-word named entities, for two-word named entities and for multiword named entities.",
        "For each of these three problems, we define three tasks, ordered from the easiest to the most difficult:",
        "• Named entity spdn recognition - all words of named entity must be found but the type is not relevant.",
        "For one-word entities, this reduces to 0/1 classification problem, that is, each word is either marked as named entity (1 ) or as regular word (0).",
        "For two-word entities, this 0/1 decision is made for each couple of subsequent words (bigram) in the sentence.",
        "• Named entity supertype recognition - all words of named entity must be found and the supertype must be correct.",
        "This is a multi-class classification problem, where classes are named entity classes of the first level in hierarchy (p, g, i, ...) plus one class for regular words.",
        "NEtype",
        "#Occurrences",
        "Proportion",
        "4040",
        "12.03%",
        "pf",
        "3072",
        "9.15%",
        "P",
        "2722",
        "8.11%",
        "2685",
        "8.00%",
        "2040",
        "6.07%",
        "oa",
        "1695",
        "5.05%",
        "ic",
        "1410",
        "4.20%",
        "ty",
        "1325",
        "3.95%",
        "th",
        "1325",
        "3.95%",
        "s",
        "1285",
        "3.83%",
        "gc",
        "1107",
        "3.30%",
        "if",
        "834",
        "2.48%",
        "io",
        "830",
        "2.47%",
        "tm",
        "559",
        "1.66%",
        "n_",
        "512",
        "1.52%",
        "f",
        "506",
        "1.51%",
        "Set",
        "#Sentences",
        "#Words",
        "#NE instances",
        "train",
        "4696",
        "119921",
        "26491",
        "dtest",
        "587",
        "14982",
        "3476",
        "etest",
        "587",
        "15119",
        "3615",
        "total",
        "5870",
        "150022",
        "33582",
        "Lenght",
        "#Occurrences",
        "Proportion",
        "one-word",
        "23G57",
        "68.66%",
        "two-word",
        "6885",
        "2G.5G%",
        "three-word",
        "l96l",
        "5.84%",
        "longer",
        "l679",
        "5.GG%",
        "total",
        "33582",
        "100.00%",
        "• Named entity type recognition - all words of named entity must be found and the type must be correct.",
        "In our solution, a separate SVM classifier is built for one-word named entities, two-word named entities and three-word named entities.",
        "Then, as we proceed through the text, we apply the classifier on each \"window\" or \"n-gram\" of words - one-word, two-word and three-word, classifying the n-gram with the corresponding SVM classifier.",
        "We deliberately omit named entities containing four and more words, as they represent only a small portion of the instances (5%).",
        "Classification features which were used by the SVM classifier(s), are as follows:",
        "• morphologicdl fedtures - part of speech, gender, case and number,",
        "• orthogrdphic fedtures - boolean features such as capital letter at the beginning of the word or regular expression for time and year",
        "• lists of known named entities - boolean features describing whether the word is listed in lists of Czech most used names and surnames, Czech cities, countries or famous institutions,",
        "• lemmd - some lemmas contain shortcuts describing the property of lemma, for example \"Prahou\" (Prague, 7th case) would lemma-tize to \"Praha_;G\" with mark \"_;G\" hinting that \"Praha\" is a geographical name,",
        "• context fedtures - similar features for preceding and following words, that is, part of speech, gender, case and number for the preceding and following word, orthographic features, membership in a list of known entities and lemma hints for the preceding and following word.",
        "All classification features were transformed into binary (boolean) features, resulting in roughly 200-dimensional binary feature space.",
        "For the classification task, we decided to use Support Vector Machine classification method.",
        "First, this solution has been repeatedly shown to give better scores in NE recognition in comparison to other Machine Learning methods, see e.g. (Isozaki and Kazawa, 2002) and (Ekbal and Bandyopad-hyay, 2008).",
        "Second, in our preliminary experiments on our data it outperformed all other solutions too (based on naive Bayes, k nearest neighbors, and decision trees).",
        "As an SVM classifier, we used its CPAN Perl implementation Algorithm-SVM.",
        "Technically, the NE recognizer is implemented as a Perl module included into TectoMT, which is a modular open source software framework for implementing NLP applications, (Zabokrtsky et al.,"
      ]
    },
    {
      "heading": "4. Evaluation",
      "text": [
        "We use the following standard quantities for evaluating performance of the presented classifier:",
        "• precision - the number of correctly predicted NEs divided by the number of all predicted",
        "• recall - the number of correctly predicted NEs divided by the number of all NEs in the data,",
        "• f-score - harmonic mean of precision and recall.",
        "In our opinion, simpler quantities such as accuracy (the percentage of correctly marked words) are not suitable for this task, since the number of NE instances to be found is not known in advance.",
        "The results for SVM classifier when applied on the evaluation test set of the corpus are summarized in Table 4.",
        "The table evaluates all subtasks as defined in Section 3.1, that is, for combination",
        "TectoMT.",
        "Table 4: Summary of the SVM classifier performance (P=precision, R=recall, F=f-measure).",
        "Recognition of NEs of different length is evaluated separately.",
        "The other dimension corresponds to the gradually released correctness requirements.",
        "of subtask defined for all entities, one-word entities and two-word entities and with gradually released requirements for correctness: correct span and correct (detailed) type, correct span and correct supertype, correct span only.",
        "The most common SVM classification errors are shown in Table 5.",
        "As we can see in Table 4, the classifier recognizes span and type of all named entities in text with f-measure = 0.68.",
        "This improves the results reported on this data in (Sev&kova et al., 2007a), which was 0.62.",
        "For one-word named entities, the improvement is also noticeable, from 0.70 to 0.75.",
        "In our opinion, the improvement is caused by better feature selection on one hand.",
        "We do not use as many classification features as the authors of (Sevakova et al., 2007a), instead we made a preliminary manual selection of features we considered to be helpful.",
        "For example, we do not use the whole variety of 15 Czech morphological categories for every word in context, but we use only part of speech, gender, case and number.",
        "Also, we avoided using features based on storing words which occurred in training data, such as boolean feature, which is true for words, which appeared in training data as named entity.",
        "We tried employing such features, but in our opinion, they result in sparsity in space searched by SVM.",
        "It would be highly difficult to correctly compare the achieved results with results reported on other languages (such as f-score 88.76% achieved for English in (Zhang and Johnson, 2003)), especially because of different task granularity (and obviously highly different baselines).",
        "Furthermore, in Czech the task is more complicated due to inflection: many named entities can appear in several many different forms.",
        "For example, the Czech capital city \"Praha\" appeared in these forms in training data: Prdhd, Prdhy, Prdhou, Prdhu.",
        "Table 5 describes the most common errors made by classifier.",
        "Clearly, the most problematic classes are objects (oa) and institutions (ic, if, io), which mostly remain unrecognized.",
        "The problem is that, cultural artifacts like books or movies, or institutions, tend to have quite new and unusual names, as opposed to personal names, for which fairly limited amount of choice exists, and cities, which do not change and can be listed easily.",
        "All NEs P R F",
        "One-word NEs P R F",
        "Two-word NEs P R F",
        "span+type",
        "span+supertype",
        "span",
        "0.75 0.62 0.68 0.75 0.67 0.71 0.84 0.70 0.76",
        "0.80 0.71 0.75 0.87 0.78 0.82 0.89 0.80 0.84",
        "0.68 0.62 0.65 0.71 0.64 0.67 0.76 0.69 0.72",
        "true type",
        "predicted type",
        "true type description",
        "predicted type description",
        "errors",
        "oa",
        "x",
        "cultural artifacts (books, movies)",
        "no entity",
        "184",
        "ic",
        "x",
        "cult./educ./scient.",
        "inst.",
        "no entity",
        "74",
        "x",
        "no entity",
        "cities/towns",
        "71",
        "x",
        "P",
        "no entity",
        "personal name container",
        "66",
        "if",
        "x",
        "companies, concerns ...",
        "no entity",
        "60",
        "x",
        "ic",
        "no entity",
        "cult./educ./scient.",
        "inst.",
        "59",
        "io",
        "x",
        "government/political inst.",
        "no entity",
        "57",
        "x",
        "ps",
        "no entity",
        "surnames",
        "47",
        "P",
        "x",
        "personal name container",
        "no entity",
        "43",
        "ps",
        "x",
        "surnames",
        "no entity",
        "41",
        "gu",
        "x",
        "cities/towns",
        "no entity",
        "37",
        "x",
        "td",
        "no entity",
        "days",
        "35",
        "x",
        "products",
        "no entity",
        "33",
        "x",
        "pf",
        "no entity",
        "first names",
        "31",
        "T",
        "x",
        "time container",
        "no entity",
        "30",
        "Institutions also tend to have long and complicated names, for which it is especially difficult to find the ending frontier.",
        "We believe that dependency syntax analysis (such as dependency trees resulting from the maximum spanning tree parser, (McDonald et al., 2005)) might provide some clues here.",
        "By determining the head of the clause, e.g. thedtre, university, gdllery and it's dependants, we might get some hints about which words are part of the name and which are not.",
        "Yet another improvement in overall performance could be achieved by incorporating hyper-nym discovery (making use e.g. of Wikipedia) as proposed in (Kliegr et al., 2008)."
      ]
    },
    {
      "heading": "5. Conclusions",
      "text": [
        "We have presented a new recently published corpus of Czech sentences with manually annotated named entities with fine-grained two-level annotation.",
        "We used the data for training and evaluating a named entity recognizer based on Support Vector Machines classification technique.",
        "Our classifier reached f-measure 0.68 in recognizing and classifying Czech named entities into 62 categories and thus outperformed the results previously reported for NE recognition in Czech in (Sev&kova et al., 2007a).",
        "We intend to further improve our classifier, especially recognition of institution and object names, by employing dependency syntax features.",
        "Another improvement is hoped to be achieved using WWW-based ontologies."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "This research was supported by MSM 0021620838, GAAV CR 1ET101120503, and MSMTCR LC536."
      ]
    }
  ]
}
