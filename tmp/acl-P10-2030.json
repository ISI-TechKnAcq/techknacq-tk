{
  "info": {
    "authors": [
      "Hirotoshi Taira",
      "Sanae Fujita",
      "Masaaki Nagata"
    ],
    "book": "Proceedings of the ACL 2010 Conference Short Papers",
    "id": "acl-P10-2030",
    "title": "Predicate Argument Structure Analysis Using Transformation Based Learning",
    "url": "https://aclweb.org/anthology/P10-2030",
    "year": 2010
  },
  "references": [
    "acl-C04-1100",
    "acl-D07-1002",
    "acl-J05-1004",
    "acl-J08-2004",
    "acl-J95-4004",
    "acl-N04-1030",
    "acl-W02-2016",
    "acl-W04-2705",
    "acl-W07-0208",
    "acl-W07-1522",
    "acl-W94-0111",
    "acl-W95-0107"
  ],
  "sections": [
    {
      "text": [
        "Predicate Argument Structure Analysis using Transformation-based",
        "Learning",
        "Hirotoshi Taira Sanae Fujita Masaaki Nagata",
        "Maintaining high annotation consistency in large corpora is crucial for statistical learning; however, such work is hard, especially for tasks containing semantic elements.",
        "This paper describes predicate argument structure analysis using transformation-based learning.",
        "An advantage of transformation-based learning is the readability of learned rules.",
        "A disadvantage is that the rule extraction procedure is time-consuming.",
        "We present incremental-based, transformation-based learning for semantic processing tasks.",
        "As an example, we deal with Japanese predicate argument analysis and show some tendencies of annotators for constructing a corpus with our method."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Automatic predicate argument structure analysis (PAS) provides information of \"who did what to whom\" and is an important base tool for such various text processing tasks as machine translation information extraction (Hirschman et al., 1999), question answering (Narayanan and Harabagiu, 2004; Shen and Lapata, 2007), and summarization (Melli et al., 2005).",
        "Most recent approaches to predicate argument structure analysis are statistical machine learning methods such as support vector machines (SVMs)(Pradhan et al., 2004).",
        "For predicate argument structure analysis, we have the following representative large corpora: FrameNet (Fillmore et al., 2001), PropBank (Palmer et al., 2005), and NomBank (Meyers et al., 2004) in English, the Chinese PropBank (Xue, 2008) in Chinese, the GDA Corpus (Hashida, 2005), Kyoto Text Corpus Ver.4.0 (Kawahara et al., 2002), and the NAIST Text Corpus (Iida et al., 2007) in Japanese.",
        "The construction of such large corpora is strenuous and time-consuming.",
        "Additionally, maintaining high annotation consistency in such corpora is crucial for statistical learning; however, such work is hard, especially for tasks containing semantic elements.",
        "For example, in Japanese corpora, distinguishing true dative (or indirect object) arguments from time-type argument is difficult because the arguments of both types are often accompanied with the 'ni' case marker.",
        "A problem with such statistical learners as SVM is the lack of interpretability; if accuracy is low, we cannot identify the problems in the annotations.",
        "We are focusing on transformation-based learning (TBL).",
        "An advantage for such learning methods is that we can easily interpret the learned model.",
        "The tasks in most previous research are such simple tagging tasks as part-of-speech tagging, insertion and deletion of parentheses in syntactic parsing, and chunking (Brill, 1995; Brill, 1993; Ramshaw and Marcus, 1995).",
        "Here we experiment with a complex task: Japanese PASs.",
        "TBL can be slow, so we proposed an incremental training method to speed up the training.",
        "We experimented with a Japanese PAS corpus with a graph-based TBL.",
        "From the experiments, we interrelated the annotation tendency on the dataset.",
        "The rest of this paper is organized as follows.",
        "Section 2 describes Japanese predicate structure, our graph expression of it, and our improved method.",
        "The results of experiments using the NAIST Text Corpus, which is our target corpus, are reported in Section 3, and our conclusion is provided in Section 4."
      ]
    },
    {
      "heading": "2. Predicate argument structure and",
      "text": [
        "graph transformation learning",
        "First, we illustrate the structure of a Japanese sentence in Fig. 1.",
        "In Japanese, we can divide a sentence into bunsetsu phrases (BP).",
        "A BP usually consists of one or more content words and zero,",
        "Figure 1 : Graph expression for PAS one, or more than one functional words.",
        "Syntactic dependency between bunsetsu phrases can be defined.",
        "Japanese dependency parsers such as Cabocha (Kudo and Matsumoto, 2002) can extract BPs and their dependencies with about 90% accuracy.",
        "Since predicates and arguments in Japanese are mainly annotated on the head content word in each BP, we can deal with BPs as candidates of predicates or arguments.",
        "In our experiments, we mapped each BP to an argument candidate node of graphs.",
        "We also mapped each predicate to a predicate node.",
        "Each predicate-argument relation is identified by an edge between a predicate and an argument, and the argument type is mapped to the edge label.",
        "In our experiments below, we defined five argument types: nominative (subjective), accusative (direct objective), dative (indirect objective), time, and location.",
        "We use five transformation types: a) add or b) delete a predicate node, c) add or d) delete an edge between an predicate and an argument node, e) change a label (= an argument type) to another label (Fig.",
        "2).",
        "We explain the existence of an edge between a predicate and an argument labeled t candidate node as that the predicate and the argument have a t type relationship.",
        "Transformation-based learning was proposed by (Brill, 1995).",
        "Below we explain our learning strategy when we directly adapt the learning method to our graph expression of PASs.",
        "First, unstructured texts from the training data are inputted.",
        "After pre-processing, each text is mapped to an initial graph.",
        "In our experiments, the initial graph has argument candidate nodes with corresponding BPs and no predicate nodes or edges.",
        "Next, com-",
        "ARG ) e) \"Change Edge Label' Q ARG",
        "sNorn.",
        "-* ^---- – – <J\\cc.",
        "paring the current graphs with the gold standard graph structure in the training data, we find the different statuses of the nodes and edges among the graphs.",
        "We extract such transformation rule candidates as 'add node' and 'change edge label' with constraints, including 'the corresponding BP includes a verb' and 'the argument candidate and the predicate node have a syntactic dependency.'",
        "The extractions are executed based on the rule templates given in advance.",
        "Each extracted rule is evaluated for the current graphs, and error reduction is calculated.",
        "The best rule for the reduction is selected as a new rule and inserted at the bottom of the current rule list.",
        "The new rule is applied to the current graphs, which are transferred to other graph structures.",
        "This procedure is iterated until the total errors for the gold standard graphs become zero.",
        "When the process is completed, the rule list is the final model.",
        "In the test phase, we iteratively transform nodes and edges in the graphs mapped from the test data, based on rules in the model like decision lists.",
        "The last graph after all rule adaptations is the system output of the PAS.",
        "In this procedure, the calculation of error reduction is very time-consuming, because we have to check many constraints from the candidate rules for all training samples.",
        "The calculation order is O(MN), where M is the number of articles and N is the number of candidate rules.",
        "Additionally, an edge rule usually has three types of constraints: 'pred node constraint,' 'argument candidate node constraint,' and 'relation constraint.'",
        "The number of combinations and extracted rules are much larger than one of the rules for the node rules.",
        "Ramshaw et al.",
        "proposed an index-based efficient reduction method for the calculation of error reduction (Ramshaw and Marcus, 1994).",
        "However, in PAS tasks, we need to check the exclusiveness of the argument types (for example, a predicate argument structure does not have two nominative arguments), and we cannot directly use the method.",
        "Jijkoun et al.",
        "only used candidate rules that happen in the current and gold standard graphs and used SVM learning for constraint checks (Jijkoun and de Rijke, 2007).",
        "This method is effective for achieving high accuracy; however, it loses the readability of the rules.",
        "This is contrary to our aim to extract readable rules.",
        "_BP_",
        "_BP_",
        "_BP_",
        "BP",
        "BP",
        "_BP_",
        "1 CW II FW 1",
        "1 CW 1 1 FW 1",
        "1 CW 1 1 FW 1",
        "1 CW 1",
        "1 CW II FW",
        "CW II FW 1",
        "Kare no",
        "tabe ta",
        "okashi wa",
        "kinou",
        "m/se de",
        "kat ta",
        "He 's",
        "eat PAST",
        "snack TOP",
        "yesterday",
        "shop at",
        "buy PAST",
        "To reduce the calculations while maintaining readability, we propose an incremental method and describe its procedure below.",
        "In this procedure, we first have PAS graphs for only one article.",
        "After the total errors among the current and gold standard graphs become zero in the article, we proceed to the next article.",
        "For the next article, we first adapt the rules learned from the previous article.",
        "After that, we extract new rules from the two articles until the total errors for the articles become zero.",
        "We continue these processes until the last article.",
        "Additionally, we count the number of rule occurrences and only use the rule candidates that happen more than once, because most such rules harm the accuracy.",
        "We save and use these rules again if the occurrence increases."
      ]
    },
    {
      "heading": "3. Experiments",
      "text": [
        "We used the articles in the NAIST Text Corpus version 1.4/3 (Iida et al., 2007) based on the Mainichi Shinbun Corpus (Mainichi, 1995), which were taken from news articles published in the Japanese Mainichi Shinbun newspaper.",
        "We used articles published on January 1st for training examples and on January 3rd for test examples.",
        "Three original argument types are defined in the NAIST Text Corpus: nominative (or subjective), accusative (or direct object), and dative (or indirect object).",
        "For evaluation of the difficult annotation cases, we also added annotations for 'time' and 'location' types by ourselves.",
        "We show the dataset distribution in Table 1.",
        "We extracted the BP units and dependencies among these BPs from the dataset using Cabocha, a Japanese dependency parser, as pre-processing.",
        "After that, we adapted our incremental learning to the training data.",
        "We used two constraint templates in Tables 2 and 3 for predicate nodes and edges when extracting the rule candidates.",
        "Our incremental method takes an hour.",
        "In comparison, the original TBL cannot even extract one rule in a day.",
        "The results of predicate and argument type predictions are shown in Table 4.",
        "Here, 'Baseline' is the baseline system that predicts the BSs that contain verbs, adjectives, and da form nouns ('to be' in English) as predicates and predicts argument types for BSs having syntactical dependency with a predicted predicate BS, based on the following rules: 1) BSs containing nominative (ga) / accusative (wo) / dative (ni) case markers are predicted to be nominative, accusative, and dative, respectively.",
        "2) BSs containing a topic case marker (wa) are predicted to be nominative.",
        "3) When a word sense category from a Japanese ontology of the head word in BS belongs to a 'time' or 'location' category, the BS is predicted to be a 'time' and 'location' type argument.",
        "In all precision, recall, and F1-measure, our system outperformed the baseline system.",
        "Next, we show our system's learning curve in Fig. 3.",
        "The number of final rules was 68.",
        "This indicates that the first twenty rules are mainly effective rules for the performance.",
        "The curve also shows that no overfitting happened.",
        "Next, we show the performance for every argument type in Table 5.",
        "'TBL,' which stands for 'transformation-based learning,' is our system.",
        "In this table, the performance of the dative and time types improved, even though they are difficult to distinguish.",
        "On the other hand, the performance of the location type argument in our system is very low.",
        "Our method learns rules as decreasing errors of",
        "Training",
        "Test",
        "# of Articles",
        "95",
        "74",
        "# of Sentences",
        "1,129",
        "687",
        "# of Predicates",
        "3,261",
        "2,038",
        "# of Arguments",
        "3,877",
        "2,468",
        "Nom.",
        "1,717",
        "971",
        "Acc.",
        "1,012",
        "701",
        "Dat.",
        "632",
        "376",
        "Time",
        "371",
        "295",
        "Loc.",
        "145",
        "125",
        "Type",
        "System",
        "P",
        "R",
        "F1",
        "Pred.",
        "Baseline",
        "89.4",
        "85.1",
        "87.2",
        "Our system",
        "91.8",
        "85.3",
        "88.4",
        "Arg.",
        "Baseline",
        "79.3",
        "59.5",
        "68.0",
        "Our system",
        "81.9",
        "62.4",
        "70.8",
        "Table 2: Predicate node constraint templates all arguments, and the performance of the location type argument is probably sacrificed for total error reduction because the number of location type arguments is much smaller than the number of other argument types (Table 1), and the improvement of the performance-based learning for location type arguments is relatively low.",
        "To confirm this, we performed an experiment in which we gave the rules of the baseline system to our system as initial rules and subsequently performed our incremental learning.",
        "'Base + TBL' shows the experiment.",
        "The performance for the location type argument improved drastically.",
        "However, the total performance of the arguments was below the original TBL.",
        "Moreover, the 'Base + TBL' performance surpassed the baseline system.",
        "This indicates that our system learned a reasonable model.",
        "Finally, we show some interesting extracted rules in Fig. 4.",
        "The first rule stands for an expression where the sentence ends with the performance of something, which is often seen in Japanese newspaper articles.",
        "The second and third rules represent that annotators of this dataset tend to annotate time types for which the semantic category of the argument is time, even if the argument looks like the dat.",
        "type, and annotators tend to annotate dat.",
        "type for arguments that have an dat.",
        "Pred.",
        "Node Constraint Template",
        "Rule Example",
        "Constraint",
        "Description",
        "Pred.",
        "Node Constraint",
        "Operation",
        "pos1 pos2 pos1 & pos2 'da' lemma",
        "noun, verb, adjective, etc.",
        "independent, attached word, etc.",
        "above two features combination da form (copula) word base form",
        "pos1 = 'ADJECTIVE' pos2='DEPENDENT WORD' pos1 = 'VERB' & pos2='ANCILLARY WORD' 'da form' lemma='%'",
        "add pred node del pred node add pred node add pred node add pred node",
        "Edge Constraint Template",
        "Rule Example",
        "Arg.",
        "Cand.",
        "Const.",
        "Pred.",
        "Node Const.",
        "Relation Const.",
        "Edge Constraint",
        "Operation",
        "FW (=func.",
        "*",
        "dep(arg – ",
        "pred)",
        "FW of Arg.",
        "='wa(TOP)' & dep(arg – pred)",
        "add NOM edge",
        "word) *",
        "FW",
        "dep(arg – ",
        "pred)",
        "FW of Pred.",
        "= 'na(ADNOMINAL)' & dep(arg – pred)",
        "add NOM edge",
        "SemCat",
        "*",
        "dep(arg – ",
        "pred)",
        "SemCat of Arg.",
        "= 'TIME' & dep(arg – pred)",
        "add TIME edge",
        "(=semantic",
        "category)",
        "FW",
        "passive form",
        "dep(arg – ",
        "pred)",
        "FW of Arg.",
        "='ga(NOM) & Pred.",
        ": passive form",
        "chg edge label NOM – ACC",
        "*",
        "kform (= type of inflected form)",
        "*",
        "kform of Pred.",
        "= continuative 'ta' form",
        "add NOM edge",
        "SemCat",
        "Pred.",
        "SemCat",
        "*",
        "SemCat of Arg.",
        "= 'HUMAN' & Pred.",
        "SemCat = 'PHYSICAL MOVE'",
        "add NOM edge",
        "if BP contains the word \"%', Add Pred, Node \"People who answered are 87%'",
        "BP CW I FW Sx fc X It kotae-ta hito-wa answered people-TOP SemCat is Time' Change Edge Label Dat.",
        "-»Time Time / Dat.",
        "Change Edge Label \"will start on the 7th' Rule No.16 is applied",
        "type case marker.",
        "4 Conclusion",
        "We performed experiments for Japanese predicate argument structure analysis using transformation-based learning and extracted rules that indicate the tendencies annotators have.",
        "We presented an incremental procedure to speed up rule extraction.",
        "The performance of PAS analysis improved, especially, the dative and time types, which are difficult to distinguish.",
        "Moreover, when time expressions are attached to the 'ni' case, the learned model showed a tendency to annotate them as dative arguments in the used corpus.",
        "Our method has potential for dative predictions and interpreting the tendencies of annotator inconsistencies."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "We thank Kevin Duh for his valuable comments.",
        "BP",
        "Rule No.20",
        "CW",
        "B",
        "3",
        "CW",
        "FW",
        "B",
        "3",
        "CW",
        "FW",
        "System",
        "Args.",
        "Nom.",
        "Acc.",
        "Dat.",
        "Time",
        "Loc.",
        "Base",
        "68.0",
        "65.8",
        "79.6",
        "70.5",
        "51.5",
        "38.0",
        "TBL",
        "70.8",
        "64.9",
        "86.4",
        "74.8",
        "59.6",
        "1.7",
        "Base +TBL",
        "69.5",
        "63.9",
        "85.8",
        "67.8",
        "55.8",
        "37.4"
      ]
    }
  ]
}
