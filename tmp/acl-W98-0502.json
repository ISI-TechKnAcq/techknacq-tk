{
  "info": {
    "authors": [
      "Vincenzo Lombardo",
      "Leonardo Lesmo"
    ],
    "book": "Workshop on Processing of Dependency-Based Grammars",
    "id": "acl-W98-0502",
    "title": "Unit Coordination and Gapping in Dependency Theory",
    "url": "https://aclweb.org/anthology/W98-0502",
    "year": 1998
  },
  "references": [
    "acl-P84-1053",
    "acl-P97-1043",
    "acl-P98-2130"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "The paper investigates the problem of representing coordination constructs in a formal system for the dependency approach to syntax.",
        "The distinctive aspect of the formalism is the presence of non-lexical (trace - e) nodes in the representation.",
        "We illustrate the basic mechanisms, and how they can account for syntactic phenomena involving long-distance dependencies.",
        "Then, we see how the same mechanism can account for the gaps and ellipses of coordination constructs."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Coordination is a long standing problem for linguistic theories, because of its particular aspects which do not fit well with the dominance-based character of the vast majority of paradigms.",
        "The accounts of coordination which have been devised in constituency theories all rely on the notion of non traditional constituents, because of the variety of word strings that can play the role of conjuncts (see, for example, (Gazdar et al.",
        "1985)).",
        "Maybe the most natural description has been provided by Steedman in a series of papers on Combinatory Categorial Grammar (Steedman 1985, 1990, 1996).",
        "He generalizes the notion of constituent through the operators of functional composition and type raising, the so-called combinawrs.",
        "This uniformity of analysis suffers from the generation of spurious ambiguities, even if this proliferation of structures seems to be justified (in some cases') by the requirement of characterizing intonation patterns.",
        "Sarkar and Joshi (1997) forward CCG analysis in the LTAG framework, by interpreting combinators in",
        "terms of argument sharing and traces handled by TAG operators (conjoin or adjunction itself).",
        "In this way, they are able to keep unaltered the notion of fixed constituency due to LTAG lexicon.",
        "Dependency paradigms exhibit obvious difficulties with coordination because, differently from most linguistic structures, it is not possible to characterize the coordination construct with a general schema involving a head and some modifiers of it.",
        "The conjunction itself, has distributional properties that have nothing to do with the whole coordination.",
        "Hudson (1990, following Tesniere 1959) gives up the idea of providing a dependency structure for the coordination, and characterizes conjuncts as word strings.",
        "Conjuncts are internally organized as (possibly disconnected) dependency structures and each conjunct root is dependency related to some element of the sentence which is external to the coordination.",
        "Mel'cuk (1988), on the other hand, privileges one of the two conjuncts as the head of the coordination, and claims that coordination symmetry is such only at the semantic level.",
        "This approach solves the problem of providing a head with the same distributional properties of the whole coordination.",
        "When applied to English, it allows to represent the prepositional character of conjunctions observed by Ross (1970).",
        "In this work we provide a dependency account of coordination following Mel'cuk's hint: one of the two conjuncts is the head of the construction, and the conjunction itself is the head of the other conjunct.",
        "We extend the lexicalized dependency formalism presented in (Lombardo, Lesmo 1998): each rule constrains the form and the number of dependents of a word in a dependency tree (see fig. 1).",
        "The formalism is projective, and accounts for long-distance dependency phenomena",
        "through the introduction of non lexical categories, which can be viewed as a notational variant of some graph structures already present in some formalisms (see, e.g., Word Grammar (Hudson 1990)).",
        "The presence of non lexical categories keeps unaltered the condition of projectivity, encoded in a notion of derivation.",
        "The core of the grammar consists of primitive and non primitive dependency rules, representing predicate - argument structures associated with lexical items.",
        "Non primitive dependency rules result from the application of metarules to primitive rules.",
        "The dependency rules that license coordination are non primitive rules for the head conjunct.",
        "They can be distinguished in rules for unit coordination, where conjuncts are complete predicate-argument structures, and gapped coordinations, where conjuncts have gaps inside.",
        "The paper is organized as follows.",
        "The next section presents the basic dependency system, along with the notion of derivation.",
        "Section 3 presents the treatment of coordination, together with examples of metarules that account for several forms of unit and gapped constructions.",
        "Section 4 concludes the paper."
      ]
    },
    {
      "heading": "2. A dependency formalism",
      "text": [
        "The basic idea of dependency is that the syntactic structure of a sentence is described in terms of binary relations (dependency relations) on pairs of words, a head (or parent), and a dependent (daughter), respectively; these relations form a tree, the dependency tree.",
        "In this section we describe the dependency system in (Lombardo, Lesmo 1998).",
        "The syntactic knowledge is expressed by dependency rules which describe a node of"
      ]
    },
    {
      "heading": "know SUB/ ...COMP likes SUBJ/ \\OBJ John beans",
      "text": [
        "and the parse structures generated by a grammar of this form are defined through a derivation procedure.",
        "The grammar and the lexicon coincide, since the rules are lexicalized: the head of the rule is a word of a certain category, i.e. the lexical anchor, and the dependents are categories linked by edges labelled with dependency relations.",
        "From the linguistic point of view we can recognize two types of dependency rules: primitive dependency rules, which represent linearly-ordered predicate-argument structures (possibly with adjuncts), and non-primitive dependency rules, which describe syntactic phenomena like argument sharings and extractions.",
        "Meta rules (see section 3), which produce non primitive rules from primitive rules (by means of one or several applications), obey linguistic principles (cf. GPSG approach (Gazdar et al.",
        "1985)).",
        "A dependency grammar is a six-tuple <W, C, S, D, I, H>, where W is a finite set of words; C is a set of syntactic categories; S is a non-empty set of root categories (CS); D is the set of dependency relations (e.g. SUBJ, OBJ, XCOMP, P-OBJ, PRED2); I is a finite set of symbols (among which the special symbol 0), called u-indices; H is a set of dependency rules of the form",
        "3) an element <9 Yi u rj> is a d-quadruple (which describes a dependent); the sequence of d-quads, including the special symbol # (representing the linear position of the head), is called the d-quad sequence.",
        "We have that",
        "3a) riED, j E 3b) YjE C, j {1, ..., i-1, i+1, m); 3c) niE I, j (1, i-1, i+1, ...,m); 3d) '9 is a (possibly empty) set of triples <u, r, Y>, called u-triples, where tie I, re D, YE C. Principle of u-triple satisfiability:",
        "For each dependency rule SE H and uE I, there 2 The special relation VISITOR (Hudson 1990) accounts for displaced elements and, differently from the other relations, is not semantically interpreted.",
        "exists a u-triple <uj,r,Y>e '9 in a d-quad <rjYjujtj> of 8 iff there exists one d-quad <riYtuiti> of 8 such that i * j.",
        "Intuitively, a dependency rule constrains one node (head) and its dependents in a dependency tree3: the d-quad sequence states the order of elements, both the head (# position) and the dependents (d-quads).",
        "The grammar is lexicalized, because each dependency rule has a lexical anchor in its head (x:X).",
        "A d-quad <riYiurri> identifies a dependent of category Yi, connected with the head via a dependency relation ri.",
        "Each element of the d-quad sequence is possibly associated with a u-index (ui) and a set of u-triples (TO.",
        "The c-component can be viewed as a slash feature in GPSG terms.",
        "Both ui and ti can be null elements, i.e. 0 and 0, respectively.",
        "A u-triple (c-component of the d-quad) <u, R, Y> bounds the area of the dependency tree where the trace can occur.",
        "The principle of u-triple satisfiability states a one-to-one correspondence between the u-indices and the u-triples of the d-quads.",
        "The dependent indexed by uk in the rule is coindexed with a trace node in the subtree rooted by the dependent containing the u-triple <uk, R, Y>.",
        "The derivation procedure requires some preprocessing (u-index annotation) on the dependency rules and some terminology.",
        "As one dependency rule can be used more than once in a derivation process, it is necessary to annotate the u-indices with unique symbols (progressive integers) before the actual use.",
        "The annotation must be consistent in the u and the components.",
        "A dependency rule (as well as a u-triple) with u-indices all annotated is said to be instantiated: I+ refers to the set of annotated u-indices (including the special symbol 0).",
        "3 As stated above, the dependency rules express the subcategorization frames, and possibly include adjuncts.",
        "Here are two examples of dependency rules: yawned:V(<SUBJ, N, 0, 0> #), is the licensing rule of \"John yawned\"; yawned:V(<SUBJ, N,O, 0> # <MANNER, ADV,O, 0>) is the licensing rule of \"John yawned loudly\".",
        "In the first case the dependency rule represents the subcategorization frame; in the second case the rule includes an adjunct.",
        "A word w (e W) or the trace symbol E (e W) and two annotated u-indices p. and v is a word object of the grammar.",
        "Given a grammar G, the set of word objects of G is Wx(G)=-Ipxv / )1,Verf, xe Wu (E)).",
        "A pair consisting of a category X (e C) and a string of instantiated u-triples 7 is a category object Of the grammar (X()).",
        "A 4-tuple <r, Y(71), u, 72> consisting of a dependency relation r (e D), a category object x(71), an annotated u-index u, a set of instantiated u-triples 72 is a derivation object of the grammar.",
        "Given a grammar G, the set of derivation objects of G is C(G) = {<r,Y(Ti),u,y2> : re D, Ye C, ue I+, 71, 72 are sequences of instantiated u-triples).",
        "Given a grammar G, L'(G) is the language of sequences of word objects: L'(G)={ ae Wx(G)* / <TOP, Q(0), 0, 0> a and QE S(G)) where TOP is a dummy dependency relation for the root of the tree and is the derivation relation (defined below).",
        "The language generated by the grammar G, L(G), is defined through the function t: L(G)={ WE Wx(G)* / w=t(a) and ae Li(G)), where t is defined recursively as t(-) = t(gwv a) = w t(a), t(pev a).",
        "t(a).",
        "and - is the empty sequence.",
        "The derivation procedure performs a leftmost generation of a sentence of L'(G).",
        "The derivation relation consists of two expressions.",
        "Let ae (Wx(G))* and V E (Wx(G) Cx(G))*.",
        "DR1:a <r, X(yp), u, 'Yx> V <ri,Y1(1%),ubci> •cr2,1r P2),u 212>",
        "<rm,Ym(Pm),u where x:X (<riY tuft t> <ri_iy_ # <ri+1Yii-itli+fri+1> <rm Ymumtm>) is a dependency rule, and p1 •.. PM=Yp YX.",
        "DR2: a <r,X(<v, r, X>), u, 0> XII a LIEN, is the reflexive, transitive closure of DR1 distributes over the dependents of a dependency rule the u-triples still to be satisfied (7p) plus the new u-indices introduced by the rule itself (7x).",
        "The u-index u, occurring in the current derivation object, is associated (as a tt-index) with the lexical head of the rule x.",
        "The whole subtree headed by x will be coindexed with a trace node which will satisfy a u-triple of u in one of the p sets (DR2).",
        "If u=0 no coindexing occurs.",
        "DR2 implements the u-triple satisfaction: the u-triple <v, r, X> represents an expectation for a trace of category X attached to its head through a relation r. When DR2 applies, the trace (word object Aev) is in fact inserted in the derivation with v-index v. Notice that the trace has u (the u-index of the derivation object) as windex: this means that the trace itself can be the reference for another trace.",
        "As an example, consider the grammar GI= < WI: {I, John, beans, know, likes) CI: {V, V+EX, N} S1: (V, V+EX } Di: { SUBJ, OBJ, VISITOR, TOP} II: (0, u) T1>, where T1 includes the following dependency rules:",
        "1.",
        "I: N (#); 2.",
        "John: N (#); 3. beans: N (#); 4. likes: V (<SUBJ, N, 0,0> # <OBJ, N, 0, 0> ); 5. know: V +EX (<VISITOR, N, u, 0>",
        "<SUBJ, N, 0,0> <SCOMP, V, 0, ku,OBJ,N>)>).",
        "A derivation for the sentence \"Beans I know John likes\" is the following (at each step, the leftmost derivation object is underlined, and the derivation relation to be applied marks the symbol <10P.1L+Ex122).",
        "0.",
        "0> DR <VISITOR.",
        "N(0).",
        "ui.",
        "<SUBJ.",
        "N(0).",
        "0,0> know <SCOMP, (0), 0, <u1,013.1,N> j> DR I uibeans <st N(0.",
        ").1,0a know <SCOMP, V(0), 0, (<ul,OBJ,N>)> DR 1",
        "The dependency tree corresponding to this derivation is in fig. 2.",
        "Given DR1 and DR2, a trace node represents a gap for the whole subtree headed by the lexical node coindexed with it.",
        "So, in fig. 2, if we replace \"beans\" with a complex noun phrase (\"black beans that come from Guatemala\"), u1 again annotates only \"beans\", but the trace node represents the gap for the whole subtree."
      ]
    },
    {
      "heading": "3. Coordination in English",
      "text": [
        "In section 2 we have described a lexicalized dependency formalism and a notion of derivation that yields the legal sentences and the corresponding dependency trees.",
        "In (Lombardo, Lesmo 1998) we have defined an Earley-type parsing algorithm for this formalism.",
        "In this section we address the problem of providing a dependency analysis of coordination constructs.",
        "The (non primitive) dependency rules that account for coordination are the result of the application of metarules to basic dependency rules.",
        "Metarules and primitive dependency rules express the linguistic knowledge.",
        "The iterated application of metarules produces all the non primitive dependency rules, that together with the primitive rules, form the grammar.",
        "The application of the derivation rules to the complete set of rules produces the sentences of the language.",
        "This section addresses the linguistic issue of providing a number of",
        "metarules that deal with coordination, and the formal issue of extending the derivation procedure to gapped conjuncts.",
        "First, we introduce the general notation for metarules; then, we consider a number of coordination phenomena in English, starting from the simple to the complex ones, which require some extensions to the derivation rules."
      ]
    },
    {
      "heading": "3.1 Metarules",
      "text": [
        "The general schema of a metarule4 is"
      ]
    },
    {
      "heading": "meta-id SOURCE TARGET",
      "text": [
        "where \"meta-id\" is an identifier of the metarule, and SOURCE and TARGET are PATTERNS of dependency rules.",
        "A PATTERN is an abstraction over a dependency rule, where the head can (possibly) reduce to the syntactic category (from x:X to X), and some subsequences of d-quads can be (possibly) replaced by some variable symbol.",
        "The abstraction allows to generalize the description of phenomena, where possible.5 An example of metarule for object extraction is the following:",
        "The metarule ex2 takes as SOURCE a PATTERN that represents the subcategorization frame of a verb with a sentential complement (know, believe, admit, ...), and produces as TARGET 4 This section presents an intuitive sketch of metarules, without any claim about the full generality of the examples of metarules reported herein.",
        "5 Recently, there has been a trend in linguistics to view most syntactic phenomena as lexicon-dependent rather than category-dependent (sometimes, e.g. passivization, the shift even continues to sentence-dependency).",
        "In our work, the final goal is to associate metarules to subcategories arranged in a hierarchy (on this topic, see (Barbero et al., this volume)).",
        "In this paper, we neglect this point, and all our examples of meiarules assume category-headed patterns.",
        "the corresponding PATTERN that accounts for extracting the object from the sentential complement.",
        "In the previous section, we have seen how a dependency rule abstracted by this PATTERN can derive \"Beans, I know John likes\".",
        "Some subsequences of d-quads do not affect the application of metarules, and pass unaltered from the SOURCE to the TARGET.",
        "PATTERNS avoid redundancy by introducing variables.",
        "The following metarule accounts for preposition stranding (for example, \"This place, he comes to\", or \"This place, he often comes to with reluctance\"):",
        "A unification procedure accounts for matching PATTERNS (SOURCE and TARGET) and dependency rules, taking care of variable sustitutions from SOURCE to TARGET.",
        "The SOURCE dependency rule for \"comes\" in fig. 3a represents its subcategorization frame.",
        "The metarule psi matches this dependency rule through its SOURCE PATTERN, and produces the TARGET dependency rule, which licenses the dependency tree in fig. 3b.",
        "In the remainder of this section, we describe the metarules that apply to dependency rules to generate the coordination constructs.",
        "In the derivation process, we assume the X grammar to be fully instantiated, that is all the coord-unit A-NCOORD metarules have been applied to generate all the Cr non primitive dependency rules.",
        "CONJ-X"
      ]
    },
    {
      "heading": "3.2 Metarules for coordination",
      "text": [
        "The treatment of coordination relies on the application of proper metarules to dependency rules.",
        "Gapped constituent coordination results from the same mechanism that accounts for long-distance dependencies in section 2.",
        "The treatment of coordination illustrated here pursues the goal of providing a dominance-based representation.",
        "As we will see, this can lead sometimes to less standard analyses of coordination phenomena.",
        "Most of the theories in the literature assume a parallel constituency-based (Steedman 1996) (Sarkar, Josh i 1997) or string-based (Hudson 1990) analyses of the conjuncts.",
        "This prevents a fully incremental processing of the input, since before processing the infix conjunction (and, or, ...) we need to analyze the second conjunct.",
        "The theory illustrated here naturally favors the incremental analysis.",
        "As the formalism is lexicalized, coordinating conjunctions are treated as lexically ambiguous elements (polymorphic functors in categorial terms): they are assigned the categories of the form CONJ-X, for each syntactic category X.",
        "So, we have CONJ-V for verbs, CONJ-N for nouns, and so on.",
        "The first metarule we take into account is the one that works for unit coordination (coord-unit)6: (0) _coord-unit X (a <COORD, CONJ-X, 0, (25>) For each dependency rule with a head of category X (variable), coord-unit produces a dependency rule having exactly the same d-quad sequence (a), but with the added rightmost dependent CONJ-X, whose relation with the head is COORD (fig.",
        "4a).",
        "The dependency rule and: CONJ-V (# <2nd, V. 0, 0>) licenses the second conjunct of a coordination of finite verbs.",
        "The relation \"2nd\" links the second conjunct as a dependent of the conjunction and.",
        "The TARGET dependency rule in fig. 4b results from the application of the metarule \"coord-unit\" to the primitive",
        "dependency rule for the predicate-argument structure of laughed (the same for sneezed and other intransitive verbs).",
        "According to these dependency rules, the sentence \"John laughed and Mary sneezed\" can be represented as shown in fig. 4c.",
        "The metarule \"coord-unit\" accounts for full constituent (unit) coordinations, where the two conjuncts are headed by a word of the same category.",
        "Note that \"full constituents\" means that conjuncts have no gaps inside.",
        "Other examples are the following sentences: She eats apples and pears (OBJ, coordination), Elizabeth likes to go to the zoos and to the"
      ]
    },
    {
      "heading": "17111SeUMS (DEST coordination),",
      "text": [
        "Mary thought ostrichs fly and kangaroos swim"
      ]
    },
    {
      "heading": "(SCOMP coordination)7",
      "text": [
        "Difficulties with coordination arise with gapped conjuncts.",
        "Literature usually distinguishes between non-traditional7 The latter examples consider constituents that are full arguments of predicate-argument structures.",
        "Note that VP coordination, which is a full constituent coordination in phrase structure terms, is not an example of unit coordination, because the dependency rules represent the whole predicate-argument structure (including subject).",
        "constituent coordination and gapping (see, however, (Steedman 1990), for an exception).",
        "As stated above, we deal uniformly with the two types of coordination: the common key is to classify coordination phenomena according to the elements that are missing in the conjuncts.",
        "Consider the following case of a VP-coordination: Lucy saw a butterfly and laughed.",
        "In fig. 5 we can see a dependency representation of this sentence.",
        "Lucy is coindexed by ul with the trace Eui in the second conjunct.",
        "We assume that any coordination where one of the two conjuncts misses some part of the predicate-argument structure (including adjuncts) is a gapped coordination.",
        "The interpretation of the gapped coordination can be summarized as follows: a coordination has a structure headed by one of the conjuncts; the missing elements are handled by traces (non lexical nodes) and u-indices, that are controlled through u-triples in non-primitive dependency rules (accounting for coordination).",
        "The dependency rule that licenses the tree in fig. 5 is the following: saw: V( <SUBJ, N, u, 0> <OBJ, DET, 0, 0> <COORD, CONJ-V, 0, (<u, SUBJ, N>)>) The metarule that produces this dependency rule is in fig. 7a: it states that it is possible to produce a dependency rule for SUBJ-gapped coordinations from a rule having a verb as its head and an initial d-quad which represents a SUBJ relation.",
        "In the subtree rooted by the conjunction there must be a SUBJ trace node.",
        "U-triple specifications allow to produce a uniform treatment of many kinds of argument gaps, among which the following (single and multiple) ones: Mary cooked and John ate beans (OBJ gap, fig. 7b)",
        "Mary cooked and ate beans (SUBJ+OBJ gap, or V coordination, fig. 7c) John offered, and Mary actually gave, a golden Cadillac to Billy Schwartz (OBJ+I-OBJ gap, also Right Node Raising, fig. 7d) These metarules enforce the high attachment of actual dependents and the low attachment of gapped dependents (trace nodes).",
        "This implies that right dependents attach to the farther head of the two, always respecting the condition the projectivity.",
        "Even if the second conjunct could attach more immediately to the lower head, we think that, intonationally, the second conjunct forms a unit per se, without the right dependents.",
        "This also seems to be an empirical support of the constraint that u-triple satisfaction follows the top-down direction."
      ]
    },
    {
      "heading": "3.3 Head gapping",
      "text": [
        "The formalism and the derivation procedure introduced in section 2 assume a trace node represents the gap for the whole subtree headed by the lexical node coindexed with it (full subtree gapping).",
        "This prevents the",
        "representation of coordination constructs where the missing structure in the second conjunct is not a whole subtree, but only a part of it, namely the head and, possibly, some of its dependents.",
        "This phenomenon occurs in the cases known as gapping in the literature.",
        "Here are some examples:",
        "In this cases we speak of head gapping.",
        "In this section we extend the formalism of section 2 to account for head gapping.",
        "The steps which are necessary for the extension are the following.",
        "(1) We must be able to associate a u-index with the head position (#); in the formalism of section 2 only d-quads (of dependents) had u-symbols associated.",
        "(2) We must introduce and keep apart in the word objects 1.t-indices concerning a whole subtree and 1i-indices concerning a single node.",
        "(3) We must introduce and keep apart in the u-triples the u-indices concerning a whole subtree and the u-indices concerning a single node.",
        "(4) When both head and (some) dependents are gapped, we must constrain the satisfaction of the u-triples of the dependents to occur below the satisfaction of the u-triple of the head.8 (5) We must modify the derivation relation in order to account for the changes in the formalism.",
        "(1) To associate a u-index with the head position in the dependency rules, we need to modify its definition: A dependency grammar is a six-tuple <W, C, S, D, I, H>, where W, C, S, D, I are as defined in section 2, and H is a set of dependency rules, of the form x:X (<01'14T 1> ... <#, ui> <ri+1Yi+iui+iti+i> <rinYmumtm>) where all symbols are the same as in section 2, except for the head position (#), which has been associated an index ui (possibly 0), such 8 The derivation process defined in section 2 loosely constrains the satisfaction of u-triples to occur in a specific subtree.",
        "Head gapping requires a stronger constraint to satisfy the u-triples of the gapped heads and dependents in the same respective tree position.",
        "that uie To introduce and keep apart the u-indices for a subtree and the ones for a single node in the derivation process, we must modify the word objects in 4-tuples consisting of a word w (e W) or the trace symbol E (ft W) and three annotated indices T, 11 and V. Given a grammar G, the set of word objects of G is Wx(G)=Irigxv Ti, g,v E I+, XE W { E}).",
        "where 11 concerns x as a single node, and g concerns x as head of a subtree.",
        "To introduce and keep apart the u-indices concerning a full subtree gapping or a head gapping in the u-triples, we introduce two forms: - simple (full subtree gapping): <u, r, X> - complex (head gapping): <!.u, r, x:X> where ue I, re D, XE W, X e C, and !",
        "is a special symbol that specifies that the complex index concerns the single node linked by the dependency relation r. To constrain the attachment of the trace nodes of gapped dependents to the trace node of the head, we generalize the complex form of the u-triple in <q.u, r, x:X> where u, r, and X are as before, and q Glut !).",
        "Now, when the index is !.0 we have a head gap indexed u (no indication on its parent, as in standard u-triple satisfaction); when the index is q.u, we have a head gap u whose parent is indexed by q.",
        "The new derivation relation is the following:",
        "where a) x:X (<r pit 1> ... <# Li; >",
        "and insert it in the p set in a or v containing the u-triple <t.q, ...> (te I); c\") for each uk (k=1, i-1, i+1, m) in the (head gapped) dependency rule such that uk=!.w (WE I), replace it with uki.s.w.",
        "The new DR1 extends the version of section 2 by accounting for the treatment of complex u-triples (part c).",
        "If the u-index (u) of the derivation object to expand (<r,X(yp),u,y,>) is a pair of indices of the form q.s, this means that the derivation object results from the application of a head gapped dependency rule.",
        "Head gapping can possibly include some dependents: DR1 collects all the word objects that participate to the gapping phenomenon.",
        "This process has two phases: c' builds a new u-triple for the current derivation object, and inserts it in the p set that already contains the head of the current gapped element (of the form <t.q, ...>); in other words, c' builds a \"subtree\" of gapped elements; c\" obtains the actual (instantiated) index by referencing the current element as head of the next dependent.",
        "DR2: a <r,X(<v, r, X>), u, 0> NJ Cl 0,i1Ev DR2 is still the rule for full subtree gapping: it only applies to the satisfaction of simple u-triples.",
        "c) for each complex u-triple <w.t, ry, y:Y> in yp, there exists a d-quad <rkiYkiukitki> in the dependency rule such that rkiy and Yki=Y.",
        "and pki2{<t,rkiYk1>); d) pi k.) u Pm=7x u Yp - { <v.vv, rx, x:X>} DR3 is totally new, and accounts for the satisfaction of complex u-triples.",
        "The complex u-triples that are ready for satisfaction are those of the form <v.w, rx, x:X>.",
        "The satisfaction mechanism looks for a dependency rule beaded by x:X that contains a d-quad for each u-triple that represents a gapped dependent of the head t - indexed by v. The result is a trace node where the v-index is w, and the II and the p-indices are computed as usual.",
        "Finally, DR3 modifies the set of u-triples yp by removing the u-triple which has been satisfied."
      ]
    },
    {
      "heading": "For the (V-gapped) sentence",
      "text": [
        "I saw a unicorn and Carol a tyrannosaurus we need the metarule in fig. 7a, which produces the TARGET dependency rule saw: V (<SUBJ, N, 0, 0> <#, !.u> <OBJ, N, 0, 0> <COORD, CONJ-V, 0, (<!.u, 2nd, V>)>) which licenses the dependency tree in fig. 7b.",
        "For the (V+SUBJ gapped) sentence I gave the books to Mary and the records to"
      ]
    },
    {
      "heading": "Sue (V + SUBJ gapping)",
      "text": [
        "the (non primitive) dependency rule is: gave: V (<SUBJ, N, u.v, 0> <#, !.u> <OBJ, N, 0, 0> <I-OBJ, 13(to), 0, 0> <COORD,CONJ-V, 0, (<!.u, 2nd, V>, <u.v, SUBJ, N> )) which is built by the metarule in fig. 8a.",
        "The dependency tree which results from the derivation of this sentence is in fig. 9."
      ]
    },
    {
      "heading": "4.Condusions",
      "text": [
        "The paper has described a lexicalized dependency formalism and an asymmetric dominance-based treatment of coordination.",
        "The linguistic knowledge is formalized in primitive dependency rules and a number of metarules, which produce non primitive rules from primitive rules.",
        "Long-distance dependencies are represented by coindexing lexical and non lexical nodes in the dependency tree.",
        "Metarules can generate the non primitive rules that license long distance dependencies and, in particular, those connected with coordination gapped constructs.",
        "The paper gives an account of pair coordinations, but the formalism seems to be generalizable to any number of conjuncts.",
        "The basic conjunct unit is the predicate-argument structure including adjuncts.",
        "This assumption leads to the broad classification in unit and gapped coordinations.",
        "As we have seen, this can caused some non standard analyses of Right Node Raising and verb coordination.",
        "The formalism presented in this paper is only a first attempt of producing a dependency formalism that can account for coordination without resurging to phrase structure augmentations or string-based representations.",
        "The formalism is thus suitable to left-to-right incremental processing, because of the dominance-based character of the representation.",
        "We are aware that the formalism is weak on the linguistic competence, because it probably overgenerates with respect to legal sentences; however, we believe that the formal tools introduced (constraints on the u-triple satisfaction) can be successfully used to eliminate this problem."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "This paper has benefited from comments of the people at a seminar held by one of the authors at IRCS, UPenn, Philadelphia."
      ]
    }
  ]
}
