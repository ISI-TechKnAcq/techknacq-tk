{
  "info": {
    "authors": [
      "Panagiotis A. Rentzepopoulos",
      "George K. Kokkinakis"
    ],
    "book": "Computational Linguistics",
    "id": "acl-J96-3003",
    "title": "Efficient Multilingual Phoneme-To-Grapheme Conversion Based on HMM",
    "url": "https://aclweb.org/anthology/J96-3003",
    "year": 1996
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Grapheme-to-phoneme conversion (GTPC) has been achieved in most European languages by dictionary lookup or using rules.",
        "The application of these methods, however, in the reverse process, (i.e., in phoneme-to-grapheme conversion [PTGC]) creates serious problems, especially in inflectionally rich languages.",
        "In this paper the PTGC problem is approached from a completely different point of view.",
        "Instead of rules or a dictionary, the statistics of language connecting pronunciation to spelling are exploited.",
        "The novelty lies in modeling the natural language intraword features using the theory of hidden Markov models (HMM) and performing the conversion using the Viterbi algorithm.",
        "The PTGC system has been established and tested on various multilingual corpora.",
        "Initially, the first-order HMM and the common Viterbi algorithm were used to obtain a single transcription for each word.",
        "Afterwards, the second-order HMM and the N-best algorithm adapted to PTGC were implemented to provide one or more transcriptions for each word input (homophones).",
        "This system gave an average score of more than 99% correctly transcribed words (overall success in the first four candidates) for most of the seven languages it was tested on (Dutch, English, French, German, Greek, Italian, and Spanish).",
        "The system can be adapted to almost any language with little effort and can be implemented in hardware to serve in real-time speech recognition systems."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Phoneme-based speech recognition systems incorporate a phoneme-to-grapheme conversion (PTGC) module to produce orthographically correct output.",
        "Many approaches have been used, most of which compare the phonemic strings to a (usually application-specific) dictionary containing both the phonemic and the graphemic form of every word the system can handle (Laface, Micca, and Pieraccini 1987; Levinson et al.",
        "1989, etc.).",
        "Considering the effort and cost required to create such a dictionary, this is a serious limitation, especially for inflectionally rich languages such as Greek and German.",
        "Another very important issue when searching for words in a dictionary is the number of candidates resulting from each phonemic input.",
        "Depending on the language and the errors of the recognizer, this number may be very large, rendering the disambiguation of the words by a subsequent language model a time-consuming and unreliable task.",
        "The domain of application is another factor that strongly influences conversion performance; a general dictionary can omit the specialized words of specific domains (e.g., legal, engineering, or medical terminology) and vice versa.",
        "Finally, applications that must handle a large number of proper names (e.g., directory service applications) generally cannot include all the possible names.",
        "The only remedy in such situations",
        "would be to increase the size of the reference dictionary, so that every possible input word is included.",
        "A final consideration is the type of errors a dictionary-based PTGC system introduces when it encounters a word that is not contained in the dictionary: the system will produce the closest existing word (in its dictionary) as the best candidate, which may give a completely incomprehensible (if not wrong) meaning to the input phrase.",
        "Another approach to phoneme-to-grapheme conversion is the use of linguistic and/or heuristic rules (Kerkhoff and Wester 1987).",
        "This method works on a phoneme or syllable basis and can give adequate results in languages where the spelling is very similar to the pronunciation (such as Italian).",
        "Nevertheless, languages with diphthongs or double letters cannot benefit from this method, since it creates long lists of homo-phonic candidates that are all correct (in the sense that they are pronounced as the input word) but that do not exist in the language.",
        "In Greek, for example, where the phoneme /i/ is the sound of five different graphemes (7), v, ez, oz) and the phoneme /1/ can come from A and AA, the phonemic form /m'ila/ would produce a list containing the following 10 transcriptions: itiAct, injAct, /17')Act, p,ciAa, piAAcx, 4\\Aa, p,7')AAce, peiAoe, and poiAAce all having the same pronunciation.",
        "From this list, only two represent existing orthographically correct words; \"itiAct\" 'speak!' and \"w)Aa\" 'apples.' Previous work has shown that an average of 30 graphemic candidates is produced by this transcription for every input phonemic word (Rentzepopoulos 1988).",
        "To overcome the disadvantages of the above mentioned methods, a novel statistical approach to the problem of PTGC, which is based on hidden Markov models (HMM), has been investigated and is presented in this paper.",
        "Although statistical approaches have already been widely applied in several fields of natural language processing, they have not been considered for PTGC.",
        "The proposed method is language independent, does not use a dictionary, and can be applied with only minimal linguistic knowledge, thus reducing the cost of system development.",
        "Initially, the first-order HMM and the common Viterbi algorithm were used to provide a simple transcription for each input word.",
        "In its current version, the method is based on second-order HMM and on a modified Viterbi algorithm, which can provide more than one graphemic output for each phonemic input, in descending order of probability.",
        "The multiple outputs make it possible to apply a language model in sentence level for disambiguation at a subsequent stage.",
        "This version of the algorithm raised the number of correctly transcribed phonemes to 97%-100% for most of the languages the system was tested on.",
        "The proposed system assumes that the word boundaries are known; that is, it is a subsequent stage in an isolated-word speech recognition system.",
        "The PTGC method can work as a standalone module or in cooperation with a lookup module with a small to moderate size dictionary containing the most common words of the language.",
        "In the latter case, the lookup module employs a distance threshold: when the difference between the input and the words in the dictionary is greater than this threshold, control is passed to the HMM system, which converts the input phoneme string to graphemes.",
        "The basic theory, the pilot implementation, and the proposed final system are presented in Section 2.",
        "The evaluation procedure and the error-measure methodology are described in Section 3.",
        "In Section 4, the experimental results of the system are presented and the nature of the errors is discussed.",
        "The multilingual aspects of the algorithm and experimental results for seven languages are also given in this section.",
        "Finally, some conclusions are drawn about the system and topics for further research and hardware implementation are discussed in Section 5."
      ]
    },
    {
      "heading": "2. Description of the System",
      "text": [
        "Before the presentation of the proposed system, a brief overview of the theory used and the issues addressed in its application are given.",
        "These include the basic hidden Markov model theory, the Viterbi algorithm, the N-best algorithm and the solutions used to make the PTGC system fast and efficient, adequate for real-time applications."
      ]
    },
    {
      "heading": "2.1 The First Order Hidden Markov Model",
      "text": [
        "An HMM can model any real-world process that changes states in time, provided that the state changes are more or less time independent (Hannaford and Lee 1990; Rabiner 1989).",
        "An HMM is used to describe statistical phenomena that can be considered sequences of hidden (i.e., not directly observable) states that produce observable symbols (Lee 1989).",
        "These phenomena are called hidden Markov processes.",
        "A hidden Markov process is described by a model A that consists of three matrices A, B, and 7r.",
        "Matrix A contains the transition probabilities of the hidden states, matrix B contains the probability of occurrence of an observation symbol given the hidden state, and vector 7r contains the initial probabilities of the hidden state.",
        "In mathematical terms:",
        "where N is the number of possible hidden states and M is the number of all the observable events.",
        "Obviously the dimension of matrix A is N x N, that of matrix B is N x M, and 7i is a vector of N elements.",
        "In equations (1)-(3), qt is the hidden state of the system at time t, Si is the ith possible hidden state of the system, Otis the observation symbol at time t, and yin is the mth possible observable symbol.",
        "For the application of HMM theory to PTGC, the correspondence of the natural language intraword features to an HMM can be found on the following basis: The natural language pronunciation can be considered as the output (observation) of a system that uses as input (hidden state sequence) the spelling of the language (Rentzepopoulos, Tsopanoglou, and Kokkinakis 1991).",
        "In this formulation, the sequence of phonemes produced by the system can be seen as the observation-symbol sequence of an HMM that uses the graphemic forms as a hidden-state sequence.",
        "With this statement, the PTGC problem can be restated as follows: Given the observation-symbol sequence 0(t) (phonemes) and the HMM A, find the hidden-state sequence Q(t) (graphemes) that maximizes the probability P(0 Q, A).",
        "A formal technique for finding the single best state sequence is based on dynamic programming and is the well-known Viterbi algorithm (Forney 1973; Viterbi 1967).",
        "In a word-level implementation, the algorithm must find the hidden-state sequence (i.e., word in its orthographic form) with the best score, given the model A and the observation sequence 0 (i.e., word in its phonemic form).",
        "This algorithm proceeds",
        "recursively from the beginning to the end of the word calculating for any time (in the case of PTGC, time is the position of a phoneme/grapheme in the word) the score of the best path in all possible hidden-state sequences that end at the current state.",
        "The model's parameters can be estimated using the definition formulas, since both the hidden-state and the observation-symbol sequences are known during the training phase of the conversion system.",
        "Thus there is no need of a special estimation procedure like the Baum-Welsh algorithm (Rabiner 1989), which is used when the hidden-state sequence is not known.",
        "In general:",
        "where n(x) is the number of occurrences of x in the training corpus and n'(x) is an estimation of the number of occurrences of x in the application corpus.",
        "The size of the training corpus and the sparseness of the resulting matrices can lead to different approaches in the definition of the estimation function n'(x).",
        "If a reasonably large text is available for training, then n'(x) n(x).",
        "On the other hand, if the training data are insufficient (something that would result in a very sparse transition matrix) then a smoothing technique should be used for the estimation function n' (x) (Katz 1987; Ney and Essen 1991)."
      ]
    },
    {
      "heading": "2.2 Pilot System",
      "text": [
        "To implement the above algorithm in PTGC, some decisions had to be made about the states, observation symbols, and transition probabilities.",
        "These decisions are listed below.",
        "a.",
        "Every hidden state should produce one observation symbol.",
        "To achieve this, all the possible graphemic transcriptions of phonemes were coded as separate graphemic symbols (e.g., 7 and 77 are two different graphemic symbols even though they are both pronounced /p/).",
        "b.",
        "The transition probability matrix (A) should be biased to contain at least one occurrence for every transition and no zero elements.",
        "Consider first (a).",
        "According to the physical meaning given to the hidden states and the observation symbols of the HMM used, there cannot be hidden states (graphemes) that do not produce an observable symbol (phoneme).",
        "This is only partially correct for natural languages including mute letters and diphthongs.",
        "To overcome this problem, the hidden-state alphabet and the observation-symbol alphabet should contain not only single characters (single graphemes or phonemes respectively) but also clusters.",
        "This way, it is guaranteed that there will be no case where a sequence of graphemes produces a sequence of phonemes of a different length.",
        "The rules for the segmentation of a phoneme string to a sequence of symbols conforming to the above condition are manually defined off-line according to the procedure presented below in an informal algorithmic language (Figure 1).",
        "Rentzepopoulos and Kokkinakis Phoneme-to-Grapheme Using HMM Let G = {gi, g2t • • • gM} be the set of phonemes and",
        "Segmentation rule development algorithm.",
        "The meaning of this algorithm is the following: If a pair of phonemes is written as either a single grapheme or a pair of graphemes, then this pair is considered a single state.",
        "The same holds for the reverse procedure when a pair of graphemes is pronounced as either a single phoneme or a pair of phonemes.",
        "For example (in Greek): grapheme is pronounced /ks/ e.g., 756z-ksi'di 'vinegar' grapheme lc is pronounced /k/ e.g., kaAO-kalci 'good' grapheme a is pronounced /s/ e.g., o-acb4-saff 'lucid' graphemes KO\" are pronounced /ks/ e.g., eicarao-n-ekstasi 'ecstasy' In this example the pair of phonemes /ks/ is considered a single phonemic symbol.",
        "Accordingly, the pair '5w-\" is also considered a single graphemic state since it is pronounced as /ks/.",
        "As can be seen, in order to disambiguate the case of KO\" the phonemic symbol /ks/ and the graphemic state Ka must be introduced.",
        "This algorithm is the only language-specific part of the PTGC system and its formulation requires only familiarity with the spelling of the language and not sophisticated linguistic knowledge.",
        "The rules are incorporated in the PTGC system using an automated procedure as a separate input function that parses the input strings into states.",
        "Now consider (b), concerning the transition probability matrix.",
        "Matrix A is established according to formula (4) through training in appropriate corpora using as n' (x) = max(n(x), 1).",
        "The bias described in (b) is necessary so that the algorithm does not discard a new transition but instead assigns a bad score to it (Rabiner 1989).",
        "The bias is one occurrence for each transition that has never occurred in the training corpus",
        " and the model is normalized so that it fulfills the statistical constraints, i.e.:",
        "This estimation is allowed since the training corpora are reasonably large and the bias of one occurrence per transition has no significant effect on the validity of the actually nonzero matrix elements.",
        "Initially, a system based on a first-order HMM was implemented, and the results of its evaluation, detailed in Section 3, were promising.",
        "For Greek, this system gave an average score of 78% correctly transcribed words, while at the phoneme level the score reached 95.5% (Rentzepopoulos and Kokkinakis 1991).",
        "Similar rates were achieved in four other languages (English, French, German, and Italian) (Rentzepopoulos and Kokkinakis 1992).",
        "The model implemented as above showed some disadvantages:",
        "• It did not have enough detail.",
        "• It could not produce more than one solution (homophones).",
        "Therefore, a higher-order HMM and a multiple-output conversion algorithm were employed in order to overcome these disadvantages and achieve better results."
      ]
    },
    {
      "heading": "2.3 Second Order HMM",
      "text": [
        "Since the results of the first order HMM system were encouraging, we decided to develop an improved version of the system.",
        "Two areas were selected for possible advancement: first, to make the system contain more detail in the modeling of the language, and second, to use a system that could produce more than one output solution for each phonemic input (homophones).",
        "This would offer a choice between alternatives, making it possible to find the best solution at a following stage.",
        "The first improvement was accomplished using a second-order HMM.",
        "This is a model that contains conditional probabilities of the form:",
        "i.e., the probability of occurrence of state Sk when the two previous states are S, and SI at t – 2 and t 1, respectively.",
        "The complete model needs a new matrix of conditional probabilities that contains the probability of state-pairs in time t {1,2}:",
        "So the complete model A consists of {A, B,7, p}.",
        "The second-order HMM can be translated into a first-order HMM with an extended state space, in which state pairs are used as single states.",
        "To use the above model, a new version of the Viterbi algorithm should be employed, one which can recursively calculate the intermediate values of the probability measure d using the second-order HMM.",
        "A second-order HMM has been introduced before (Kriouile, Mari, and Haton 1990) for other problems in the field of pattern analysis and speech recognition.",
        "In He (1988) the Viterbi algorithm is presented for a second-order HMM using the transformation of the model to a first-order with extended state space.",
        "The algorithm that was developed here uses the features of the Viterbi algorithm in a slightly different way, tailored to the needs of the PTGC problem as described in Section 2.5."
      ]
    },
    {
      "heading": "Rentzepopoulos and Kokkinakis Phoneme-to-Grapheme Using HMM",
      "text": []
    },
    {
      "heading": "2.4 Multiple-Output (N-best) Conversion Algorithm",
      "text": [
        "The Viterbi algorithm produces the overall best state sequence by maximizing the overall probability P(0 I Q).",
        "If the N best state sequences are needed, then the algorithm must be modified to keep the N best state sequences from qi through qt.",
        "Schwartz and Austin (1991) and Schwartz and Chow (1990) present the N-best algorithm in detail.",
        "The following consideration is the basis of the multiple-output conversion algorithm: Let QE {Q1 (t), Q2(t), • • • , QE(t)} be the globally E best hidden-state sequences that end at state qt = Si at a given time t. By \"best\" we mean, as usual, those sequences having the highest probability.",
        "If one of the globally E best hidden-state sequences that starts at t = 1 and ends at t = T passes from state S, at time t then it must have one of the members of QE as part of the path from time 1 to t. To prove this, only the following assumptions are required: Qx(t) is a state sequence that ends at time t at state 5,; tt (g; and WO is part of one of the",
        "Since qt = Si, the underlined part of (10) is independent from P(Qx(t)).",
        "But P(Qx(t)) < P(Q,(t)), Vi E 1... E. This means that there are at least E more paths leading to state 5, at time t that are more probable than Qm(T), which is a path among the first E most probable paths; a contradictory statement.",
        "Summarizing, we have shown that we only need to keep the locally (at any time t in 1 T) E best paths as we go along the possible state sequences for every possible state.",
        "When we arrive at the end, we only need to keep the E globally highest probabilities and trace back the states that resulted in these."
      ]
    },
    {
      "heading": "2.5 Final system",
      "text": [
        "The final version of the conversion system uses the previously mentioned methods, i.e., the second-order HMM and the N-best version of the Viterbi algorithm along with a transformation that is necessary to speed up the execution of the conversion.",
        "The algorithm as described previously has many disadvantages for a PTGC system from the implementation point of view.",
        "The values of the parameters of the model are in the range of 100.",
        "This implies that, considering storage, we need to keep in memory 100 x 100 x 100 double precision floating point numbers for matrix A along with the other data of the model and the algorithm.",
        "To be exact we need for: A: N3 double precision floating point numbers"
      ]
    },
    {
      "heading": "",
      "text": [
        "71: N double precision floating point numbers p: N2 double precision floating point numbers 6: N2 x E x T double precision floating point numbers 0: N2 x E x T short integers (for the meaning of 6 and zi) see the algorithm presented in the Appendix).",
        "In the above, if we substitute the values of the Greek PTGC system (N=140, M=70, T=30, E=4) for the symbols, we can see that we need no less than 45,708,320 bytes for storing these data.",
        "Aside from the problem of storage, the computer has to execute the inner part of the second-order-multiple-output conversion algorithm N3 x E x T/2 times (the average length of a word is about T/2), i.e., 219,520,000 times per word.",
        "As is clear from the presentation of the algorithm, this part contains a rather time-consuming sorting procedure plus a floating point multiplication.",
        "It is obvious that this is an unacceptable time delay for real-time applications.",
        "To decrease the algorithm execution time and storage needs we introduced the following improvements:",
        "a.",
        "Taking advantage of the relative sparseness of matrix B, we first determine if Bi(t) is nonzero and only then does the algorithm proceed to the rest of the processing.",
        "This has decreased the execution time of the conversion by nearly 100 times.",
        "b.",
        "We do the same for matrix A.",
        "This means that if the indices (i,j,k) indicate a zero transition probability then the algorithm proceeds without trying to calculate the overall probability, thus eliminating a floating point multiplication.",
        "c. Since at every time point the intermediate variable d(t) is calculated only from d(t – 1) we keep only two copies of dij, one for t and one for t – 1.",
        "Finally, the fact that only multiplications are involved in the processing of the conversion algorithm led us to transform the algorithm to use only additions.",
        "In the Appendix, the algorithm we implemented is presented."
      ]
    },
    {
      "heading": "3. Testing",
      "text": [
        "The proposed system has been tested and evaluated in two separate procedures: the training process and the conversion process.",
        "The training process has been performed using dictionaries that contain both the graphemic form and the phonemic form of words along with the frequency of occurrence of the words in the corpora that were used for the creation of the dictionary.",
        "The output of the training process was a file containing the model parameters (transition matrix, initial state probabilities, etc.).",
        "The conversion process has been performed using various portions of texts not included in the training texts, for which the phonemic form and the graphemic form were known.",
        "The phonemic form was converted into orthographic (graphemic) form using the algorithm and then compared with the original.",
        "To thoroughly test the performance of the system, a series of experiments was conducted.",
        "These experiments were designed so that the following set of factors could be examined:",
        "Rentzepopoulos and Kokkinakis Phoneme-to-Grapheme Using HMM",
        "• training and testing material domain: general, specialized, name directory • type of the phonetic form: correct phonemic strings, corrupted speech • language: Dutch, English, French, German, Greek, Italian, Spanish • conversion algorithm version: first-/second-order HMM For each experiment the following figures were measured: • number of words converted correctly • number of phonemes converted correctly • rank of the correct word (for the multiple-output versions of the conversion algorithm) • time response • memory requirements",
        "Details about the factors presented above and the quantities that were measured are given below."
      ]
    },
    {
      "heading": "3.1 Evaluation factors",
      "text": [
        "For all languages tested, the models were created using full-form dictionaries set up during the EEC ESPRIT project 291/860 \"Linguistic Analysis of the European Lan-guages\" (ESPRIT 1987) from corpora of about 300,000 words.",
        "These dictionaries cover three domains: office environment, newspapers, and law.",
        "The input to the conversion process was separate 10,000 word texts not included in the training dictionaries.",
        "The testing material was taken from the above domains.",
        "Furthermore, for Greek, two additional dictionaries of proper names provided by the ONOMASTICA (LRE 61004) project were used for training and testing the algorithm in a name directory environment.",
        "This was done to get a more accurate indication of the system's performance in applications where a complete dictionary can never be available.",
        "A second set of training and testing material was created from the above using a phoneme confusion matrix that simulated the output of a speech recognizer.",
        "The confusion matrix relates the input (correct) with the output (corrupted) phonemes employing probabilities of the form m11 = P(Oout = PI I Oin = P,).",
        "The texts used for the training and testing phase were corrupted according to these probabilities.",
        "Different confusion matrices were applied to show the degradation of the performance as a function of the input phonemic corruption.",
        "In Section 4.2, the two sets of results are presented and compared.",
        "Finally, one more experiment per language was performed using a first-order HMM, so that the ambiguity in each of the languages tested could be revealed and a comparison of the performance of the two HMM models could be made."
      ]
    },
    {
      "heading": "3.2 Performance Criteria",
      "text": [
        "For every experiment carried out, the success rate of the conversion algorithm was measured for each output candidate (the system was asked to produce a maximum of four candidates if available) in two levels: a.",
        "Errors at word (state sequence) level: The system counts one error for every phonemic word not converted correctly to its graphemic form.",
        " b.",
        "Errors at symbol (state) level: The system counts one error for every graphemic symbol (unit grapheme) that does not match with the corresponding symbol of the correct graphemic transcription.",
        "As an example, if instead of the correct transcription of the Hellenic word /trapzi/ 'table' to the graphemic form rpa7re0, the system produces rpa7IA'n, this counts for one error per one word (i.e., 100% error) and for one error per seven symbols (or 14.3% error).",
        "This distinction was made because the first error type (word error) is more important from the user's point of view, while the second type (symbol error) is a more objective measure of the performance of the system.",
        "In addition to these error types, the average symbol errors per incorrect word were counted.",
        "This is a measure of the quality of the system output since it shows whether an incorrect word is easily comprehensible or not.",
        "Another very important feature was also measured: the position in the output list of the correct candidate.",
        "The distribution of this variable is very important, so that decisions about the trade-off between speed and accuracy can be made.",
        "Finally, for each experiment, the amount of time and computer memory needed were counted, to get a measure of the applicability of the algorithm in real-time applications when using general or special-purpose hardware."
      ]
    },
    {
      "heading": "4. Results",
      "text": []
    },
    {
      "heading": "4.1 Explanation of tables and charts",
      "text": [
        "In all tables and charts some symbols have been used to designate the different parameters of the experiments.",
        "More precisely, Exp n (n 1, 2, 3) designates the experiment type as follows: Exp 1: uses a first-order HMM with correct phonemic representation of the input Exp 2: is like Exp 1 but uses a second order HMM Exp 3: is like Exp 2 but with corrupted phonemic representation simulating the output of a speech recognizer The letter combinations El, E2, and NE show the domain of the experiment: El experiments use the office environment corpora for training and assessment, E2 the law corpora, NE the newspaper corpora.",
        "For the name corpus (Table 8) N1 shows experiments using a corpus of surnames and OD experiments using a corpus of street names.",
        "It must be noted that in all experiments the testing material was not included in the training of the model although it may belong to the same domain.",
        "In Tables 1 through 8 the model parameters for all the models created for the experiments mentioned above are presented.",
        "The columns show the density (i.e., the number of nonzero elements) of the respective model parameters (initial hidden-state probability vector 7, initial hidden-state pair probability vector p, observation-symbol probability matrix B, and hidden-state transition probability matrix A).",
        "The values are percentages.",
        "The matrix density is a way of measuring the saturation of the model, that is, whether the model is sufficiently objective or is too dependent on the nature of the training material.",
        "One can see from these tables the important differences between the languages on which the experiments were performed.",
        "In Tables 9 to 17, a summary of the conversion results is presented for the three sets of experiments carried out.",
        "The columns have the following meaning: d: 1511,, x 100% where Iz is the size of a word in error (in characters), 1, is the number of incorrect characters in the word, and 1,11,, x 100% is the mean value estimated over all wrong words.",
        "This number is a measure of the similarity of wrong words with the corresponding correct words (percentage).",
        "A small percentage indicates a high similarity.",
        "1(s): symbol conversion success rate for the first position (percentage).",
        "1(w): word conversion success rate for the first position (percentage).",
        "1-2, etc: word conversion success rate accounting for all the referenced positions (percentage).",
        "Figures 2 through 10 give an analytic overview of the results in each language.",
        "The legends of these figures have the form cc/n where cc is a two letter code for the corpus domain (E1/E2/NE/N1/0D, as described in the beginning of this section) and n is either 1 for a first-order model or 2 for a second-order model.",
        "For example, the legend El/1 means that text of the domain E1 (office environment) was used with a first-order HMM for the experiment.",
        "In Figures 11 to 13, a summary for each type of experiment is shown in order to compare the performance between the languages.",
        "In Figure 14 the average number of times an output position is occupied is given for all the languages.",
        "Finally, in Figure 15, the degradation of performance as a function of the corrupted input words is shown.",
        "The differences in performance between the languages and the types of domains and models used are discussed in the following section."
      ]
    },
    {
      "heading": "4.2 Comments on the Performance of the Proposed System",
      "text": [
        "One can initially observe the number of times the algorithm produced a word in each position 1 to 4 (Figure 14).",
        "This number decreases very fast from the first to the last position for most of the languages, which shows that the system does not produce extreme spellings of the input words (even though these may be allowed by the language).",
        "The second very interesting feature revealed in Tables 9 to 17 is that the improvement in the system's performance decreases rapidly from the first to the last position of the output, which means that the majority of correct suggestions is included in the first two positions.",
        "Column /(s) shows that the percentage of erroneous symbols is very small indeed, while column d shows that even though a word may be incorrect, only a small percentage of its symbols may be wrong (about 15% on average in Exp 2), which proves that the output of the algorithm is very easily human-readable even when it contains errors.",
        "The performance of the algorithm varied widely, depending on the language being tested.",
        "This is due to the differences in spelling in each language and, consequently, to the training the model required.",
        "As described in Section 3.1, the available material for training were 300k-word corpora for all languages.",
        "This amount was sufficient for some languages (Dutch, German, Italian, Greek, and Spanish) but insufficient for",
        "Overview of results for German.",
        "Overview of results for Greek.",
        "Overview of results for Spanish.",
        "Overview of results for names.",
        "others (English and French).",
        "A more detailed presentation of the algorithm's behavior in the languages tested follows.",
        "For Dutch, the model gives relatively good results (97.6% for four output candidates).",
        "Spelling in Dutch is rather straightforward for etymologically Dutch words, but words of foreign origin are usually spelled as in the lauguage of their origin.",
        "These words are responsible for most of the errors encountered.",
        "The model performed worse for English than for the other languages mainly because the relationship between pronunciation and spelling is less regular.",
        "This resulted in fewer grapheme transitions in the training corpus and meant that the standard training period was insufficient.",
        "Another problem is that compound words usually keep the initial pronunciation of their components (e.g., in words such as \"whatsoever\", \"therefore\", etc.",
        "); this leads to many errors for an algorithm like the one proposed here, which has no information about the origin and etymology of each word.",
        "Similar work (Parfitt and Sharman 1991) shows the same problems in a slightly different context.",
        "Of course, more training of the model would improve performance.",
        "With French, there is a special problem, which does not occur with other languages: there exist many homophones that are distinguished only by the presence or absence of various mute letters at the ends of the words.",
        "This feature significantly increases the number of states that have to be defined.",
        "Consequently, the available training material was inadequate for the creation of a correct model, and led to poor performance.",
        "The model performed well with German.",
        "The only drawback was the decision about the type of the first letter (uppercase or lowercase); nouns always start with a capital letter while other words do not.",
        "This is the primary cause of the errors introduced in the experiments with German.",
        "Experiments ignoring this ambiguity significantly improved the German results as can be seen from a comparison of Figure 5",
        "Degradation of output vs input corruption.",
        "and Figure 6.",
        "With Greek, the model behaved quite well, reaching more than 99% success for the second-order HMM experiments with up to four output candidates.",
        "Figure 7 illustrates the difference between the performance of Exp 1 and Exp 2 (order of model) in the first output position.",
        "These results are the consequence of two contradictory features of the Greek language: a. every grapheme is usually pronounced in the same way (i.e., corresponds to one phoneme), and b. every phoneme usually has more than one possible spellings regardless of its neighboring phonemes.",
        "As an example, the phoneme /i/ can be transcribed as z, v, Ez, and oz in almost any context (Petrounias 1984; Setatos 1974).",
        "Other problems arise from the consonants, which can be either single or double without any change in the pronunciation.",
        "Finally, the model gave extremely good results with Italian and Spanish, reaching more than 99% success for the second order model and up to two or three output candidates for known and unknown text experiments, respectively.",
        "This is because there is usually a one-to-one correspondence between phonemes and graphemes in these languages.",
        "Another dimension of the analysis of the results is the domain of the experiment.",
        "The model behaved best in experiments that used the newspaper corpora, which are more casual in style and richer in vocabulary than the other domains.",
        "These corpora usually contain more grapheme transitions, which give greater detail about the spelling mechanism of the language, and provide the most efficient training possible.",
        "The",
        "experiments on the Name corpora resulted in lower scores than the corresponding experiments on the Hellenic general corpora reaching 92.3% for Exp 1, 98.3% for Exp 2, and 93.4% for Exp 3 for four output candidates.",
        "The main difference in the success rate (Table 17) is due to the size of the training corpora (the training, especially with the street names, was inadequate) and to the fact that names are usually spelled or pronounced in a more arbitrary way than other words.",
        "Finally, as expected, the model performed worse in experiments using as input a simulation of a speech recognizer output (distorted speech) than in the corresponding experiments using a correct phonemic representation of the words.",
        "However, by measuring the ambiguity introduced by the speech recognizer output, it can be seen that the PTGC system in fact improved the performance of the overall system (recognizer simulator and PTGC).",
        "This was also expected, since in the training phase the model is trained using the correct graphemic form of the words, which is later reproduced in the conversion experiments.",
        "Evidently, the performance of the algorithm depends on the amount of distortion introduced in the input phonemic string.",
        "Figure 15 shows the degradation of the success rate of the algorithm as a function of the corruption of the input stream.",
        "The dashed lines refer to a first-order HMM experiment, while the solid lines refer to a second-order HMM experiment.",
        "The input degradation does not affect the overall system performance very much (in any of the four output positions) even when more than 85% of the input words have at least one incorrect phoneme.",
        "It must be noted that, in this case, about 30% of the input symbols (unit phonemes) have been replaced by erroneous ones but still the score of the first four positions remains above 98%."
      ]
    },
    {
      "heading": "5. Conclusion",
      "text": [
        "We have presented a system for phoneme-to-grapheme conversion (PTGC) at the word level that uses the principles of hidden Markov models to statistically correlate the graphemic forms to the phonemic forms of a natural language.",
        "A first and second-order HMM have been created and the Viterbi and N-best algorithm have been used for the conversion.",
        "In the latter case, experimentation showed that no more than two solutions (output candidates) are necessary to produce the correct output with an accuracy higher than 96% for most of the languages the system was tested on.",
        "If four output candidates are allowed, then this rate reaches 97% to 100%.",
        "Moreover, it must be noted that the success rate of the system, although already good enough, can be further improved by better training on a larger corpus of selected texts.",
        "An important advantage of the system presented here, in comparison to rule-based or dictionary lookup systems, is that it produces only one (or at least very few) graphemic suggestions for each phonemic word.",
        "In the first case (one suggestion), no language model is needed to disambiguate potential homophones at sentence level.",
        "In the second case (a few suggestions), the execution speed of the system is substantially higher than in rule-based or dictionary-based systems, due to the small number of suggestions per word.",
        "The prototype system, which was implemented on a 486-based personal computer, responded at an average rate of one word per second for Exp 2 (second-order HMM) and about ten times faster for Exp 1 (first-order model).",
        "The fact that the algorithm scans the input word linearly (once from the beginning to the end) means that it can work in parallel with other modules of speech recognition systems and produce output with a very short delay after the end of the input.",
        "Another advantage of this system is that it can work in any language in which the pronunciation of the words is statistically dependent only on their spelling.",
        "The only language-specific part of the system, i.e., the algorithm for the segmentation rule",
        "Rentzepopoulos and Kokkinakis Phoneme-to-Grapheme Using HMM definition, is straightforward and does not need any special linguistic knowledge but only familiarity with the target language to be processed.",
        "The system is not limited by any dictionary.",
        "This is a significant advantage in very large or unlimited dictionary applications.",
        "An implication of this property is that the system does not try to match the input utterance to the closest word (by some measure of distance) contained in the dictionary but rather tries to find its most probable spelling.",
        "In this sense, the output of the PTGC system never misleads the final human user about what the input was.",
        "Note also that the system is symmetric between the two forms of a natural language: graphemic and phonemic.",
        "This implies that without any modification, the algorithm can be used in the reverse order (i.e., for a grapheme-to-phoneme conversion system, widely used in text-to-speech [or speech synthesis] systems) by just interchanging the phonemic with the graphemic data of the training procedure.",
        "Last but not least, the fact that the system is not rule based but uses an algorithm based on probabilities makes it possible to implement the system in hardware, resulting in a system adaptable to any real-time speech recognition system.",
        "As can be seen in the equations of the appendix the algorithm is highly parallel since the values of djk(t) are independently computed from the values of d1(t – 1); this means that these calculations can be performed concurrently.",
        "In this manner, the response time of the complete algorithm can be proportional to N2 rather than to N3, yielding a system that can serve as a module for any real-time speech recognition system.",
        "In conclusion, the proposed method has the following advantages:",
        "• It is language independent, making it adaptable it to any language with little effort.",
        "• It does not need a dictionary and thus is free of any restrictions.",
        "• It gives only one or very few transcriptions per word.",
        "• It can be implemented in hardware and serve in real-time speech recognition systems."
      ]
    },
    {
      "heading": "Appendix: Implementation Notes",
      "text": [
        "The fact that only multiplications are involved in the processing of the conversion algorithm led us to convert the algorithm to use only additions.",
        "Instead of using probabilities, we used their negative logarithm, thus yielding distances.",
        "This transformation offers two advantages: First, a four-byte integer representation is used for each number instead of a ten-byte floating point representation, without any loss of accuracy, thus reducing memory requirements.",
        "Second, a substantial increase in processing speed is achieved, since the fixed point addition is faster than floating point multiplication.",
        "Clearly, since the probability P is a number between 0 and 1, –log(P) is a number in the range 0 ... oo.",
        "In order to reduce computation, one of the two library-supplied logarithm functions had to be used, i.e., logio or loge.",
        "It can easily be seen that if a > b, then – loge (P) < – logo (P).",
        "For this reason the natural logarithms (base e = 2.71828) were chosen instead of decimal logarithms.",
        "To benefit from the above transformation, a fixed point arithmetic should be used (floating point addition is as troublesome as floating point multiplication if not more).",
        "At this point, we had to make decisions taking into account implementation-specific parameters.",
        "The system was implemented using the C programming language on",
        "a 486-based computer in protected mode, thus exploiting its full 32-bit architecture.",
        "The probabilities are first calculated using the greatest available floating point representation, which is 80 bits for a long double floating point number.",
        "The smallest nonzero value of P in this representation (and effectively its best resolution) is 3.4 x 10-4932 corresponding to the greatest value of - log(P), which is 11,355.126.",
        "An unsigned long integer has a 32-bit dynamic range, which results in a maximum value of 232 = 4,294,967, 295.",
        "Since for every state we need to add two distances, one from matrix A and one from matrix B, we must be sure that there will be no overflow after all the additions that must be made for each word.",
        "The system as tested uses a maximum number of 30 states per word, a constant that has not yet been surpassed by any word in all the languages in which it was tested.",
        "This means that the maximum distance value must be 232/60 = 71,582,788, which results in a scaling factor f = 71,582,788/11,355.126 = 63, 040.",
        "By multiplying every distance with this factor and truncating it to its integral part, it is guaranteed that there will be no overflow in the execution of the Viterbi algorithm.",
        "This fact allows the elimination of code that would check for overflow during the algorithm, resulting in a much faster code.",
        "For reference, the complete algorithm converted to work with logarithms (as it was implemented) is presented below: Let a', 131, 71-1 and p' be the HMM parameters after the above transformation and normalization (e.g., a4 = f • Lloge(auk)] where f(= 63, 040) is the factor that was used to facilitate fixed point arithmetic).",
        "Then we inductively compute the locally minimum distance S' and the path as follows:",
        "where d* is a vector containing the E minimum distance values that correspond to the E state sequences (2e {qt}, t 1 T, e = 1 E, which are returned as the best (most probable) state sequences."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "The text corpora used for the training and assessment of the system were gathered and transcribed to their phonemic form during the EEC ESPRIT-1 Project 860 \"Linguistic Analysis of the European Languages.\" The name directory corpora were obtained from the LRE-61004 ONOMASTICA project.",
        "The authors wish to thank Dr. Anastassios Tsopanoglou and Dr. Evaggelos Dermatas for their comments on the paper and their valuable assistance in the final preparation of the manuscript."
      ]
    }
  ]
}
