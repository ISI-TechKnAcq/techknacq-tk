{
  "info": {
    "authors": [
      "Martin Majli≈°"
    ],
    "book": "EACL",
    "id": "acl-E12-3006",
    "title": "Yet Another Language Identifier",
    "url": "https://aclweb.org/anthology/E12-3006",
    "year": 2012
  },
  "references": [
    "acl-L08-1118",
    "acl-N10-1027"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Language identification of written text has been studied for several decades.",
        "Despite this fact, most of the research is focused on a few most spoken languages, whereas the minor ones are ignored.",
        "The identification of a larger number of languages brings new difficulties that do not occur for a few languages.",
        "These difficulties are causing decreased accuracy.",
        "The objective of this paper is to investigate the sources of such degradation.",
        "In order to isolate the impact of individual factors, 5 different algorithms and 3 different number of languages are used.",
        "The Support Vector Machine algorithm achieved an accuracy of 98% for 90 languages and the YALI algorithm based on a scoring function had an accuracy of 95.4%.",
        "The YALI algorithm has slightly lower accuracy but classifies around 17 times faster and its training is more than 4000 times faster.",
        "Three different data sets with various number of languages and sample sizes were prepared to overcome the lack of standardized data sets.",
        "These data sets are now publicly available."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The task of language identification has been studied for several decades, but most of the literature is about identifying spoken language1.",
        "This is mainly because language identification of written form is considered an easier task, because it does not contain such variability as the spoken form, such as dialects or emotions.",
        "tasks and in some of them simple rules2 are often good enough.",
        "But for many other applications, such as web crawling, question answering or multilingual documents processing, more sophisticated approaches need to be used.",
        "This paper first discusses previous work in Section 2, and then presents possible hypothesis for decreased accuracy when a larger number of languages is identified in Section 3.",
        "Data used for experiments is described in Section 4, along with methods used in experiments for language identification in Section 5.",
        "Results for all methods as well as comparison with other systems is presented in Section 6."
      ]
    },
    {
      "heading": "2 Related Work",
      "text": [
        "The methods used in language identification have changed significantly during the last decades.",
        "In the late sixties, Gold (1967) examined language identification as a task in automata theory.",
        "In the seventies, Leonard and Doddington (1974) was able to recognize five different languages, and in the eighties, Beesley (1988) suggested using cryp-toanalytic techniques.",
        "Later on, Cavnar and Trenkle (1994) introduced their algorithm with a sliding window over a set of characters.",
        "A list of the 300 most common n-grams for n in 1..5 is created during training for each training document.",
        "To classify a new document, they constructed a list of the 300 most common n-grams and compared n-grams position with the testing lists.",
        "The list with the least differences is the most similar one and new document is likely to be written in same language.",
        "They classified 3478 samples in 14 languages from a newsgroup and reported an achieved accuracy of 99.8%.",
        "This influenced many researches that were trying different heuristics for selecting n-grams, such as Martins and Silva (2005) which achieved an accuracy of 91.25% for 12 languages, or Hayati (2004) with 93.9% for 11 languages.",
        "Sibun and Reynar (1996) introduced a method for language detection based on relative entropy, a popular measure also known as Kullback-Leibler distance.",
        "Relative entropy is a useful measure of the similarity between probability distributions.",
        "She used texts in 18 languages from the European Corpus Initiative CD-ROM.",
        "She achieved a 100% accuracy for bigrams.",
        "In recent years, standard classification techniques such as support vector machines also became popular and many researchers used them Kruengkrai et al(2005) or Baldwin and Lui (2010) for identifying languages.",
        "Nowadays, language recognition is considered as an elementary NLP task3 which can be used for educational purposes.",
        "McNamee (2005) used single documents for each language from project Gutenberg in 10 European languages.",
        "He preprocessed the training documents ?",
        "the texts were lower-cased, accent marks were retained.",
        "Then, he computed a so-called profile of each language.",
        "Each profile consisted of a percentage of the training data attributed to each observed word.",
        "For testing, he used 1000 sentences per language from the Euro-parliament collection.",
        "To classify a new document, the same preprocessing was done and inner product based on the words in the document and the 1000 most common words in each language was computed.",
        "Performance varied from 80.0% for Portuguese to 99.5% for German.",
        "Some researches such as Hughes et al(2006) or Grothe et al(2008) focused in their papers on the comparison of different approaches to language identification and also proposed new goals in that field, such as as minority languages or languages written non-Roman script.",
        "Most of the researches in the past identified mostly up to twenty languages but in recent years, language identification of minority languages became the focus of Baldwin and Lui (2010), Choong et al(2011), and Majlis?",
        "(2012).",
        "All of them observed that the task became much"
      ]
    },
    {
      "heading": "3 Hypothesis",
      "text": [
        "The accuracy degradation with a larger number of languages in the language identification system may have many reasons.",
        "This section discusses these reasons and suggests how to isolate them.",
        "In some hypotheses, charts involving data from the W2C Wiki Corpus are used, which are introduced in Section 4."
      ]
    },
    {
      "heading": "3.1 Training Data Size",
      "text": [
        "In many NLP applications, size of the available training data influences overall performance of the system, as was shown by Halevy et al(2009).",
        "To investigate the influence of training data size, we decided to use two different sizes of training data ?",
        "1 MB and 4 MB.",
        "If the drop in accuracy is caused by the lack of training data, then all methods used on 4 MB should outperform the same methods used on 1 MB of data."
      ]
    },
    {
      "heading": "3.2 Language Diversity",
      "text": [
        "The increasing number of languages recognised by the system decreases language diversity.",
        "This may be another reason for the observed drop in the accuracy.",
        "We used information about language classes from the Ethnologue website (Lewis, 2009).",
        "The number of different language classes is depicted in Figure 1.",
        "Class 1 represents the most distinguishable classes, such as Indo-European vs. Japonic, while Class 2 represents finer classification, such as Indo-European, Germanic vs. Indo-European, Italic.",
        "guages are sorted according to their text corpus size.",
        "The first 52 languages belong to 15 different Class 1 classes and the number of classes does not",
        "change until the 77th language, when the Swahili language from class Niger-Congo appears."
      ]
    },
    {
      "heading": "3.3 Scalability",
      "text": [
        "Another issue with increasing number of languages is the scalability of used methods.",
        "There are several pitfalls for machine learning algorithms ?",
        "a) many languages may require many features which may lead to failures caused by curse-of-dimensionality, b) differences in languages may shrink, so the classifier will be forced to learn minor differences and will lose its ability to generalise, and become overfitted, and c) the classifier may internally use only binary classifiers which may lead up to quadratic complexity (Dimitriadou et al. 2011)."
      ]
    },
    {
      "heading": "4 Data Sets",
      "text": [
        "For our experiments, we decided to use the W2C Wiki Corpus (Majlis?, 2012) which contains articles from Wikipedia.",
        "The total size of all texts was 8 GB and available material for various languages differed significantly, as is displayed in",
        "Languages are sorted according to their size in the corpus.",
        "We used this corpus to prepare 3 different data sets.",
        "We used one of them for testing hypothesis presented in the previous section and the remaining two for comparison with other systems.",
        "These data sets contain samples of length approximately 30, 140, and 1000 bytes.",
        "The sample of length 30 represents image caption or book title, the sample of length 140 represents tweet or user comment, and sample of length 1000 represents newspaper article.",
        "All datasets are available at http://ufal.",
        "mff.cuni.cz/?majlis/yali/."
      ]
    },
    {
      "heading": "4.1 Long",
      "text": [
        "The main purpose of this data set (yali-datasetlong) was testing hypothesis described in the previous section.",
        "To investigate the drop, we intended to cover around 100 languages, but the amount of available data limited us.",
        "For example, the 80th language has 12 MB, whereas the 90th has 6 MB and tbe 100th has only 1 MB of text.",
        "To investigate the hypothesis of the influence of training data size, we decided to build a 1 MB and 4 MB corpus for each language, where the 1 MB corpus is a subset of the 4 MB one.",
        "Then, we divided the corpus for each language into chunks with 1000 bytes of text, so we gained 1000 and 4000 chunks respectively.",
        "These chunks were divided into training and testing sets in a 90:10 ratio, thus we had 900 and 3600 training chunks, respectively, and 100 and 400 testing chunks respectively.",
        "To reduce the risk that the training and testing are influenced by the position from which they were taken (the beginning or the end of the corpus), we decided to use every 10th sentence as a testing one and use the remaining ones for training.",
        "Then, we created an n-gram for n in 1..4 frequency list for each language, each corpus size.",
        "From each frequency list, we preserved only the first m = 100 most frequent n-grams.",
        "For example, from the raw frequency list ?",
        "a: 5, b: 3, c: 1, d: 1, and m = 2, frequency list a: 5, b: 3 would be created.",
        "We used this n-grams as features for testing classifiers."
      ]
    },
    {
      "heading": "4.2 Small",
      "text": [
        "The second data set (yali-dataset-small ) was prepared for comparison with Google Translate4 (GT).",
        "The GT is paid service capable of recognizing 50 different languages.",
        "This data set contains 50 samples of lengths 30 and 140 for 48 languages, so it contains 4,800 samples in total."
      ]
    },
    {
      "heading": "4.3 Standard",
      "text": [
        "The purpose of the third data sets is comparison with other systems for language identification.",
        "This data set contains 700 samples of length 30, 140, and 1000 for 90 languages, so it contains in total 189,000 samples."
      ]
    },
    {
      "heading": "5 Methods",
      "text": [
        "To investigate the influence of the language diversity, we decided to use 3 different language counts ?",
        "30, 60, and 90 languages sorted according to their raw text size.",
        "For each corpus size (cS ?",
        "{1000, 4000}), language count (lC ?",
        "{30, 60, 90}), and n-gram size (n ?",
        "{1, 2, 3, 4}) we constructed a separate dictionary D(cS,lC,n) containing the first 100 most frequent n-grams for each language.",
        "The number of items in each dictionary is displayed in Table 1 and visualised for 1 MB corpus in Figure 3.",
        "The dictionary sizes for 4 MB corpora were slightly higher when compared to 1 MB corpora, but surprisingly for 30 languages it was mostly opposite.",
        "tionary D(1000,lC,n).",
        "Languages are sorted according to their text corpus size.",
        "Then, we converted all texts into matrices in the following way.",
        "For each corpus size (cS ?",
        "{1000, 4000}), language count (lC ?",
        "{30, 60, 90}), and n-gram size (n ?",
        "{1, 2, 3, 4}) we constructed a training matrix Tr(cS,lC,n) and a testing matrix Te(cS,lC,n), where element on Tr(cS,lC,n)i,j represents the number of occurrences of j-th n-gram from dictionary D(cS,lC,n) in training sample i, and Tr(cS,lC,n)i,0 represents language of that sample.",
        "The training matrix Tr(cS,lC,n) has dimension (0.9 ?",
        "cS ?",
        "lC) ?",
        "(1 + |D(cS,lC,n) |) and the testing matrix Te(cS,lC,n) has dimension (0.1 ?",
        "cS ?",
        "lC)?",
        "(1 + |D(cS,lC,n) |).",
        "For investigating the scalability of the different approaches to language identification, we decided to use five different methods.",
        "Three of them were based on standard classification algorithms and two of them were based on scoring function.",
        "For experimenting with the classification algorithms, we used R (2009) environment which contains many packages with machine learning algorithms5, and for scoring functions we used Perl."
      ]
    },
    {
      "heading": "5.1 Support Vector Machine",
      "text": [
        "The Suport Vector Machine (SVM) is a state of the art algorithm for classification.",
        "Hornik et al. (2006) compared four different implementations and concluded that Dimitriadou et al(2011) implementation available in the package e1071 is the fastest one.",
        "We used SVM with sigmoid kernel, cost of constraints violation set to 10, and termination criterion set to 0.01."
      ]
    },
    {
      "heading": "5.2 Naive Bayes",
      "text": [
        "The Naive Bayes classifier (NB) is a simple probabilistic classifier.",
        "We used Dimitriadou et al. (2011) implementation from the package e1071 with default arguments."
      ]
    },
    {
      "heading": "5.3 Regression Tree",
      "text": [
        "Regression trees are implemented by Therneau et al.",
        "(2010) in the package rpart.",
        "We used it with default arguments."
      ]
    },
    {
      "heading": "5.4 W2C",
      "text": [
        "The W2C algorithm is the same as was used by Majlis?",
        "(2011).",
        "From the frequency list, probability is computed for each n-gram, which is used as a score in classification.",
        "The language with the highest score is the winning one.",
        "For example, from the raw frequency list ?",
        "a: 5, b: 3, c: 1, d: 1, and m=2, the frequency list a: 5; b: 3, and computed scores ?",
        "a: 0.5, b: 0.3 would be created."
      ]
    },
    {
      "heading": "5.5 Yet Another Language Identifier",
      "text": [
        "The Yet Another Language Identifier (YALI) algorithm is based on the W2C algorithm with two small modifications.",
        "The first is modification in n-gram score computation.",
        "The n-gram score is not based on its probability in raw data, but rather on its probability in the preserved frequency list.",
        "So for the numbers used in the W2C example, we would receive scores ?",
        "a: 0.625, b: 0.375.",
        "The second modification is using rather byte n-grams instead of character n-grams."
      ]
    },
    {
      "heading": "6 Results & Discussion",
      "text": [
        "At the beginning we used only data set yali-dataset-long to investigate the influence of various set-ups.",
        "The accuracy of all experiments is presented in Table 2, and visualised in Figure 4 and Figure 5.",
        "These experiments also revealed that algorithms are strong in different situations.",
        "All classification techniques outperform all scoring functions on short n-grams and small amount of languages.",
        "However, with increasing n-gram length, their accuracy stagnated or even dropped.",
        "The increased number of languages is unmanageable for NB a RPART classifiers and their accuracy significantly decreased.",
        "On the other hand, the accuracy of scoring functions does not decrease so much with additional languages.",
        "The accuracy of the W2C algorithm decreased when greater training corpora was used or more languages were classified, whereas the YALI algorithm did not have these problems, but moreover its accuracy increased with greater training corpus.",
        "n-gram length with respect to the number of languages.",
        "The highest accuracy for all language amounts ?",
        "30, 60, 90 was achieved by the SVM with accuracies of 100%, 99%, and 98.5%, respectively, followed by the YALI algorithm with accuracies of 99.9%, 96.8%, and 95.4% respectively.",
        "From the obtained results, it is possible to notice that 1 MB of text is sufficient for training language identifiers, but some algorithms achieved higher accuracy with more training material.",
        "Our next focus was on the scalability of the used algorithms.",
        "Time required for training is presented in Table 3, and visualised in Figures 6 and 7.",
        "The training of scoring functions required only loading dictionaries and therefore is extremely fast, whereas training classifiers required complicated computations.",
        "The scoring functions did not have any advantages, because all algorithms had to load all training examples, segment them, extract the most common n-grams, build dictionaries, and convert text to matrices as was described in Section 5.",
        "n-gram length with respect to the number of languages.",
        "Time required for training increased dramatically for SVM and RPART algorithms when the number of languages or the corpora size increased.",
        "It is possible to use the SVM only with unigrams or bigrams, because training on trigrams required 12 times more time for 60 languages compared with 30 languages.",
        "The SVM also had problems with increasing corpora sizes, because it took almost 10-times more time when the corpus size increased 4 times.",
        "Scoring functions scaled well and were by far the fastest ones.",
        "We terminated training the SVM on trigrams and quad-grams for 90 languages after 5 days of computation.",
        "Finally, we also measured time required for classifying all testing examples.",
        "The results are in Table 4, and visualised in Figure 8 and Figure 6.",
        "Times displayed in the table and charts represents the number of seconds needed for classifying 1000 chunks.",
        "Prediction time for 1 MB corpus and the best n-gram length with respect to the number of languages.",
        "The RPART algorithm was the fastest classifier followed by both scoring functions, whereas NB was the slowest one.",
        "All algorithms with 4 times more data achieved slightly higher accuracy, but their training took 4 times longer, with the exception of the SVM which took at least 10 times longer.",
        "The SVM algorithm is the least scalable",
        "eters.",
        "Label Acc represents accuracy, Tre represents training time in seconds, and Pre represents prediction time for 1000 chunks in seconds.",
        "algorithm of all the examined ?",
        "all the rest required proportionally more time for training and prediction when the greater training corpus was used or more languages were classified.",
        "The comparison of all methods is presented in Table 5.",
        "For each model we selected the n-grams size with the best trade-off between accuracy and time required for training and prediction.",
        "The two most accurate algorithms are SVM and YALI.",
        "The SVM achieved the highest accuracy for all languages but its training took around 4000 times longer and classification was around 17 times slower than the YALI.",
        "In the next step we evaluated the YALI algorithm for various size of selected n-grams.",
        "These",
        "accuracy.",
        "experiments were evaluated on the data set yali-dataset-standard.",
        "Achieved results are presented in Table 6.",
        "The number of used n-grams increased the accuracy for short samples from 64.9% to 75.0% but it had no effect on long samples.",
        "As the last step in evaluation we decided to compare the YALI with Google Translate (GT), which also provides language identification for 50 languages through their API.6 For comparison we used data set yali-dataset-small which contains 50 samples of length 30 and 140 for each language (4800 samples in total).",
        "Achieved results are presented in Table 7.",
        "The GT and the YALI perform comparably well on samples of length 30 on which they achieved accuracy 93.6% and 93.1% respectively, but on samples of length 140 GT with accuracy 97.3% outperformed YALI with accuracy 94.8%."
      ]
    },
    {
      "heading": "7 Conclusions & Future Work",
      "text": [
        "In this paper we compared 5 different algorithms for language identification ?",
        "three based on the",
        "standard classification algorithms (Support Vector Machine (SVM), Naive Bayes (NB), and Regression Tree (RPART)) and two based on scoring functions.",
        "For investigating the influence of the amount of training data we constructed two corpora from the Wikipedia with 90 languages.",
        "To investigate the influence of number if identified languages we created three sets with 30, 60, and 90 languages.",
        "We also measured time required for training and classification.",
        "Our experiments revealed that the standard classification algorithms requires at most bigrams while the scoring ones required quad-grams.",
        "We also showed that Regression Trees and Naive Bayes are not suitable for language identification because they achieved accuracy 64.3% and 75.4% respectively.",
        "The best classifier for language identification was the SVM algorithm which achieved accuracy 98% for 90 languages but its training took 4200 times more and its classification was 16 times slower than the YALI algorithm with accuracy 95.4%.",
        "This YALI algorithm has also potential for increasing accuracy and number of recognized languages because it scales well.",
        "We also showed that the YALI algorithm is comparable with the Google Translate system.",
        "Both systems achieved accuracy 93% for samples of length 30.",
        "On samples of length 140 Google Translate with accuracy 97.3% outperformed YALI with accuracy 94.8%.",
        "All data sets as well as source codes are available at http://ufal.mff.cuni.cz/ ?majlis/yali/.",
        "In the future we would like to focus on using described techniques not only on recognizing languages but also on recognizing character encodings which is directly applicable for web crawling."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "The research has been supported by the grant Khresmoi (FP7-ICT-2010-6-257528 of the EU and 7E11042 of the Czech Republic)."
      ]
    }
  ]
}
