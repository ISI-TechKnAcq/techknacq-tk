{
  "info": {
    "authors": [
      "Anja Belz",
      "Eric Kow"
    ],
    "book": "Proceedings of the 12th European Workshop on Natural Language Generation (ENLG 2009)",
    "id": "acl-W09-0603",
    "title": "System Building Cost vs. Output Quality in Data-to-Text Generation",
    "url": "https://aclweb.org/anthology/W09-0603",
    "year": 2009
  },
  "references": [
    "acl-E06-1040",
    "acl-J93-2003"
  ],
  "sections": [
    {
      "text": [
        "System Building Cost vs. Output Quality in Data-To-Text Generation",
        "Anja Belz Eric Kow",
        "Data-to-text generation systems tend to be knowledge-based and manually built, which limits their reusability and makes them time and cost-intensive to create and maintain.",
        "Methods for automating (part of) the system building process exist, but do such methods risk a loss in output quality?",
        "In this paper, we investigate the cost/quality trade-off in generation system building.",
        "We compare four new data-to-text systems which were created by predominantly automatic techniques against six existing systems for the same domain which were created by predominantly manual techniques.",
        "We evaluate the ten systems using intrinsic automatic metrics and human quality ratings.",
        "We find that increasing the degree to which system building is automated does not necessarily result in a reduction in output quality.",
        "We find furthermore that standard automatic evaluation metrics underestimate the quality of handcrafted systems and overestimate the quality of automatically created systems."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Traditional Natural Language Generation (nlg) systems tend to be handcrafted knowledge-based systems.",
        "Such systems tend to be brittle, expensive to create and hard to adapt to new domains or applications.",
        "Over the last decade or so, in particular following Knight and Langkilde's work on n-gram-based generate-and-select surface realisation (Knight and Langkilde, 1998; Langkilde, 2000), nlg researchers have become increasingly interested in systems that are automatically trainable from data.",
        "Systems that have a trainable component tend to be easier to adapt to new domains and applications, and increased automation is often taken as self-evidently a good thing.",
        "The question is, however, whether reduced system building cost and increased adaptability are achieved at the price of a reduction in output quality, and if so, how great the price is.",
        "This in turn raises the question of how to evaluate output quality so that a potential decrease can be detected and quantified.",
        "In this paper we set about trying to find answers to these questions.",
        "We start, in the following section, we briefly describing the SumTime corpus of weather forecasts which we used in our experiments.",
        "In the next section (Section 2), we outline four different approaches to building data-to-text generation systems which involve different combinations of manual and automatic techniques.",
        "Next (Section 4) we describe ten systems in the four categories that generate weather forecast texts in the SumTime domain.",
        "In Section 5 we describe the human-assessed and automatically computed evaluation methods we used to comparatively evaluate the quality of the outputs of the ten systems.",
        "We then present the evaluation results and discuss implications of discrepancies we found between the results of the human and automatic evaluations (Section 6).",
        "The SumTime-Meteo corpus was created by the SumTime project team in collaboration with wni Oceanroutes (Sripada et al., 2002).",
        "The corpus was collected by wni Oceanroutes from the commercial output of five different (human) forecasters, and each instance in the corpus consists of numerical data files paired with a weather forecast.",
        "The experiments in this paper focussed on the part of the forecasts that predicts wind characteristics for the next 15 hours.",
        "Figure 1 shows an example data file and Figure 2 shows the corresponding wind forecast written by one of the meteorologists.",
        "In Figure 1, the",
        "Natural Language Generation, pages 16-24, Association for Computational Linguistics",
        "FORECAST FOR : -Oil1/Oil2/Oil3 FIELDS",
        "FALLING VARIABLE 04-08 BY LATE EVENING",
        "FALLING VARIABLE 08-12 BY LATE EVENING",
        "first column is the day/hour time stamp, the second the wind direction predicted for the corresponding time period; the third the wind speed at 10m above the ground; the fourth the gust speed at 10m; and the fifth the gust speed at 50m.",
        "The remaining columns contain wave data.",
        "We used a version of the corpus reported previously (Belz, 2008) which contains pairs of wind statements and the wind data that is actually included in the statement, e.g.:",
        "SSW 16-20 GRADUALLY BACKING SSE THEN",
        "FALLING VARIABLE 4-8 BY LATE EVENING",
        "The input vector represents a sequence of 7tupleS {i,d,smin, smax ,gmin ,gmax jt) Where % is the tuple's id, d is the wind direction, sminand smax are the minimum and maximum wind speeds, gmin and gmax are the minimum and maximum gust speeds, and t is a time stamp (indicating for what time of the day the data is valid).",
        "The corpus consists of 2,123 instances, corresponding to a total of 22,985 words."
      ]
    },
    {
      "heading": "3. Four Ways to Build an NLG Systems",
      "text": [
        "In this section, we describe four approaches to building language generators involving different combinations of automatic and manual techniques: traditional handcrafted systems (Section 3.1); handcrafted but trainable probabilistic context-free grammar (pcfg) generators (Section 3.2); partly automatically constructed and trainable probabilistic synchronous context-free grammar (pscfg) generators; and generators automatically built with phrase-based statistical machine translation (pbsmt) methods (Section 3.4).",
        "In Section 4 we explain how we used these techniques to build the ten systems in our evaluation.",
        "Traditional NLG systems are handcrafted as rule-based deterministic decision-makers that make decisions locally, at each step in the generation process.",
        "Decisions are encoded as generation rules with conditions for rule application (often in the form of if-then rules or rules with parameters to be matched), usually on the basis of corpus analysis and expert consultation.",
        "Reiter and Dale's influential paper (1997) recommended that nlg systems be built largely \"by careful analysis of the target text corpus, and by talking to domain experts\" (p. 74, and reiterated on pp.",
        "58, 61, 72 and 73).",
        "Handcrafted generation tools have always formed the mainstay of NLG research, a situation virtually unchanged by the statistical revolution that swept through other NLP fields in the 1990s.",
        "Well-known examples include the surface realisers Penman, fuf/surge and RealPro, the referring expression generation components created by Dale, Reiter, Horacek and van Deemter, and content-to-text generators built in the plandoc and m-piro projects, to name but a very few.",
        "context-free grammars are non-directional, and can be used for generation as well as for analysis (parsing).",
        "One approach that uses cfgs for generation is probabilistic context-free Representationally Underspecified (pCRU) language generation (Belz, 2008).",
        "As mentioned above, traditional nlg systems tend to be composed of generation rules that apply transformations to representations.",
        "The basic idea in pCRU is that as long as the generation rules are all of the form set of all generation rules can be seen as defining a context-free language and a single probabilistic model can be estimated from raw or annotated text to guide generation processes.",
        "In this approach, a cfg is created by hand that encodes the space of all possible generation pro-",
        "SSW",
        "18",
        "22",
        "27",
        "3",
        "G",
        "4 .",
        "8",
        "SSW",
        "2",
        "59",
        "S",
        "16",
        "2G",
        "25",
        "2",
        "7",
        "4 .",
        "3",
        "SSW",
        "2",
        "39",
        "S",
        "14",
        "17",
        "21",
        "2",
        "5",
        "4 .",
        "G",
        "SSW",
        "2",
        "29",
        "S",
        "14",
        "17",
        "21",
        "2",
        "3",
        "3 .",
        "7",
        "SSW",
        "2",
        "28",
        "SSE",
        "12",
        "15",
        "18",
        "2",
        "4",
        "3 .",
        "8",
        "SSW",
        "2",
        "38",
        "SSE",
        "1G",
        "12",
        "15",
        "2",
        "4",
        "3 .",
        "8",
        "SSW",
        "2",
        "48",
        "VAR",
        "6",
        "7",
        "8",
        "2",
        "4",
        "3 .",
        "8",
        "SSW",
        "2",
        "48",
        "Table 1: Example input with corresponding outputs by all systems and from the corpus (for 5 Oct 2000).",
        "cesses from inputs to outputs, and has no decisionmaking ability.",
        "A probability distribution over this base cfg is estimated from a corpus, and this is what enables decisions between alternative generation rules to be made.",
        "ThepCRU package permits this distribution to be used in one of the following three modes to drive generation processes: (i) greedy - apply only the most likely rule at each choice point; (ii) Viterbi - apply all expansion rules to each nonterminal to create the generation forest for the input, then do a Viterbi search of the generation forest; (iii) greedy roulette-wheel - select a rule to expand a nonterminal according to a non-uniform random distribution proportional to the likelihoods of expansion rules.",
        "In addition there are two baseline modes: (i) random - where generation rules are randomly selected at each choice point; and (ii) n-gram where all alternatives are generated and the most likely is selected according to an n-gram language model (as in halogen).",
        "For the simple SumTime domain, pCRU generators trained on raw corpora have been shown to perform well (Belz, 2008), but for more complex domains it is likely that manually annotated corpora will be needed for training the cfg base generator.",
        "As this is in addition to the manually constructed cfg base generator, the manual component in PCFG generator building is potentially substantial.",
        "Synchronous context-free grammars (scfgs) are used in machine translation (Chiang, 2006), but have also been used for simple concept-to-text generation (Wong and Mooney, 2007).",
        "The simplest form of scfg can be viewed as a pair of cfgs Gi,G2 with paired production rules such that for each rule in Gi there is a rule in G2 with the same left-hand side, and the same non-terminals in the right-hand side.",
        "The order of non-terminals on the rhss may differ, and each rhs may additionally contain any terminals in any order.",
        "SCFGs can be trained from aligned corpora to produce probabilistic (or 'weighted') scfgs.",
        "An scfg can equivalently be seen as a single grammar G encoding a set of pairs of strings.",
        "A probabilistic scfg is defined by the 6-tuple G = (N, Te, Tf, L, S, A), where N is afinite set of nonterminals, Te, Tf are finite sets of terminal symbols, L is a set of paired production rules, S is a start symbol € N, and A is a set of parameters that define a probability distribution of derivations under G. Each rule in L has the form A – (a; ft), where A € N, a € N U Te+, ft € N U Tf+, and N CN.",
        "In mt the two cfgs that make up an scfg are used to encode (the structure of) the two languages which the mt system translates between.",
        "Translation with an scfg then consists of (i) parsing the input string with the source language CFG to produce a derivation tree, and then (ii) generating along the same derivation tree, but using the target language cfg to produce the output string.",
        "When using SCFGs for content-to-text generation one of the paired cfgs encodes the meaning representation language, and the other the (natural) language in which text is supposed to be generated.",
        "A generation process then consists in (i) 'parsing' the meaning representation (mr) into its constituent structure, and, in the opposite direction, (ii) assembling strings of words corresponding to constituent parts of the input MR into a sentence or text that realises the entire MR.",
        "Input",
        "[[1,SSW,16,20,-,-,0600], [2,SSE,-,NOTIME] , [3,VAR,04,08,-,-,2400]]",
        "Corpus",
        "SSW 16-20 GRADUALLY BACKING SSE THEN FALLING VARIABLE 4-8 BY LATE EVENING",
        "SUMTlME-Hybrid",
        "SSW 16-20 GRADUALLY BACKING SSE THEN BECOMING VARIABLE 10 OR LESS BY MIDNIGHT",
        "PCFG-greedy PCFG-roulette PCFG-viterbi PCFG-2gram PCFG-random",
        "SSW 16-20 BACKING SSE FOR A TIME THEN FALLING VARIABLE 4-8 BY LATE EVENING SSW 16-20 GRADUALLY BACKING SSE AND VARIABLE 4-8 SSW 16-20 BACKING SSE VARIABLE 4-8 LATER SSW 16-20 BACKING SSE VARIABLE 4-8 LATER",
        "SSW 16-20 AT FIRST FROM MIDDAY BECOMING SSE DURING THE AFTERNOON THEN VARIABLE 4-8",
        "PSCFG-semantic PSCFG-unstructured",
        "SSW 16-20 BACKING SSE THEN FALLING VARIABLE 04-08 BY LATE EVENING",
        "SSW 16-20 GRADUALLY BACKING SSE THEN FALLING VARIABLE 04-08 BY LATE EVENING",
        "PB SMT-unstructured PBSMT-structured",
        "LESS SSW 16-20 SOON BACKING SSE BY END OF THEN FALLING VARIABLE 04-08 BY LATE EVENING GUSTS SSW 16-20 BY EVENING STEADILY LESS GUSTS GRADUALLY BACKING SSE BY LATE EVENING MINONE BY MIDDAY THEN AND FALLING UNKNOWN VARIABLE 04-08 LATER GUSTS",
        "provides a way in which a probabilistic scfg can be constructed for the most part automatically.",
        "The training process requires two resources as input: a cfg of mrs and a set of sentences paired with their mrs. As output, it produces a probabilistic scfg.",
        "The training process works in two phases, producing a (non-probabilistic) scfg in the 'lexical acquisition phase', and associating the rules with probabilities in the 'parameter estimation phase'.",
        "The lexical acquisition phase uses the giza++ word-alignment tool, an implementation (Och and Ney, 2003) of ibm Model 5 (Brown et al., 1993) to construct an alignment of mrs with nl strings.",
        "An scfg is then constructed by using the mr cfg as a skeleton and inferring the nl grammar from the alignment.",
        "For the parameter estimation phase, wasp-1uses a log-linear model from Koehn et al.",
        "(2003) which defines a conditional probability distribution over derivations d given an input mr f as where wA(r(d)) is the weight an individual rule used in a derivation, defined as",
        "where P(ft|a) and P(a|ft) are the relative frequencies of ft and a, Pw(ft|a) and Pw(a|ft) are lexical weights, and exp( – |a|) is a word penalty to control output sentence length.",
        "The model parameters Aj are trained using minimum error rate training.",
        "Compared to probabilistic cfgs, wasp-1 trained probabilistic scfgs have a much reduced manual component in system building.",
        "In the latter, the nl grammar for the output language, the mapping from mrs to word strings and the rule probabilities are all created automatically, moreover from raw corpora, whereas in pcfgs, only the rule probabilities are created automatically.",
        "A Statistical Machine Translation (smt) system is essentially composed of a translation model and a language model, where the former translates source language substrings into target language substrings, and the language model determines the most likely linearisation of the translated substrings.",
        "The currently most popular phrase-based smt (pbsmt) approach translates phrases (an arbitrary sequence of words, rather than the linguistic sense), whereas the original 'ibm models' translated words.",
        "Different pbsmt methods differ in how they construct the phrase translation table.",
        "We used the phrase-based translation model proposed by Koehn et al.",
        "(2003) and implemented in the moses toolkit (Koehn et al., 2007) which is based on the noisy channel model, where Bayes's rule is used to reformulate the task of translating a source language string f into a target language string e as finding the sentence e* such that e* = argmaxe Pr(e) Pr(f |e).",
        "The translation model (which gives Pr(f| e)) is obtained from a parallel corpus of source and target language texts, where the first step is automatic alignment using the giza++ word-level aligner.",
        "Word-level alignments are used to obtain phrase translation pairs using a set of heuristics.",
        "A 3-gram language model (which gives Pr(e)) for the target language is trained either on the same or a different corpus.",
        "For full details refer to Koehn et al.",
        "(2003; 2007).",
        "pbsmt offers a completely automatic method for constructing generators, where all that is required as input to the system building process is a corpus of paired mrs and realisations, on the basis of which the pbsmt approach constructs a mapping from msrs to realisations."
      ]
    },
    {
      "heading": "4. Ten Weather Forecast Text Generators 4.1 S UM TIME -Hybrid",
      "text": [
        "We included the original SumTime system (Reiter et al., 2005) in our evaluations.",
        "This rule-based system has two modules: a contentdetermination module and a microplanning and realisation module.",
        "It can be run without the content-determination module, taking content representations (tuple sequence as described in Section 2) as inputs, and is then called SumTime-Hybrid.",
        "SumTime-Hybrid is a traditional deterministic rule-based generation system, and took about one year to build.",
        "Table 1 shows an example forecast from the SumTime system (and corresponding outputs from the other systems, described below).",
        "We also included five pcru generators for the SumTime domain created previously (Belz, 2008).",
        "The pcru base generator for SumTime is a set of generation rules with atomic arguments that convert an input into a set of nl forecasts.",
        "To create inputs to the pcru generators, the input vectors as they appear in the corpus (see Section 2) are augmented and converted into sequence of nonterminals: First, information is added to each of the 7-tuples in an automatic preprocessing phase encoding whether the change in wind direction compared to the preceding 7-tuple was clockwise or anti-clockwise; whether change in wind speed was an increase or a decrease; and whether a 7-tuple was the last in the vector.",
        "Then, the augmented tuples are converted into a representation of nonterminals with 7 arguments.",
        "A probability distribution over the base generator was obtained by the multi-treebanking method (Belz, 2008) from the un-annotated SumTime corpus.",
        "This method first parses the corpus with the base cfg and then obtains rule-application frequency counts from the parsed corpus which are used to obtain a probability distribution by straigh-forward maximum likelihood estimation.",
        "If there is more than one parse for a sentence then the frequency count increment is equally split over rules in alternative parses.",
        "We created two probabilistic synchronous cfg (pscfg) generators for the SumTime domain using wasp .",
        "The main task here was to create a cfg for wind data representations.",
        "We used two different grammars (resulting in two different generators).",
        "The 'unstructured' grammar encodes raw corpus input vectors augmented as described in Section 4.2, whereas the 'semantic' grammar encodes representations with recursive predicate-argument structure that more resemble semantic forms.",
        "These were produced automatically from the raw input vectors.",
        "Both the pscfg-unstructured and the pscfg-semantic generators were built in the same way, by feeding the cfg for wind data representations and the corpus of paired wind data representations and forecasts to wasp-which then created probabilistic scfgs from it.",
        "Table 2: Mean forecast-level bleu scores and homogeneous subsets (Tukey hsd, alpha = .05) for SumTime test sets.",
        "We also created two SumTime generators with the moses toolkit.",
        "The main question here was how to represent the 'source language' inputs.",
        "While smt methods are often applied with no linguistic knowledge at all (and are therefore blind as to whether paired inputs and outputs are nl strings or something else), it was not clear how well they would cope with the task of mapping from number/symbol vectors to nl strings.",
        "We tested two different input representations, one of which was simply the augmented corpus input vectors as described above (pbsmt-unstructured), and another in which the individual 7-tuples of which the vectors are composed are explicitly marked by predicate-argument structure (pbsmt-structured).",
        "For comparability with Wong & Mooney (2007) the structure markers were treated as tokens.",
        "We built two different generators by feeding the two different versions of the paired corpus to moses.",
        "We did not use a factored translation model (the words used in weather forecasts did not vary sufficiently), or tuning."
      ]
    },
    {
      "heading": "5. Evaluation Methods",
      "text": [
        "The two automatic metrics used in the evaluations, nist and bleu, have been shown to correlate well with expert judgments (Pearson's r = 0.82 and 0.79 respectively) in the SumTime domain (Belz and Reiter, 2006).",
        "System",
        "BLEU",
        "Homogeneous subsets",
        "corpus",
        "1.00",
        "A",
        "pcfg-greedy",
        ".65",
        "B",
        "pscfg-sem",
        ".637",
        "B",
        "pscfg-unstr",
        ".617",
        "B",
        "C",
        "pcfg-viterbi",
        ".57",
        "C",
        "D",
        "pcfg-2gram",
        ".561",
        "D",
        "pcfg-roule",
        ".516",
        "D",
        "e",
        "pbsmt-unstr",
        ".500",
        "e",
        "SumTime",
        ".437",
        "f",
        "pbsmt-struc",
        ".338",
        "G",
        "pcfg-rand",
        ".269",
        "H",
        "bleu-x is an n-gram based string comparison measure, originally proposed by Papineni et al.",
        "(2001) for evaluation of mt systems.",
        "It computes the proportion of word n-grams of length x and less that a system output shares with several reference outputs.",
        "Setting x = 4 (i.e. considering all n-grams of length < 4) is standard.",
        "nist (Dodding-ton, 2002) is a version of bleu, but where bleu gives equal weight to all n-grams, nist gives more importance to less frequent (hence more informative) n-grams, and the range of nist scores depends on the size of the test set.",
        "Some research has shown nist to correlate with human judgments more highly than bleu (Doddington, 2002; Riezler and Maxwell, 2005; Belz and Reiter, 2006).",
        "We designed an experiment in which participants were asked to rate forecast texts for clarity and Readability on scales of 1-7. clarity was explained as indicating how understandable a forecast was, and Readability as indicating how fluent and readable it was.",
        "After an introduction and detailed explanations, participants carried out the evaluations over the web.",
        "They were able to interrupt and resume the evaluation at any time.",
        "We randomly selected 22 forecast dates and used outputs from all 10 systems for those dates (as well as the corresponding forecasts in the corpus) in the evaluation, i.e. a total of 242 forecast texts.",
        "We used a repeated Latin squares design where each combination of forecast date and system is assigned two trials.",
        "As there were 2 evaluation criteria, there were 968 individual ratings in this experiment.",
        "An evaluation session started with three training examples; the real trials were then presented in random order.",
        "We recruited 22 participants from among our university colleagues whose first language was English and who had no experience of nlp.",
        "We did not try to recruit master mariners as in earlier experiments reported by Reiter and Belz (2006), because these experiments also demonstrated that the correlation between the ratings by such expert evaluators and laypeople is very strong in the SumTime domain (Pearson's r = 0.845)."
      ]
    },
    {
      "heading": "6. Results",
      "text": [
        "For each evaluation method, we carried out a oneway anova with 'System' as the fixed factor, and the evaluation measure as the dependent variable.",
        "Table 3: Mean forecast-level nist scores and homogeneous subsets (Tukey hsd, alpha = .05) for SumTime test sets.",
        "In each case we report the main effect of System on the measure and (if it is significant) we also report significant differences between pairs of systems in the form of homogeneous subsets obtained with a post-hoc Tukey hsd analysis.",
        "Tables 2 and 3 display the results for the bleu and nist evaluations, where scores were calculated on test data sets, using a 5-fold cross-validation set-up.",
        "System names (in abbreviated form) are shown in the first column, mean forecast-level scores in the second, and the remaining columns indicate significant differences between systems.",
        "The way to read the homogeneous subsets is that two systems which do not have a letter in common are significantly different with p < .05.",
        "For the bleu evaluation, the main effect of System on bleu score was F = 248.274, at p < .001. pcfg-greedy, pscfg-semantic and pscfg-unstructured come out top, although only the first two are significantly better than all other systems.",
        "SumTime-Hybrid, pbsmt-structured and pcfg-random bring up the rear, with the remaining systems distributed over the middle ground.",
        "A striking result is that the handcrafted SumTime system comes out near the bottom, being significantly worse than all other systems except pcfg-structured and pbsmt-random.",
        "For the nist evaluation, the main effect of System on bleu score was F = 108.086, at p < .",
        "001 .",
        "The systems were ranked in the same way as in the bleu evaluation except for the systems in the D subset.",
        "The correlation between the nist and bleu scores is Pearson's r = .739, p < .001, Spearman's p = .748, p < .001.",
        "System",
        "nist",
        "Homogeneous subsets",
        "corpus",
        "4.062",
        "A",
        "pcfg-greedy",
        "3.361",
        "b",
        "pscfg-sem",
        "3.303",
        "b",
        "pscfg-unstr",
        "3.191",
        "b",
        "C",
        "pcfg-roule",
        "3.033",
        "C",
        "D",
        "pbsmt-unstr",
        "2.924",
        "D",
        "pcfg-viterbi",
        "2.854",
        "D",
        "e",
        "pcfg-2gram",
        "2.854",
        "D",
        "e",
        "SumTime",
        "2.707",
        "e",
        "f",
        "pcfg-rand",
        "2.540",
        "f",
        "pbsmt-struc",
        "2.331",
        "G",
        "Table 4: Mean clarity and Readability ratings from human evaluation; NIST and BLEU scores on same 22 forecasts as used in human evaluation.",
        "The main results from the automatic evaluations are that the two pscfg systems and the pcfg system with the greedy generation algorithm are best overall.",
        "However, the human evaluations produced rather different results.",
        "Figure 3 is a series of bar charts representing the results of the human evaluation for Clarity.",
        "For each system (indicated by the labels on the x-axis), there are 7 bars, showing how many ratings of 1, 2, 3, 4, 5, 6 and 7 (7 being the best) a system was given.",
        "So the leftmost bar for a system shows how many ratings of 1 a system was given, the second bar how many ratings of 2, etc.",
        "Systems are shown in descending order of mode (the value of the most frequently assigned rating, e.g. 7 for pscfg-unstructured on the left, and 1 for pbsmt-structured on the right).",
        "The pscfg-unstructured and SumTime systems come out top in this evaluation, with pscfg-semantic, pcfg-roulette and pcfg-greedy close behind.",
        "Conversely, pbsmt-structured clearly came out worst, with no ratings of 7 and a mode of 1 (=completely unclear).",
        "Figure 4 consists of the same kind of bar charts, for the Readability ratings.",
        "Here the SumTime system is the clear winner, with no ratings of 1 and 2 and 22 ratings of 7 (=excellent, all parts read well).",
        "It is closely followed by pscfg-unstructured, the corpus forecasts and pscfg-semantic.",
        "Again, pbsmt-structured is clearly worst with no ratings of 7, although this time the mode is 3 (=fairly bad).",
        "We also looked at the means of the ratings, and these are shown in the second and third columns of Table 4.",
        "The means have to be treated with some caution, because ratings are ordinal data and it is not clear how meaningful it is to compute means.",
        "However, it is a simple way of obtaining a system ranking for comparison with the two automatic scores (shown in the remaining two columns of Table 4, for the 22 dates in the human evaluation only).",
        "In terms of means, SumTime comes out top for both clarity and Readability.",
        "In Clarity, it is followed by the two pscfg systems, the corpus files (the only forecasts actually written by humans), and pcfg-greedy which have virtually the same means.",
        "For Readability, corpus and pscfg-unstructured are ahead of pscfg-semantic and pcfg-greedy (in this order).",
        "Bringing up the rear for both clarity and Readability, as in the nist evaluations, is pbsmt-structured, with pcfg-random and and pbsmt-unstructured faring somewhat better.",
        "There are some striking differences between the automatic and human evaluations.",
        "For one, the human evaluators rank the SumTime system very high, whereas both automatic metrics rank it very low, just above pcfg-random and pbsmt-structured.",
        "Furthermore, the metrics rank pbsmt-unstructured more highly than the human evaluators, placing it above the SumTime system and in the case of nist, also above two of the pcfg systems (Table 3).",
        "The human and the automatic evaluations agree only that the pscfg systems and pcfg-greedy are equally good."
      ]
    },
    {
      "heading": "7. Conclusions",
      "text": [
        "Reports of research on automating (part of) system building often take it as read that such automation is a good thing.",
        "The resulting systems are not often compared to handcrafted alternatives in terms of output quality or other quality criteria, and little is therefore known about the loss of system quality that results from automation.",
        "The existence of several independently developed systems for the SumTime domain of weather forecasts, to which we have added four new systems in the research reported in this paper, provides a unique opportunity to examine the system building cost vs. system quality trade-off in data-to-text generation.",
        "We investigated 10 systems which fall into four categories in terms of the manual work involved in creating them, ranging from completely manual to completely automatic system building.",
        "We found that increasing the automatic component in system building from a handcrafted system to an automatically trained but manually crafted generator led to a loss ofacceptability to humanreaders, butanim-provement in terms of n-gram similarity to corpus texts.",
        "Further increasing the automatic component to the point where only a cfg for meaning representations is created manually did not result in a further reduction in quality in either acceptability to humans or corpus similarity.",
        "However, completely removing the manual component resulted in a reduction in quality in both human acceptability and corpus similarity (although this is more apparent in the former).",
        "Scores on data from human evaluation",
        "Clarity",
        "Readability",
        "nist",
        "bleu",
        "SumTime",
        "6.06",
        "6.18",
        "5.71",
        "0.52",
        "pscfg-semantic",
        "5.79",
        "5.70",
        "6.76",
        "0.65",
        "corpus",
        "5.79",
        "5.93",
        "8.45",
        "1",
        "pcfg-greedy",
        "5.79",
        "5.63",
        "6.73",
        "0.67",
        "pscfg-unstruc",
        "5.72",
        "5.84",
        "6.61",
        "0.64",
        "pcfg-roulette",
        "5.29",
        "5.56",
        "6.07",
        "0.52",
        "pcfg-2gram",
        "5.29",
        "5.29",
        "5.23",
        "0.52",
        "pcfg-viterbi",
        "4.90",
        "5.34",
        "5.15",
        "0.51",
        "pcfg-random",
        "4.43",
        "4.52",
        "4.52",
        "0.25",
        "pbsmt-unstruc",
        "3.70",
        "3.93",
        "5.38",
        "0.49",
        "pbsmt-struc",
        "2.79",
        "2.77",
        "4.21",
        "0.33",
        "We found striking differences between the results from tests of human acceptability and measurements of corpus similarity.",
        "compared to the human ratings, the automatic metrics severely underestimated the quality of the handcrafted Sum-Time system, but overestimated the quality of the automatically constructed smt systems.",
        "This will not come as a surprise to those familiar with the machine translation evaluation literature where this is a major complaint about bleu (Callison-Burch et al., 2006).",
        "From our results it seems clear that when the quality ofdiverse types ofsystems is compared, automatic metrics such as bleu do not give a complete and reliable picture, and carrying out additional evaluations is crucial.",
        "increased reusability and adaptability of systems and components have cost and time benefits, and methods for automatically training systems from data offer advantages in both these respects.",
        "However, careful evaluation is needed to ensure that these advantages are not achieved at the price of a reduction in system quality that renders systems unacceptable to human users."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "The research reported in this paper was supported under epsrc grant EP/E029116/1 (the Prodigy Project).",
        "We thank the anonymous reviewers for their helpful comments."
      ]
    }
  ]
}
