{
  "info": {
    "authors": [
      "Yoshihiro Ueda",
      "Kiyoshi Kogure"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C90-1013",
    "title": "Generation for Dialogue Translation Using Typed Feature Structure Unification",
    "url": "https://aclweb.org/anthology/C90-1013",
    "year": 1990
  },
  "references": [
    "acl-C86-1016",
    "acl-E89-1036",
    "acl-P87-1033",
    "acl-P89-1002",
    "acl-T87-1042"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This article introduces a bidirectional grammar generation system called feature structure-directed generation, developed for a dialogue translation system.",
        "The system utilizes typed feature structures to control the top-down derivation in a declarative way.",
        "This generation system also uses disjunctive feature structures to reduce the number of copies of the derivation tree.",
        "The grammar for this generator is designed to properly generate the speaker's intention in a telephone dialogue."
      ]
    },
    {
      "heading": "1 . Introduction",
      "text": [
        "It is important for the generation part of the dialogue translation system to reflect the speaker's intention (illocutionary force).",
        "To properly translate the illocutionary forces, the Intention Translation Method has been developed at ATR (Kogure et al., 1989).",
        "This generator was developed as a part of the dialogue translation system.",
        "Bidirectional grammar is helpful in maintaining the grammar/lexicon (Appelt, 1987).",
        "A feature structure representation has been adopted for analysis result and generation input because it can keep various information including illocutionary forces and pragmatics in a consistent way.",
        "The infinite application of grammar rules is a common problem of the existing top-down unification-based generators (Shieber et al., 1989).",
        "The solution adopted here is to control the generation process by selecting appropriate rules to apply.",
        "Typed feature structures (AIt-Kaci, 1986) are utilized to describe the control of the generation process in a declarative way.",
        "This description can also be used to avoid the derivation of unnecessary trees and to increase the generation efficiency.",
        "Another problem of the top-down generators is making multiple copies of the phrase structure when the generation process encounters multiple rule candidates.",
        "This problem can be treated by introducing disjunctive feature structures.",
        "This article first describes the advantages of typed feature structures and disjunctive feature structures in sections 2 and 3.",
        "The grammar for the generation system and the generation results are shown in section 4.",
        "The current status of this project and future tasks are described in section 5."
      ]
    },
    {
      "heading": "2 . Introducing Typed Feature Structures",
      "text": []
    },
    {
      "heading": "2.1 Selecting Appropriate Rules",
      "text": [
        "The basic mechanism of this generator is the top-down application of the grammar rules and construction of the feature structures of the daughter nodes.",
        "It is important to avoid the derivation of unnecessary phrase structures by selecting appropriate rules to apply in order to increase the efficiency.",
        "Consider the following rules taken from D-PATR (Karttunen, 1986).",
        "The construction of the semantic representations given to the mother nodes of these In this rule, =HC*=> link shows that the first element of the right hand symbols becomes the head daughter and the others the complement daughters.",
        "=CH..> link is also supplied for complement-head constructions.",
        "A symbol with an exclamation mark (I) indicates a predefined template.",
        "In this rule, !m stands for the mother, i.e., the left-hand VP.",
        "two rules are the same (predicate-argument structure), as can be seen below: for (2) ... rein in obje rein play _ lac agen john' [ obje soccer' a-park'"
      ]
    },
    {
      "heading": "Fig.1 Sample feature structure",
      "text": [
        "In generation, appropriate grammar rules must be selected using this representation.",
        "For this purpose, the difference between these feature structures must be found in the type of the key feature value's type.",
        "In this case, the rein (relation) feature plays the key role, and the value \"play\" must be of the verb type and \"in\" the prepositional type.",
        "Typed feature structures formulated by Alt-Kaci (1986) are introduced to handle types in feature structures, because types cannot be handled by ordinary feature structure unification.",
        "Using typed feature structures, the following specifications can be attached to the former rules.",
        "For (1): (<!m sem cont reln> == [11) For (2): (<!m sem cont reln> == [9) These specifications work as constraints to the rule application.",
        "The first specification shows that the <sem cont reln> feature of the node is unified to the type V (bracketed, shown in bold italics).",
        "If the unification succeeds, i.e., the <sem cont reln> feature is under V type in the type hierarchy, this grammar rule can be applied.",
        "The selection of appropriate grammar rules is thus accomplished in a declarative way."
      ]
    },
    {
      "heading": "2.2 Avoiding Termination Problem",
      "text": [
        "There are various ways to utilize the type hierarchy.",
        "One example is subclassifying the categories.",
        "One of the termination problems Shieber et al.",
        "(1989) pointed out is in the left-recursive rules.",
        "The rule (1) infinitely appends the subcat list to the daughter VP if the grammar is used for generation.",
        "This can be solved by restricting the permissible length of the subcat listt .",
        "The maximum length of the subcat list is 2, excluding the subject.",
        "This restriction can be represented as follows.",
        "1-1- Though the restriction cannot be applied to languages like Dutch (Shieber et al., 1989), the limitation is irrelevant to our purpose (translation between Japanese and English).",
        "(:or (<Im !subcat> == [list-end])) (<Im !subcat rest> â€“ [list-end])) However, this restriction forces the rule (2) to be applied twice to all verbs including intransitive verbs.",
        "Derivation of the phrase structures with incorrectly extended subcat lists will fail when the terminal is reached.",
        "This restriction can be solved more effectively using the type hierarchy.",
        "If verbs are classified into three subtypes (Monadic, Dyadic and Triadic) by the numbers of their arguments, the restriction in rule (1) can be written as follows.",
        "(:or ((<!m sem cant rein> == [dyadic])"
      ]
    },
    {
      "heading": "2.3 Relating Types and Categories",
      "text": [
        "Another function of the type hierarchy is using the types as a bridge between the semantics in the feature structure and the category in the CFG rules.",
        "Categories (nonterminal symbols) are also expressed by, and are closely related to, types.",
        "The following lexical entry definition shows that the complement of the verb is VP.",
        "(deflex \"must\" dyadic",
        "If type VP is a subtype of XP, [XP] and [VP] are unified to bear [VP] when the lexical entry \"must\" is unified in rule (1).",
        "In D-PATR, such unspecified categories are treated by the system by introducing special symbols X, Y, etc.",
        "Typed feature structures serve as a sound foundation for this task."
      ]
    },
    {
      "heading": "3 . Introducing Disjunctive Feature",
      "text": []
    },
    {
      "heading": "Structure Unification",
      "text": [
        "Introduction of disjunctive feature structures solves the inefficiency caused by making copies of whole trees when a node can be applied to multiple candidates of rules.",
        "For example, multiple copying is caused by the mutual restriction between the subject and the verb (subcategorizing by verb and subject-verb agreement).",
        "The verb cannot be determined until the subject is determined and the derivation tree must be copied for each verb candidate.",
        "Instead of copying the derivation tree, the surface entries of a verb are packed into a",
        "disjunctive feature structure in a lexical entry as follows.",
        "When the derivation proceeds and the subject is determined, one surface string is selected from these three candidates (see Fig. 2).",
        "The unification of disjunctive feature structures is implemented according to Kasper's algorithm (Kasper, 1987)."
      ]
    },
    {
      "heading": "4. Grammar and Examples",
      "text": [
        "The grammar developed for this generation system is based on HPSG (Pollard and Sag, 1987) and its modification by Borsley (1987).",
        "Relating illocutionary forces to utterances is achieved in this grammar.",
        "For example, consider the following feature structure including the REQUEST illocutionary force.",
        "From this feature structure, the following generation results can be obtained.",
        "(\"would you send me a registration form\" \"could you send me a registration form\" \"send me a registration form\") ;; \"send NP to NP\" form is suppressed here.",
        "Specifying one of these results can be done by enriching the input feature structure.",
        "5.",
        "Current Status and Further Tasks",
        "This article described how the generation process is effectively controlled by typed feature structures and disjunctive feature structures.",
        "The generation mechanism described here is implemented in Common Lisp on Symbolics Lisp Machines and Sun Workstations.",
        "A screen hardcopy of the environment is shown in Fig. 2.",
        "The grammar for this generation system is now under enrichment.",
        "The relationships between surface utterances and intentions need to be further explored.",
        "Kume et al. (1989) and Kogure et al. (1989) introduced illocutionary force type planning from deep illocutionary force type.",
        "Combining this method with the generator is the next task."
      ]
    },
    {
      "heading": "Acknowledgement",
      "text": [
        "The authors would like to express their appreciation to Mr. Hitoshi Iida and other researchers of ATR Natural Language Understanding Department for valuable suggestions and discussions."
      ]
    }
  ]
}
