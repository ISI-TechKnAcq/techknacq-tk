{
  "info": {
    "authors": [
      "Alexander Koller",
      "Joachim Niehren",
      "Stefan Thater"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E03-1024",
    "title": "Underspecification Formalisms: Hole Semantics as Dominance Constraints",
    "url": "https://aclweb.org/anthology/E03-1024",
    "year": 2003
  },
  "references": [
    "acl-P92-1005"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We define a back-and-forth translation between Hole Semantics and dominance constraints, two formalisms used in underspecified semantics.",
        "There are fundamental differences between the two, but we show that they disappear on practically useful descriptions.",
        "Our encoding bridges a gap between two underspecification formalisms, and speeds up the processing of Hole Semantics."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "In the past few years there has been considerable activity in the development of formalisms for underspecified semantics (Alshawi and Crouch, 1992; Reyle, 1993; Bos, 1996; Copestake et al., 1999; Egg et al., 2001).",
        "These approaches all aim at controlling the combinatorial explosion of readings of sentences with multiple ambiguities.",
        "The common idea is to delay the enumeration of all readings for as long as possible.",
        "Instead, they work with a compact underspecified representation for as long as possible, only enumerating readings from this representation by need.",
        "At first glance, many of these formalisms seem to be very similar to each other.",
        "Now the question arises how deep this similarity is - are all underspecification formalisms basically the same?",
        "This paper answers this question for Hole Semantics and normal dominance constraints, two logical formalisms used in scope underspecification, by defining a back-and-forth translation between the two.",
        "Due to fundamental differences in the way the two formalisms interpret underspecified descriptions, this encoding is only correct in a nonstandard sense.",
        "However, we identify a class of chain-connected underspecified representations for which these differences disappear, and the encoding becomes correct.",
        "We conjecture that all linguistically useful descriptions are chain-connected.",
        "To support this claim, we prove that all descriptions generated by a nontrivial grammar we define are indeed chain-connected.",
        "Our results are interesting because it is the first time in the literature that two practically relevant underspecification formalisms are formally related to each other.",
        "In addition, the satisfiability problems of Hole Semantics and normal dominance constraints coincide on their chain-connected fragments.",
        "This means that satisfiability of Hole Semantics, which is NP-complete in general (Althaus et al., 2003), becomes polynomial in practice, and can be checked using the efficient algorithms available for normal dominance constraints (Erk et al., 2002).",
        "Enumeration of readings becomes much more efficient accordingly."
      ]
    },
    {
      "heading": "2 Some Intuitions",
      "text": [
        "The similarity of Hole Semantics and dominance constraints is illustrated in Fig. 1.",
        "The pictures graphically represent the underspecified representations of all five readings of the sentence \"Every researcher of a company saw a sample\" in Hole Semantics (Bos, 1996) and as a dominance constraint (Egg et al., 2001).",
        "The underspecified representations specify the material that every reading is made up of and constraints on the way in which they can be combined in obviously similar ways.",
        "However, the interpretations of these underspecified representations differ.",
        "In Hole Semantics, the interpretation is given by means of plug-gings, where holes (the hi) and labels (4) are identified.",
        "In contrast, dominance constraints are interpreted by embedding descriptions into trees that may contain more material.",
        "This difference comes ........... A..........."
      ]
    },
    {
      "heading": "3 Dominance Constraints",
      "text": [
        "Dominance constraints are a general framework for the partial description of trees.",
        "They have been used in various areas of computational linguistics (Rogers and Vijay-Shanker, 1994; Gardent and Webber, 1998).",
        "For underspecified semantics, we consider semantic representations like higher-order formulas as trees.",
        "Dominance constraints can be extended to CLLS (Egg et al., 2001), which adds parallelism constraints to model ellipsis and binding constraints to account for variable binding without using variable names.",
        "We do not use these extensions here, for simplicity, but all results remain true if we allow binding constraints.",
        "We assume a signature L of function symbols ranged over by f,g, each of which is equipped with an arity ar(/) > 0, and an infinite set Vars of variables ranged over by X,F,Z.",
        "A dominance constraint (p is a conjunction of dominance, inequality, and labeling literals of the following form: cp ::= X<*Y |XjLY \\ X:f(Xx,... ,Xn) |cp A <p', where ar(/) = n. Dominance constraints are interpreted over finite constructor trees, and their variables denote nodes of a tree.",
        "We define an unlabeled tree to be a finite directed acyclic graph (V,E), where V is the set of nodes and E C V x V the set of edges.",
        "The indegree of each node is at most 1.",
        "Each tree has exactly one node (the root) with indegree 0.",
        "Nodes with outdegree 0 are called the leaves of the tree.",
        "A finite constructor tree % is a triple (T7Lv,Le) consisting of an unlabeled tree T = (V,E), a node labeling Lv : V – > E, and an edge labeling LE:E – s-N, s. t. for each node n£V there is an edge (w, v) E E withL£((«,v)) = k iff 1 < k < w{Lv{u)).",
        "Now we are ready to define tree structures, the models of dominance constraints: Definition 1 (Tree Structure).",
        "The tree structure <M.% of a constructor tree x = {{V,E),Lv1Le) is a first-order structure with domain V interpreting dominance and labeling.",
        "Let it,v,vi,...v„ E V. The dominance relationship u<\\*zv holds iff there is a path from u to v in E and the labeling relationship a:/x(vi,..., v„) holds iff u is labeled by the wary symbol / and has the children v\\,...,vn in this order; that is, Lv(u) = f, ar(/) = n, {(u,vj),...,(m,v„)} C E, and Le((u,Vi)) = i for all 1 < i < n. Let (p be a dominance constraint and Var((p) be the set of variables of (p. A pair of a tree structure 9v[z and a variable assignment a : Var(cp) – > Vxsatisfies cp iff it satisfies each literal in the obvious way.",
        "We say that {Mx, a) is a solution of cp in this case; (p is satisfiable if it has a solution.",
        "Entailment cp |= cp' holds between two constraints iff every solution of cp is also a solution of cp'.",
        "We often represent dominance con f • straints as (directed) constraint graphs; <?y*v for example, the graph in Fig. 2 stands a * b» for the constraint X:f(Y) AY<*ZAY<*Z' AZ:a A Z':b.",
        "This constraint is satisfied e.g. by the tree structure displayed here.",
        "Note the added g. The satisfiability problem of dominance constraints (i.e. deciding whether a constraint has a solution) is NP-complete (Erk et al., 2002).",
        "However, Althaus et al.",
        "(2003) show that satisfiability becomes polynomial if the constraint cp is normal, i.e. satisfies the following very natural conditions:",
        "(Nl) Every variable occurs in a labeling constraint.",
        "(N2) Every variable occurs at most once on the right-hand side and at most once on the left-hand side of a labeling constraint.",
        "Variables that don't occur on a left-hand side are called holes; variables that don't occur on a right-hand side are called roots.",
        "(N3) If X<\\*Y occurs in cp, X is a hole and Y is a root.",
        "(N4) If X and Y are different variables that are not holes, there is a constraint X / Y in cp.",
        "The graph of a normal constraint (e.g. the one in in Fig. 1) consists of solid tree fragments (Nl, N2) that are connected by dominance edges (N3); these fragments may not overlap in a solution (N4).",
        "Because every satisfiable dominance constraint cp has an infinite number of solutions, algorithms typically enumerate its solved forms instead (Erk et al., 2002).",
        "A solved form is a constraint that differs from cp only in its dominance literals.",
        "Its graph must be a tree, and the reachability relation on the graph must include the reachability in the graph of cp.",
        "Every solved form of cp has a solution, and every solution of cp satisfies one of its solved forms; so we can see solved forms as representing classes of solutions that only differ in irrelevant details (e.g. unnecessary extra material).",
        "Another way to avoid infinite solutions sets is to consider constructive solutions only.",
        "A solution [fM-i ex) of a constraint cp is constructive if every node in M is denoted by a variable in Var(cp) on the left-hand side of a labeling constraint.",
        "Intuitively, this means that the solution consists only of the material mentioned in the labeling constraints.",
        "Not all solutions are constructive; for example, Fig. 2 is a solved form but has no constructive solutions.",
        "The problem of deciding whether a normal dominance constraint does have constructive solutions is again NP-complete (Althaus et al., 2003)."
      ]
    },
    {
      "heading": "4 Hole Semantics",
      "text": [
        "(PI) U has a unique top element, from which all other nodes in the graph can be reached.",
        "(P2) The graph of U is acyclic.",
        "(P3) Every label and every hole except for the top hole occurs exactly once in L\\j}",
        "For example, the USR shown in Fig. 1 is proper; its top element is ho.",
        "The solutions of underspecified representations are called admissible pluggings.",
        "A plugging is a bijection from the holes to the labels of an USR.",
        "Intuitively, we \"plug\" every hole with a formula (named by its label), and a plugging is admissible if it respects the constraints on the order of holes and labels.",
        "Definition 2 (P-domination).",
        "Let k, k!",
        "be holes or labels of some underspecified representation U, and P a plugging on U.",
        "Then k P-dominates k!",
        "iff one of the following conditions holds:",
        "1. k : F £ Lu and k' occurs in F, or 3.",
        "There is a hole or label k\" such that k P-dominates k\" and k\" P-dominates k'.",
        "'The restriction on hole occurrences is missing in (Bos, 2002), but is necessary to rule out counterintuitive USRs.",
        "Definition 3 (Admissible Plugging).",
        "A plugging P is admissible for a proper USR Uiffk<k'E Cu implies that k' P-dominates k. 5 Hole Semantics as Dominance Constraints",
        "Now we have the formal machinery to make the intuitive similarity between Hole Semantics and dominance constraints described in Section 2 precise.",
        "We shall define encodings from Hole Semantics to normal dominance constraints and back, and show that this preserves models in a certain sense.",
        "To keep things simple, the results in this sections will only speak about compact normal dominance constraints.",
        "A dominance constraint is compact if no variable occurs in two different labeling constraints.",
        "A very nice property (which we need below) of compact normal constraints is that every variable is either a root or a hole.",
        "However, any normal constraint can be made compact by an operation called compactification, which compresses conjunctions of labeling constraints into single labeling constraints with more complex labels.",
        "So the encodings and results are more more generally correct for arbitrary normal dominance constraints (with acyclic graphs).",
        "From Hole Semantics to Dominance Constraints.",
        "Assume U – (Lu,Cu) is a proper USR.",
        "To obtain a compact dominance constraint tyu that encodes the same information, we first encode every labeled formula l:F(h],...,hn) as the labeling constraint l:F(h\\,...,hn).",
        "We encode every constraint / < h in Cu as a dominance constraint h<\\*l - except if h is the unique top hole and does not occur as a hole in a labeled formula.",
        "Finally, we add a constraint / / /' for every label /.",
        "This encoding maps labels and holes to variables; labels end up as roots, and holes become holes.",
        "This means cp^ satisfies axiom (N3).",
        "(N2) follows from (P3).",
        "(Nl) and (N4) are obvious from the construction.",
        "Hence cpy is normal.",
        "From Dominance Constraints to Hole Semantics.",
        "Assume cp is a compact normal dominance constraint whose graph is acyclic.",
        "To obtain a proper USR Uq encoding the same information, we first split the variables Var(cp) into holes and labels: roots become labels, and holes become holes.",
        "Then we encode every labeling constraint X:f{X\\,...,Xn) as the labeled formula X:f(X\\,Xn), and we encode every dominance constraint X<\\*Y as the constraint Y < X.",
        "Finally, we add a top hole ho and a constraint I < ho for every label / in (7<p. (7<p is a well-defined USR because of (N3).",
        "(PI) is obvious: ho is the unique top element.",
        "The graph is acyclic because the graph of cp is acyclic, so (P2) holds.",
        "(P3) holds because every label names at least one formula by construction, and no more than one by (N2).",
        "This back-and-forth encoding has the following property: Theorem 4.",
        "Compact normal dominance constraints cp with acyclic graphs and proper USRs U can be encoded into each other, in such a way that the pluggings of U and the constructive solutions o/cp correspond.",
        "Proof.",
        "We only show that the solutions of an USR U and its encoding cp^ correspond; the other direction is analogous.",
        "Assume first that we have a plugging P of U.",
        "We build a tree which satisfies cpj/ constructively and has one node for every label / of U.",
        "The node label of this node is the formula that I addresses.",
        "Starting at the top element, we work our way down the USR; whenever we find a hole h, we continue at the label P(h).",
        "Conversely, assume we have a constructive solution M of cp.",
        "Every node in M is denoted by a variable.",
        "Because holes have no labeling constraints, every hole h must denote the same node as a root P{h).",
        "Further, every root that is not the root of the entire tree denotes the child of another root, i.e. denotes the same node as a hole.",
        "We obtain an admissible plugging by mapping each hole h to the label P{h) in the USR, and mapping the new top hole ho to the label denoting the root of the tree.",
        "□"
      ]
    },
    {
      "heading": "6 From Solved Forms to Constructive Solutions",
      "text": [
        "Theorem 4 establishes a very strong connection between Hole Semantics and normal dominance constraints.",
        "But it is not quite what we want: Normal dominance constraints are almost always considered with respect to arbitrary solutions (or solved forms), and not constructive solutions.",
        "Constraints such as Fig. 2 are solved forms, but have no constructive solutions.",
        "The efficient algorithms available for normal constraints check for solved forms, and aren't necessarily correct for constructive satisfiability.",
        "In this section, we establish that for normal dominance constraints which are chain-connected and leaf-labeled (to be defined below), satisfiability and constructive satisfiability are equivalent; i.e. such a constraint has a constructive solution if only it is satisfiable.",
        "The proof proceeds in three steps: First we show that all solved forms of a normal constraint are simple iff the constraint branches constructively.",
        "Then we show that if a constraint is chain-connected, it branches constructively.",
        "Finally, every simple solved form of a leaf-labeled constraint has a constructive solution.",
        "We call a solved form simple if its graph has no node with two outgoing dominance edges (i.e.",
        "Fig.",
        "2 is not simple).",
        "This means that we can decide for any two variables how they will be situated in a solution of the solved form.",
        "They can either dominate each other in either direction, or they can be disjoint.",
        "But if they are disjoint, we also know the lowest node that dominates them both, and this branching point is necessarily also denoted by a variable on the left-hand side of a labeling constraint.",
        "This motivates the following definition.",
        "We locally allow disjunctions of constraints and use an auxiliary constraint, the disjointness constraint X-LY at O, where O is a set of variables.",
        "It is satisfied if X and Y denote disjoint nodes whose branching point is denoted by a member of O.",
        "1.",
        "O is nonempty.",
        "2.",
        "For each I <i < n, either (b) F £ U and F+i £ 0, and there is a hole Xi+l:l of F+i s.t.",
        "<p\\=Xi+ij<*Hl(Fi).",
        "3.",
        "For 1 < i < n s.t.",
        "F e O, the holes Xy and X-hrare different.",
        "O is called the set of upper fragments of the chain, and 11 is the set of lower fragments.",
        "We call all the Xjj and Xj>r connecting holes of C, and all other holes in any of its fragments open holes.",
        "A schematic picture of a chain is shown in Fig. 3.",
        "Note that although the definition of a chain involves the rather abstract condition that dominance between to variables is entailed by the constraint, this condition can often be established syntactically - for example in Fig. 3 by the explicit dominance edges.",
        "Chains were originally introduced by Koller et al.",
        "(2000) because they have very useful structural properties.",
        "A particularly useful one is the following.",
        "Lemma 9 (Structural Properties of Chains).",
        "Let q>be a normal dominance constraint, and let C be a chain that contains all variables of cp.",
        "Let Vo be the set of all variables in upper fragments of C that are not holes.",
        "Then ifX,Y are variables in different fragments of C, the following structural property holds: Using this lemma, it is easy to show that whenever a constraint is chain-connected, it also branches constructively.",
        "Definition 10.",
        "Two variables X,Y of a normal dominance constraint cp are chain-connected in cp iff there is a chain C in cp that contains both X and Y.",
        "A constraint is chain-connected iff every pair of variables is chain-connected.",
        "Proposition 11.",
        "Every chain-connected dominance constraint cp branches constructively.",
        "Proof.",
        "Let X,7 be two arbitrary variables in cp.",
        "If X and Y belong to the same fragment, there is obviously a connecting chain containing just this fragment.",
        "Otherwise, constructive branching for X and Y follows from Lemma 9.",
        "□ For the last step of the proof, we define that a normal dominance constraint is leaf-labeled if every variable occurs on the left-hand side of a labeling or dominance literal.",
        "Such constraints have the following property: Lemma 12.",
        "Every simple solved form of a leaf-labeled constraint has a constructive solution.",
        "Putting it all together, we obtain the intended result: Theorem 13.",
        "Every solved form of a chain-connected, leaf-labeled normal dominance constraint has a constructive solution.",
        "We can transfer the notions of chain-connectedness and leaf-labeledness to USRs either by a direct definition or by defining that U is chain-connected or leaf-labeled iff cp^ is.",
        "Then we can state the following theorem: Corollary 14 (Processing of Hole Semantics).",
        "The problem whether a chain-connected, leaf-labeled proper USR has a plugging is polynomial.",
        "Proof.",
        "Simply check the corresponding dominance constraint for satisfiability.",
        "Althaus et al.",
        "(2003) give a quadratic satisfiability algorithm; Thiel (2002) improves this to linear.",
        "□"
      ]
    },
    {
      "heading": "7 Connectedness in a Grammar",
      "text": [
        "Finally, we claim that chain-connectedness and leaf-labeledness are very weak assumptions to make about a normal dominance constraint, and conjecture that all linguistically useful constraints satisfy them.",
        "We define a nontrivial grammar for a fragment of English and show that it only generates dominance constraints with these properties.",
        "The argument we use to establish chain-connectedness (the less obvious property) is fairly general, and should be applicable to other grammar fragments as well.",
        "The grammar we use is a variant of the one presented in (Egg et al., 2001).",
        "Its syntax-semantics interface produces dominance constraints describing formulas of higher-order logic; the symbol @ stands for functional application, and abstraction and variables are written as 'lamx' and 'varx'.",
        "We use dominance constraints because this gives us the logical tools we need in the proof; but by Theorem 4, we can translate all results back into proper USRs, and those USRs will also be chain-connected.",
        "The syntactic component of the grammar consists of the following phrase structure rules.",
        "W *Xr wnere (W,cc) G Lex Most category labels are self-explanatory, perhaps except for SV, which refers to verbs taking sentence complements such as say, and RV, which refers to (object) raising verbs such as expect.",
        "The lexicon is defined by a relation Lex relating words and lexical categories.",
        "Rule (al3) expands lexical categories to words of the category.",
        "Every node V in a syntax tree contributes a constraint (pv; the variable is intuitively the \"root\" of this contribution.",
        "We assume that the syntax provides for a coindexation of relative pronouns and their corresponding traces, and associate each NP with index / with a corresponding variable Xt.",
        "The variables are related by the rules in Fig. 4.",
        "Each syntactic production rule corresponds to one semantic construction rule, which defines the semantic contribution of a syntactic node.",
        "A construction rule of the form [v:p Q R] =>- cpv means that the node V in the syntax tree is labeled with P, and its two daughter nodes v' and v\" are labeled with Q and R, respectively.",
        "The semantic contribution of v is the constraint (pv, with fresh instances of 'lamx' and 'varx' where necessary.",
        "The complete constraint of a syntax tree with root V is the conjunction of the tpv/ for all nodes v' dominated by V, and inequalities that are needed to make the constraint normal.",
        "The proof that all constraints generated by this grammar are connected proceeds by structural induction over parse trees.",
        "The semantic contributions of leaves are trivially chains, and hence connected.",
        "What we show in the rest of this section is that if t is any subtree of the syntax tree, and all the semantics of all immediate subtrees of t are connected, then so is the semantics of t. We ignore the globally introduced inequality constraints because they have no effect on chain-connectedness.",
        "The central property of the construction rules that we exploit is the following: Proposition 15.",
        "Let cpo, - - •, tp« be chain-connected constraints such that where X[,...,Xn are open holes in all connecting chains in cpo- Then the constraint cpo A • • • A (p„ is chain-connected.",
        "This can be proved by induction.",
        "The base case n = 0 is trivial, and for the induction step we combine a connecting chain within cpo A • • • A cp„_i from an arbitrary X to Xn with a connecting chain within cp„ from Xn to an arbitrary Y.",
        "Chains are combined by taking all the fragments of the two smaller chains together.",
        "The assumption that the Xj are open holes in the connecting chains is needed for the problematic case in which the fragment containing Xn is an upper fragment in both chains.",
        "All constraints introduced by a semantics construction rule other than (Ml) are of this form: cpo corresponds to the constraint introduced by the rule, and cp ],..., cpra to the constraints associated with the daughter nodes.",
        "Hence, all constraints generated using only these rules are chain-connected.",
        "For the case of (bll), observe that the relative pronoun is coindexed with its trace.",
        "This means that the variable X^, occurs in the same fragment as X^„, so (bll) also satisfies the general scheme.",
        "An easier structural induction shows that the constraints are also leaf-labeled.",
        "Hence: Corollary 16.",
        "All constraints generated by the grammar are chain-connected and leaf-labeled."
      ]
    },
    {
      "heading": "8 Conclusion",
      "text": [
        "We have established the equivalence of Hole Semantics and normal acyclic dominance constraints with constructive solutions.",
        "They are equivalent to normal acyclic dominance constraints with standard solutions if the constraints are chain-connected and leaf-labeled.",
        "All constraints generated by our grammar have these properties; we conjecture this is true more generally.",
        "This bridges a gap between the two underspecification formalisms, which means that we can now combine the simplicity of hole semantics with the efficient algorithms, powerful metatheory, and extensibility of dominance constraints.",
        "A first practically useful result is a polynomial satisfiability algorithm for chain-connected, leaf-labeled USRs.",
        "Conversely, chain-connected dominance constraints inherit some of Hole Semantics' resource-sensitivity: Additional material need never be added to satisfy the constraint; but to model e.g. reinterpretation (Roller et al., 2000), this is still possible.",
        "This resource-sensitivity was the crucial difference between the two formalisms.",
        "In the future, it will be interesting to see how our results extend to other resource-sensitive underspecification formalisms - for example, to MRS (Copes-take et al., 1999), whose naive encoding into dominance constraints is less obviously normal, and which adds a more powerful outscopes relation."
      ]
    }
  ]
}
